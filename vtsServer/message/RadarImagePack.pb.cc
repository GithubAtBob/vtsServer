// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RadarImagePack.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RadarImagePack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RadarImagePack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RadarImagePack_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArpaTargetPack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArpaTargetPack_reflection_ = NULL;
const ::google::protobuf::Descriptor* RadarHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RadarHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* RadarRequst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RadarRequst_reflection_ = NULL;
const ::google::protobuf::Descriptor* RadarAISStatePack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RadarAISStatePack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RadarImagePack_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RadarImagePack_2eproto() {
  protobuf_AddDesc_RadarImagePack_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RadarImagePack.proto");
  GOOGLE_CHECK(file != NULL);
  RadarImagePack_descriptor_ = file->message_type(0);
  static const int RadarImagePack_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, reserved0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, utc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, view_center_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, view_center_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, view_scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, reserved1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, clientname_),
  };
  RadarImagePack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RadarImagePack_descriptor_,
      RadarImagePack::internal_default_instance(),
      RadarImagePack_offsets_,
      -1,
      -1,
      -1,
      sizeof(RadarImagePack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarImagePack, _internal_metadata_));
  ArpaTargetPack_descriptor_ = file->message_type(1);
  static const int ArpaTargetPack_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, reserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, rng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, brg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, orientation_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, sog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, cog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, scans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, clientname_),
  };
  ArpaTargetPack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArpaTargetPack_descriptor_,
      ArpaTargetPack::internal_default_instance(),
      ArpaTargetPack_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArpaTargetPack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArpaTargetPack, _internal_metadata_));
  RadarHeader_descriptor_ = file->message_type(2);
  static const int RadarHeader_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, stateflags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, reserved0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, utc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, control_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, tune_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, tune_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, tune_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, pad_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, controlbits0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, controlbits1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, clientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, arpastate_),
  };
  RadarHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RadarHeader_descriptor_,
      RadarHeader::internal_default_instance(),
      RadarHeader_offsets_,
      -1,
      -1,
      -1,
      sizeof(RadarHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarHeader, _internal_metadata_));
  RadarRequst_descriptor_ = file->message_type(3);
  static const int RadarRequst_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRequst, mess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRequst, name_),
  };
  RadarRequst_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RadarRequst_descriptor_,
      RadarRequst::internal_default_instance(),
      RadarRequst_offsets_,
      -1,
      -1,
      -1,
      sizeof(RadarRequst),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRequst, _internal_metadata_));
  RadarAISStatePack_descriptor_ = file->message_type(4);
  static const int RadarAISStatePack_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, reserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, mms_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, imo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, callsign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, cargo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, dimensions_),
  };
  RadarAISStatePack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RadarAISStatePack_descriptor_,
      RadarAISStatePack::internal_default_instance(),
      RadarAISStatePack_offsets_,
      -1,
      -1,
      -1,
      sizeof(RadarAISStatePack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarAISStatePack, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RadarImagePack_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RadarImagePack_descriptor_, RadarImagePack::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArpaTargetPack_descriptor_, ArpaTargetPack::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RadarHeader_descriptor_, RadarHeader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RadarRequst_descriptor_, RadarRequst::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RadarAISStatePack_descriptor_, RadarAISStatePack::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RadarImagePack_2eproto() {
  RadarImagePack_default_instance_.Shutdown();
  delete RadarImagePack_reflection_;
  ArpaTargetPack_default_instance_.Shutdown();
  delete ArpaTargetPack_reflection_;
  RadarHeader_default_instance_.Shutdown();
  delete RadarHeader_reflection_;
  RadarRequst_default_instance_.Shutdown();
  delete RadarRequst_reflection_;
  RadarAISStatePack_default_instance_.Shutdown();
  delete RadarAISStatePack_reflection_;
}

void protobuf_InitDefaults_RadarImagePack_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  RadarImagePack_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ArpaTargetPack_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RadarHeader_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RadarRequst_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RadarAISStatePack_default_instance_.DefaultConstruct();
  RadarImagePack_default_instance_.get_mutable()->InitAsDefaultInstance();
  ArpaTargetPack_default_instance_.get_mutable()->InitAsDefaultInstance();
  RadarHeader_default_instance_.get_mutable()->InitAsDefaultInstance();
  RadarRequst_default_instance_.get_mutable()->InitAsDefaultInstance();
  RadarAISStatePack_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_RadarImagePack_2eproto_once_);
void protobuf_InitDefaults_RadarImagePack_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_RadarImagePack_2eproto_once_,
                 &protobuf_InitDefaults_RadarImagePack_2eproto_impl);
}
void protobuf_AddDesc_RadarImagePack_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_RadarImagePack_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024RadarImagePack.proto\"\274\001\n\016RadarImagePac"
    "k\022\022\n\npackettype\030\001 \001(\005\022\021\n\treserved0\030\002 \003(\t"
    "\022\013\n\003utc\030\003 \001(\003\022\025\n\rview_center_x\030\004 \001(\001\022\025\n\r"
    "view_center_y\030\005 \001(\001\022\022\n\nview_scale\030\006 \001(\001\022"
    "\021\n\treserved1\030\007 \003(\t\022\r\n\005image\030\010 \001(\014\022\022\n\ncli"
    "entname\030\t \001(\t\"\327\001\n\016ArpaTargetPack\022\016\n\006numb"
    "er\030\001 \001(\005\022\020\n\010reserved\030\002 \001(\005\022\013\n\003rng\030\003 \001(\005\022"
    "\013\n\003brg\030\004 \001(\005\022\030\n\020orientation_size\030\005 \001(\005\022\013"
    "\n\003sog\030\006 \001(\005\022\013\n\003cog\030\007 \001(\005\022\r\n\005scans\030\010 \001(\005\022"
    "\r\n\005flags\030\t \001(\005\022\021\n\tlongitude\030\n \001(\005\022\020\n\010lat"
    "itude\030\013 \001(\005\022\022\n\nclientname\030\014 \001(\t\"\376\001\n\013Rada"
    "rHeader\022\022\n\npackettype\030\001 \001(\005\022\022\n\nstateflag"
    "s\030\002 \001(\005\022\021\n\treserved0\030\003 \003(\005\022\013\n\003utc\030\004 \001(\003\022"
    "\017\n\007control\030\005 \003(\005\022\020\n\010tune_min\030\006 \001(\005\022\020\n\010tu"
    "ne_max\030\007 \001(\005\022\022\n\ntune_value\030\010 \001(\005\022\013\n\003pad\030"
    "\t \003(\005\022\024\n\014controlbits0\030\n \001(\005\022\024\n\014controlbi"
    "ts1\030\013 \001(\005\022\022\n\nclientname\030\014 \001(\t\022\021\n\tarpaSta"
    "te\030\r \001(\005\")\n\013RadarRequst\022\014\n\004mess\030\001 \001(\t\022\014\n"
    "\004name\030\002 \001(\t\"\252\001\n\021RadarAISStatePack\022\016\n\006num"
    "ber\030\001 \001(\005\022\020\n\010reserved\030\002 \001(\005\022\016\n\006mms_id\030\003 "
    "\001(\005\022\013\n\003imo\030\004 \001(\005\022\020\n\010callsign\030\005 \001(\t\022\014\n\004na"
    "me\030\006 \001(\t\022\023\n\013destination\030\007 \001(\t\022\r\n\005cargo\030\010"
    " \001(\005\022\022\n\ndimensions\030\t \001(\005b\006proto3", 912);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RadarImagePack.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RadarImagePack_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_RadarImagePack_2eproto_once_);
void protobuf_AddDesc_RadarImagePack_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_RadarImagePack_2eproto_once_,
                 &protobuf_AddDesc_RadarImagePack_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RadarImagePack_2eproto {
  StaticDescriptorInitializer_RadarImagePack_2eproto() {
    protobuf_AddDesc_RadarImagePack_2eproto();
  }
} static_descriptor_initializer_RadarImagePack_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarImagePack::kPackettypeFieldNumber;
const int RadarImagePack::kReserved0FieldNumber;
const int RadarImagePack::kUtcFieldNumber;
const int RadarImagePack::kViewCenterXFieldNumber;
const int RadarImagePack::kViewCenterYFieldNumber;
const int RadarImagePack::kViewScaleFieldNumber;
const int RadarImagePack::kReserved1FieldNumber;
const int RadarImagePack::kImageFieldNumber;
const int RadarImagePack::kClientnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarImagePack::RadarImagePack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_RadarImagePack_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadarImagePack)
}

void RadarImagePack::InitAsDefaultInstance() {
}

RadarImagePack::RadarImagePack(const RadarImagePack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RadarImagePack)
}

void RadarImagePack::SharedCtor() {
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&utc_, 0, reinterpret_cast<char*>(&packettype_) -
    reinterpret_cast<char*>(&utc_) + sizeof(packettype_));
  _cached_size_ = 0;
}

RadarImagePack::~RadarImagePack() {
  // @@protoc_insertion_point(destructor:RadarImagePack)
  SharedDtor();
}

void RadarImagePack::SharedDtor() {
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarImagePack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarImagePack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RadarImagePack_descriptor_;
}

const RadarImagePack& RadarImagePack::default_instance() {
  protobuf_InitDefaults_RadarImagePack_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RadarImagePack> RadarImagePack_default_instance_;

RadarImagePack* RadarImagePack::New(::google::protobuf::Arena* arena) const {
  RadarImagePack* n = new RadarImagePack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarImagePack::Clear() {
// @@protoc_insertion_point(message_clear_start:RadarImagePack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RadarImagePack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RadarImagePack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(utc_, packettype_);
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  reserved0_.Clear();
  reserved1_.Clear();
}

bool RadarImagePack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadarImagePack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 packettype = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packettype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reserved0;
        break;
      }

      // repeated string reserved0 = 2;
      case 2: {
        if (tag == 18) {
         parse_reserved0:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reserved0()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reserved0(this->reserved0_size() - 1).data(),
            this->reserved0(this->reserved0_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarImagePack.reserved0"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reserved0;
        if (input->ExpectTag(24)) goto parse_utc;
        break;
      }

      // optional int64 utc = 3;
      case 3: {
        if (tag == 24) {
         parse_utc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &utc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_view_center_x;
        break;
      }

      // optional double view_center_x = 4;
      case 4: {
        if (tag == 33) {
         parse_view_center_x:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_center_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_view_center_y;
        break;
      }

      // optional double view_center_y = 5;
      case 5: {
        if (tag == 41) {
         parse_view_center_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_center_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_view_scale;
        break;
      }

      // optional double view_scale = 6;
      case 6: {
        if (tag == 49) {
         parse_view_scale:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &view_scale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_reserved1;
        break;
      }

      // repeated string reserved1 = 7;
      case 7: {
        if (tag == 58) {
         parse_reserved1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reserved1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reserved1(this->reserved1_size() - 1).data(),
            this->reserved1(this->reserved1_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarImagePack.reserved1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_reserved1;
        if (input->ExpectTag(66)) goto parse_image;
        break;
      }

      // optional bytes image = 8;
      case 8: {
        if (tag == 66) {
         parse_image:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_clientname;
        break;
      }

      // optional string clientname = 9;
      case 9: {
        if (tag == 74) {
         parse_clientname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarImagePack.clientname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadarImagePack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadarImagePack)
  return false;
#undef DO_
}

void RadarImagePack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadarImagePack)
  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->packettype(), output);
  }

  // repeated string reserved0 = 2;
  for (int i = 0; i < this->reserved0_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved0(i).data(), this->reserved0(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.reserved0");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->reserved0(i), output);
  }

  // optional int64 utc = 3;
  if (this->utc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->utc(), output);
  }

  // optional double view_center_x = 4;
  if (this->view_center_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->view_center_x(), output);
  }

  // optional double view_center_y = 5;
  if (this->view_center_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->view_center_y(), output);
  }

  // optional double view_scale = 6;
  if (this->view_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->view_scale(), output);
  }

  // repeated string reserved1 = 7;
  for (int i = 0; i < this->reserved1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved1(i).data(), this->reserved1(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.reserved1");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->reserved1(i), output);
  }

  // optional bytes image = 8;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->image(), output);
  }

  // optional string clientname = 9;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.clientname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->clientname(), output);
  }

  // @@protoc_insertion_point(serialize_end:RadarImagePack)
}

::google::protobuf::uint8* RadarImagePack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadarImagePack)
  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->packettype(), target);
  }

  // repeated string reserved0 = 2;
  for (int i = 0; i < this->reserved0_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved0(i).data(), this->reserved0(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.reserved0");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->reserved0(i), target);
  }

  // optional int64 utc = 3;
  if (this->utc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->utc(), target);
  }

  // optional double view_center_x = 4;
  if (this->view_center_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->view_center_x(), target);
  }

  // optional double view_center_y = 5;
  if (this->view_center_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->view_center_y(), target);
  }

  // optional double view_scale = 6;
  if (this->view_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->view_scale(), target);
  }

  // repeated string reserved1 = 7;
  for (int i = 0; i < this->reserved1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved1(i).data(), this->reserved1(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.reserved1");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->reserved1(i), target);
  }

  // optional bytes image = 8;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->image(), target);
  }

  // optional string clientname = 9;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarImagePack.clientname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->clientname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RadarImagePack)
  return target;
}

size_t RadarImagePack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadarImagePack)
  size_t total_size = 0;

  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packettype());
  }

  // optional int64 utc = 3;
  if (this->utc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->utc());
  }

  // optional double view_center_x = 4;
  if (this->view_center_x() != 0) {
    total_size += 1 + 8;
  }

  // optional double view_center_y = 5;
  if (this->view_center_y() != 0) {
    total_size += 1 + 8;
  }

  // optional double view_scale = 6;
  if (this->view_scale() != 0) {
    total_size += 1 + 8;
  }

  // optional bytes image = 8;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  // optional string clientname = 9;
  if (this->clientname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  // repeated string reserved0 = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reserved0_size());
  for (int i = 0; i < this->reserved0_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reserved0(i));
  }

  // repeated string reserved1 = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reserved1_size());
  for (int i = 0; i < this->reserved1_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reserved1(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarImagePack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadarImagePack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RadarImagePack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarImagePack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadarImagePack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadarImagePack)
    UnsafeMergeFrom(*source);
  }
}

void RadarImagePack::MergeFrom(const RadarImagePack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadarImagePack)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RadarImagePack::UnsafeMergeFrom(const RadarImagePack& from) {
  GOOGLE_DCHECK(&from != this);
  reserved0_.UnsafeMergeFrom(from.reserved0_);
  reserved1_.UnsafeMergeFrom(from.reserved1_);
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.utc() != 0) {
    set_utc(from.utc());
  }
  if (from.view_center_x() != 0) {
    set_view_center_x(from.view_center_x());
  }
  if (from.view_center_y() != 0) {
    set_view_center_y(from.view_center_y());
  }
  if (from.view_scale() != 0) {
    set_view_scale(from.view_scale());
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.clientname().size() > 0) {

    clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
  }
}

void RadarImagePack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadarImagePack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarImagePack::CopyFrom(const RadarImagePack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadarImagePack)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RadarImagePack::IsInitialized() const {

  return true;
}

void RadarImagePack::Swap(RadarImagePack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarImagePack::InternalSwap(RadarImagePack* other) {
  std::swap(packettype_, other->packettype_);
  reserved0_.UnsafeArenaSwap(&other->reserved0_);
  std::swap(utc_, other->utc_);
  std::swap(view_center_x_, other->view_center_x_);
  std::swap(view_center_y_, other->view_center_y_);
  std::swap(view_scale_, other->view_scale_);
  reserved1_.UnsafeArenaSwap(&other->reserved1_);
  image_.Swap(&other->image_);
  clientname_.Swap(&other->clientname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarImagePack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RadarImagePack_descriptor_;
  metadata.reflection = RadarImagePack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarImagePack

// optional int32 packettype = 1;
void RadarImagePack::clear_packettype() {
  packettype_ = 0;
}
::google::protobuf::int32 RadarImagePack::packettype() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.packettype)
  return packettype_;
}
void RadarImagePack::set_packettype(::google::protobuf::int32 value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:RadarImagePack.packettype)
}

// repeated string reserved0 = 2;
int RadarImagePack::reserved0_size() const {
  return reserved0_.size();
}
void RadarImagePack::clear_reserved0() {
  reserved0_.Clear();
}
const ::std::string& RadarImagePack::reserved0(int index) const {
  // @@protoc_insertion_point(field_get:RadarImagePack.reserved0)
  return reserved0_.Get(index);
}
::std::string* RadarImagePack::mutable_reserved0(int index) {
  // @@protoc_insertion_point(field_mutable:RadarImagePack.reserved0)
  return reserved0_.Mutable(index);
}
void RadarImagePack::set_reserved0(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RadarImagePack.reserved0)
  reserved0_.Mutable(index)->assign(value);
}
void RadarImagePack::set_reserved0(int index, const char* value) {
  reserved0_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:RadarImagePack.reserved0)
}
void RadarImagePack::set_reserved0(int index, const char* value, size_t size) {
  reserved0_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RadarImagePack.reserved0)
}
::std::string* RadarImagePack::add_reserved0() {
  // @@protoc_insertion_point(field_add_mutable:RadarImagePack.reserved0)
  return reserved0_.Add();
}
void RadarImagePack::add_reserved0(const ::std::string& value) {
  reserved0_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:RadarImagePack.reserved0)
}
void RadarImagePack::add_reserved0(const char* value) {
  reserved0_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:RadarImagePack.reserved0)
}
void RadarImagePack::add_reserved0(const char* value, size_t size) {
  reserved0_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:RadarImagePack.reserved0)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RadarImagePack::reserved0() const {
  // @@protoc_insertion_point(field_list:RadarImagePack.reserved0)
  return reserved0_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RadarImagePack::mutable_reserved0() {
  // @@protoc_insertion_point(field_mutable_list:RadarImagePack.reserved0)
  return &reserved0_;
}

// optional int64 utc = 3;
void RadarImagePack::clear_utc() {
  utc_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RadarImagePack::utc() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.utc)
  return utc_;
}
void RadarImagePack::set_utc(::google::protobuf::int64 value) {
  
  utc_ = value;
  // @@protoc_insertion_point(field_set:RadarImagePack.utc)
}

// optional double view_center_x = 4;
void RadarImagePack::clear_view_center_x() {
  view_center_x_ = 0;
}
double RadarImagePack::view_center_x() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.view_center_x)
  return view_center_x_;
}
void RadarImagePack::set_view_center_x(double value) {
  
  view_center_x_ = value;
  // @@protoc_insertion_point(field_set:RadarImagePack.view_center_x)
}

// optional double view_center_y = 5;
void RadarImagePack::clear_view_center_y() {
  view_center_y_ = 0;
}
double RadarImagePack::view_center_y() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.view_center_y)
  return view_center_y_;
}
void RadarImagePack::set_view_center_y(double value) {
  
  view_center_y_ = value;
  // @@protoc_insertion_point(field_set:RadarImagePack.view_center_y)
}

// optional double view_scale = 6;
void RadarImagePack::clear_view_scale() {
  view_scale_ = 0;
}
double RadarImagePack::view_scale() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.view_scale)
  return view_scale_;
}
void RadarImagePack::set_view_scale(double value) {
  
  view_scale_ = value;
  // @@protoc_insertion_point(field_set:RadarImagePack.view_scale)
}

// repeated string reserved1 = 7;
int RadarImagePack::reserved1_size() const {
  return reserved1_.size();
}
void RadarImagePack::clear_reserved1() {
  reserved1_.Clear();
}
const ::std::string& RadarImagePack::reserved1(int index) const {
  // @@protoc_insertion_point(field_get:RadarImagePack.reserved1)
  return reserved1_.Get(index);
}
::std::string* RadarImagePack::mutable_reserved1(int index) {
  // @@protoc_insertion_point(field_mutable:RadarImagePack.reserved1)
  return reserved1_.Mutable(index);
}
void RadarImagePack::set_reserved1(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RadarImagePack.reserved1)
  reserved1_.Mutable(index)->assign(value);
}
void RadarImagePack::set_reserved1(int index, const char* value) {
  reserved1_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:RadarImagePack.reserved1)
}
void RadarImagePack::set_reserved1(int index, const char* value, size_t size) {
  reserved1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RadarImagePack.reserved1)
}
::std::string* RadarImagePack::add_reserved1() {
  // @@protoc_insertion_point(field_add_mutable:RadarImagePack.reserved1)
  return reserved1_.Add();
}
void RadarImagePack::add_reserved1(const ::std::string& value) {
  reserved1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:RadarImagePack.reserved1)
}
void RadarImagePack::add_reserved1(const char* value) {
  reserved1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:RadarImagePack.reserved1)
}
void RadarImagePack::add_reserved1(const char* value, size_t size) {
  reserved1_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:RadarImagePack.reserved1)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RadarImagePack::reserved1() const {
  // @@protoc_insertion_point(field_list:RadarImagePack.reserved1)
  return reserved1_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RadarImagePack::mutable_reserved1() {
  // @@protoc_insertion_point(field_mutable_list:RadarImagePack.reserved1)
  return &reserved1_;
}

// optional bytes image = 8;
void RadarImagePack::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarImagePack::image() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.image)
  return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarImagePack::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarImagePack.image)
}
void RadarImagePack::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarImagePack.image)
}
void RadarImagePack::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarImagePack.image)
}
::std::string* RadarImagePack::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:RadarImagePack.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarImagePack::release_image() {
  // @@protoc_insertion_point(field_release:RadarImagePack.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarImagePack::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:RadarImagePack.image)
}

// optional string clientname = 9;
void RadarImagePack::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarImagePack::clientname() const {
  // @@protoc_insertion_point(field_get:RadarImagePack.clientname)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarImagePack::set_clientname(const ::std::string& value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarImagePack.clientname)
}
void RadarImagePack::set_clientname(const char* value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarImagePack.clientname)
}
void RadarImagePack::set_clientname(const char* value, size_t size) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarImagePack.clientname)
}
::std::string* RadarImagePack::mutable_clientname() {
  
  // @@protoc_insertion_point(field_mutable:RadarImagePack.clientname)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarImagePack::release_clientname() {
  // @@protoc_insertion_point(field_release:RadarImagePack.clientname)
  
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarImagePack::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    
  } else {
    
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:RadarImagePack.clientname)
}

inline const RadarImagePack* RadarImagePack::internal_default_instance() {
  return &RadarImagePack_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArpaTargetPack::kNumberFieldNumber;
const int ArpaTargetPack::kReservedFieldNumber;
const int ArpaTargetPack::kRngFieldNumber;
const int ArpaTargetPack::kBrgFieldNumber;
const int ArpaTargetPack::kOrientationSizeFieldNumber;
const int ArpaTargetPack::kSogFieldNumber;
const int ArpaTargetPack::kCogFieldNumber;
const int ArpaTargetPack::kScansFieldNumber;
const int ArpaTargetPack::kFlagsFieldNumber;
const int ArpaTargetPack::kLongitudeFieldNumber;
const int ArpaTargetPack::kLatitudeFieldNumber;
const int ArpaTargetPack::kClientnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArpaTargetPack::ArpaTargetPack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_RadarImagePack_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArpaTargetPack)
}

void ArpaTargetPack::InitAsDefaultInstance() {
}

ArpaTargetPack::ArpaTargetPack(const ArpaTargetPack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ArpaTargetPack)
}

void ArpaTargetPack::SharedCtor() {
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&number_) + sizeof(latitude_));
  _cached_size_ = 0;
}

ArpaTargetPack::~ArpaTargetPack() {
  // @@protoc_insertion_point(destructor:ArpaTargetPack)
  SharedDtor();
}

void ArpaTargetPack::SharedDtor() {
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ArpaTargetPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArpaTargetPack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArpaTargetPack_descriptor_;
}

const ArpaTargetPack& ArpaTargetPack::default_instance() {
  protobuf_InitDefaults_RadarImagePack_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ArpaTargetPack> ArpaTargetPack_default_instance_;

ArpaTargetPack* ArpaTargetPack::New(::google::protobuf::Arena* arena) const {
  ArpaTargetPack* n = new ArpaTargetPack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArpaTargetPack::Clear() {
// @@protoc_insertion_point(message_clear_start:ArpaTargetPack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ArpaTargetPack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ArpaTargetPack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_, scans_);
  ZR_(flags_, latitude_);
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ArpaTargetPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArpaTargetPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reserved;
        break;
      }

      // optional int32 reserved = 2;
      case 2: {
        if (tag == 16) {
         parse_reserved:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rng;
        break;
      }

      // optional int32 rng = 3;
      case 3: {
        if (tag == 24) {
         parse_rng:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rng_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_brg;
        break;
      }

      // optional int32 brg = 4;
      case 4: {
        if (tag == 32) {
         parse_brg:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_orientation_size;
        break;
      }

      // optional int32 orientation_size = 5;
      case 5: {
        if (tag == 40) {
         parse_orientation_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orientation_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sog;
        break;
      }

      // optional int32 sog = 6;
      case 6: {
        if (tag == 48) {
         parse_sog:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_cog;
        break;
      }

      // optional int32 cog = 7;
      case 7: {
        if (tag == 56) {
         parse_cog:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_scans;
        break;
      }

      // optional int32 scans = 8;
      case 8: {
        if (tag == 64) {
         parse_scans:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scans_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_flags;
        break;
      }

      // optional int32 flags = 9;
      case 9: {
        if (tag == 72) {
         parse_flags:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_longitude;
        break;
      }

      // optional int32 longitude = 10;
      case 10: {
        if (tag == 80) {
         parse_longitude:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_latitude;
        break;
      }

      // optional int32 latitude = 11;
      case 11: {
        if (tag == 88) {
         parse_latitude:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_clientname;
        break;
      }

      // optional string clientname = 12;
      case 12: {
        if (tag == 98) {
         parse_clientname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ArpaTargetPack.clientname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArpaTargetPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArpaTargetPack)
  return false;
#undef DO_
}

void ArpaTargetPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArpaTargetPack)
  // optional int32 number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reserved(), output);
  }

  // optional int32 rng = 3;
  if (this->rng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rng(), output);
  }

  // optional int32 brg = 4;
  if (this->brg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->brg(), output);
  }

  // optional int32 orientation_size = 5;
  if (this->orientation_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->orientation_size(), output);
  }

  // optional int32 sog = 6;
  if (this->sog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sog(), output);
  }

  // optional int32 cog = 7;
  if (this->cog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cog(), output);
  }

  // optional int32 scans = 8;
  if (this->scans() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->scans(), output);
  }

  // optional int32 flags = 9;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->flags(), output);
  }

  // optional int32 longitude = 10;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->longitude(), output);
  }

  // optional int32 latitude = 11;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->latitude(), output);
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArpaTargetPack.clientname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->clientname(), output);
  }

  // @@protoc_insertion_point(serialize_end:ArpaTargetPack)
}

::google::protobuf::uint8* ArpaTargetPack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArpaTargetPack)
  // optional int32 number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reserved(), target);
  }

  // optional int32 rng = 3;
  if (this->rng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rng(), target);
  }

  // optional int32 brg = 4;
  if (this->brg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->brg(), target);
  }

  // optional int32 orientation_size = 5;
  if (this->orientation_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->orientation_size(), target);
  }

  // optional int32 sog = 6;
  if (this->sog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sog(), target);
  }

  // optional int32 cog = 7;
  if (this->cog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cog(), target);
  }

  // optional int32 scans = 8;
  if (this->scans() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->scans(), target);
  }

  // optional int32 flags = 9;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->flags(), target);
  }

  // optional int32 longitude = 10;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->longitude(), target);
  }

  // optional int32 latitude = 11;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->latitude(), target);
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ArpaTargetPack.clientname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->clientname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ArpaTargetPack)
  return target;
}

size_t ArpaTargetPack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArpaTargetPack)
  size_t total_size = 0;

  // optional int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved());
  }

  // optional int32 rng = 3;
  if (this->rng() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rng());
  }

  // optional int32 brg = 4;
  if (this->brg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brg());
  }

  // optional int32 orientation_size = 5;
  if (this->orientation_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->orientation_size());
  }

  // optional int32 sog = 6;
  if (this->sog() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sog());
  }

  // optional int32 cog = 7;
  if (this->cog() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cog());
  }

  // optional int32 scans = 8;
  if (this->scans() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scans());
  }

  // optional int32 flags = 9;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // optional int32 longitude = 10;
  if (this->longitude() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->longitude());
  }

  // optional int32 latitude = 11;
  if (this->latitude() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->latitude());
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArpaTargetPack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArpaTargetPack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ArpaTargetPack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArpaTargetPack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArpaTargetPack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArpaTargetPack)
    UnsafeMergeFrom(*source);
  }
}

void ArpaTargetPack::MergeFrom(const ArpaTargetPack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArpaTargetPack)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ArpaTargetPack::UnsafeMergeFrom(const ArpaTargetPack& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
  if (from.rng() != 0) {
    set_rng(from.rng());
  }
  if (from.brg() != 0) {
    set_brg(from.brg());
  }
  if (from.orientation_size() != 0) {
    set_orientation_size(from.orientation_size());
  }
  if (from.sog() != 0) {
    set_sog(from.sog());
  }
  if (from.cog() != 0) {
    set_cog(from.cog());
  }
  if (from.scans() != 0) {
    set_scans(from.scans());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.clientname().size() > 0) {

    clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
  }
}

void ArpaTargetPack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArpaTargetPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArpaTargetPack::CopyFrom(const ArpaTargetPack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArpaTargetPack)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ArpaTargetPack::IsInitialized() const {

  return true;
}

void ArpaTargetPack::Swap(ArpaTargetPack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArpaTargetPack::InternalSwap(ArpaTargetPack* other) {
  std::swap(number_, other->number_);
  std::swap(reserved_, other->reserved_);
  std::swap(rng_, other->rng_);
  std::swap(brg_, other->brg_);
  std::swap(orientation_size_, other->orientation_size_);
  std::swap(sog_, other->sog_);
  std::swap(cog_, other->cog_);
  std::swap(scans_, other->scans_);
  std::swap(flags_, other->flags_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  clientname_.Swap(&other->clientname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArpaTargetPack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArpaTargetPack_descriptor_;
  metadata.reflection = ArpaTargetPack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArpaTargetPack

// optional int32 number = 1;
void ArpaTargetPack::clear_number() {
  number_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::number() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.number)
  return number_;
}
void ArpaTargetPack::set_number(::google::protobuf::int32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.number)
}

// optional int32 reserved = 2;
void ArpaTargetPack::clear_reserved() {
  reserved_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::reserved() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.reserved)
  return reserved_;
}
void ArpaTargetPack::set_reserved(::google::protobuf::int32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.reserved)
}

// optional int32 rng = 3;
void ArpaTargetPack::clear_rng() {
  rng_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::rng() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.rng)
  return rng_;
}
void ArpaTargetPack::set_rng(::google::protobuf::int32 value) {
  
  rng_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.rng)
}

// optional int32 brg = 4;
void ArpaTargetPack::clear_brg() {
  brg_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::brg() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.brg)
  return brg_;
}
void ArpaTargetPack::set_brg(::google::protobuf::int32 value) {
  
  brg_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.brg)
}

// optional int32 orientation_size = 5;
void ArpaTargetPack::clear_orientation_size() {
  orientation_size_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::orientation_size() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.orientation_size)
  return orientation_size_;
}
void ArpaTargetPack::set_orientation_size(::google::protobuf::int32 value) {
  
  orientation_size_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.orientation_size)
}

// optional int32 sog = 6;
void ArpaTargetPack::clear_sog() {
  sog_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::sog() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.sog)
  return sog_;
}
void ArpaTargetPack::set_sog(::google::protobuf::int32 value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.sog)
}

// optional int32 cog = 7;
void ArpaTargetPack::clear_cog() {
  cog_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::cog() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.cog)
  return cog_;
}
void ArpaTargetPack::set_cog(::google::protobuf::int32 value) {
  
  cog_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.cog)
}

// optional int32 scans = 8;
void ArpaTargetPack::clear_scans() {
  scans_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::scans() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.scans)
  return scans_;
}
void ArpaTargetPack::set_scans(::google::protobuf::int32 value) {
  
  scans_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.scans)
}

// optional int32 flags = 9;
void ArpaTargetPack::clear_flags() {
  flags_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::flags() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.flags)
  return flags_;
}
void ArpaTargetPack::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.flags)
}

// optional int32 longitude = 10;
void ArpaTargetPack::clear_longitude() {
  longitude_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::longitude() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.longitude)
  return longitude_;
}
void ArpaTargetPack::set_longitude(::google::protobuf::int32 value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.longitude)
}

// optional int32 latitude = 11;
void ArpaTargetPack::clear_latitude() {
  latitude_ = 0;
}
::google::protobuf::int32 ArpaTargetPack::latitude() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.latitude)
  return latitude_;
}
void ArpaTargetPack::set_latitude(::google::protobuf::int32 value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ArpaTargetPack.latitude)
}

// optional string clientname = 12;
void ArpaTargetPack::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ArpaTargetPack::clientname() const {
  // @@protoc_insertion_point(field_get:ArpaTargetPack.clientname)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ArpaTargetPack::set_clientname(const ::std::string& value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ArpaTargetPack.clientname)
}
void ArpaTargetPack::set_clientname(const char* value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ArpaTargetPack.clientname)
}
void ArpaTargetPack::set_clientname(const char* value, size_t size) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ArpaTargetPack.clientname)
}
::std::string* ArpaTargetPack::mutable_clientname() {
  
  // @@protoc_insertion_point(field_mutable:ArpaTargetPack.clientname)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ArpaTargetPack::release_clientname() {
  // @@protoc_insertion_point(field_release:ArpaTargetPack.clientname)
  
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ArpaTargetPack::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    
  } else {
    
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:ArpaTargetPack.clientname)
}

inline const ArpaTargetPack* ArpaTargetPack::internal_default_instance() {
  return &ArpaTargetPack_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarHeader::kPackettypeFieldNumber;
const int RadarHeader::kStateflagsFieldNumber;
const int RadarHeader::kReserved0FieldNumber;
const int RadarHeader::kUtcFieldNumber;
const int RadarHeader::kControlFieldNumber;
const int RadarHeader::kTuneMinFieldNumber;
const int RadarHeader::kTuneMaxFieldNumber;
const int RadarHeader::kTuneValueFieldNumber;
const int RadarHeader::kPadFieldNumber;
const int RadarHeader::kControlbits0FieldNumber;
const int RadarHeader::kControlbits1FieldNumber;
const int RadarHeader::kClientnameFieldNumber;
const int RadarHeader::kArpaStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarHeader::RadarHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_RadarImagePack_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadarHeader)
}

void RadarHeader::InitAsDefaultInstance() {
}

RadarHeader::RadarHeader(const RadarHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RadarHeader)
}

void RadarHeader::SharedCtor() {
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packettype_, 0, reinterpret_cast<char*>(&arpastate_) -
    reinterpret_cast<char*>(&packettype_) + sizeof(arpastate_));
  _cached_size_ = 0;
}

RadarHeader::~RadarHeader() {
  // @@protoc_insertion_point(destructor:RadarHeader)
  SharedDtor();
}

void RadarHeader::SharedDtor() {
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RadarHeader_descriptor_;
}

const RadarHeader& RadarHeader::default_instance() {
  protobuf_InitDefaults_RadarImagePack_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RadarHeader> RadarHeader_default_instance_;

RadarHeader* RadarHeader::New(::google::protobuf::Arena* arena) const {
  RadarHeader* n = new RadarHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:RadarHeader)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RadarHeader, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RadarHeader*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(packettype_, tune_value_);
  ZR_(controlbits0_, arpastate_);
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  reserved0_.Clear();
  control_.Clear();
  pad_.Clear();
}

bool RadarHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadarHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 packettype = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packettype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stateflags;
        break;
      }

      // optional int32 stateflags = 2;
      case 2: {
        if (tag == 16) {
         parse_stateflags:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stateflags_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reserved0;
        break;
      }

      // repeated int32 reserved0 = 3;
      case 3: {
        if (tag == 26) {
         parse_reserved0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reserved0())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_reserved0())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_utc;
        break;
      }

      // optional int64 utc = 4;
      case 4: {
        if (tag == 32) {
         parse_utc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &utc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_control;
        break;
      }

      // repeated int32 control = 5;
      case 5: {
        if (tag == 42) {
         parse_control:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_control())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_control())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tune_min;
        break;
      }

      // optional int32 tune_min = 6;
      case 6: {
        if (tag == 48) {
         parse_tune_min:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tune_min_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_tune_max;
        break;
      }

      // optional int32 tune_max = 7;
      case 7: {
        if (tag == 56) {
         parse_tune_max:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tune_max_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_tune_value;
        break;
      }

      // optional int32 tune_value = 8;
      case 8: {
        if (tag == 64) {
         parse_tune_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tune_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_pad;
        break;
      }

      // repeated int32 pad = 9;
      case 9: {
        if (tag == 74) {
         parse_pad:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pad())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74, input, this->mutable_pad())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_controlbits0;
        break;
      }

      // optional int32 controlbits0 = 10;
      case 10: {
        if (tag == 80) {
         parse_controlbits0:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controlbits0_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_controlbits1;
        break;
      }

      // optional int32 controlbits1 = 11;
      case 11: {
        if (tag == 88) {
         parse_controlbits1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controlbits1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_clientname;
        break;
      }

      // optional string clientname = 12;
      case 12: {
        if (tag == 98) {
         parse_clientname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarHeader.clientname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_arpaState;
        break;
      }

      // optional int32 arpaState = 13;
      case 13: {
        if (tag == 104) {
         parse_arpaState:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arpastate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadarHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadarHeader)
  return false;
#undef DO_
}

void RadarHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadarHeader)
  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->packettype(), output);
  }

  // optional int32 stateflags = 2;
  if (this->stateflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stateflags(), output);
  }

  // repeated int32 reserved0 = 3;
  if (this->reserved0_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_reserved0_cached_byte_size_);
  }
  for (int i = 0; i < this->reserved0_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->reserved0(i), output);
  }

  // optional int64 utc = 4;
  if (this->utc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->utc(), output);
  }

  // repeated int32 control = 5;
  if (this->control_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_control_cached_byte_size_);
  }
  for (int i = 0; i < this->control_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->control(i), output);
  }

  // optional int32 tune_min = 6;
  if (this->tune_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tune_min(), output);
  }

  // optional int32 tune_max = 7;
  if (this->tune_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->tune_max(), output);
  }

  // optional int32 tune_value = 8;
  if (this->tune_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->tune_value(), output);
  }

  // repeated int32 pad = 9;
  if (this->pad_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pad_cached_byte_size_);
  }
  for (int i = 0; i < this->pad_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pad(i), output);
  }

  // optional int32 controlbits0 = 10;
  if (this->controlbits0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->controlbits0(), output);
  }

  // optional int32 controlbits1 = 11;
  if (this->controlbits1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->controlbits1(), output);
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarHeader.clientname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->clientname(), output);
  }

  // optional int32 arpaState = 13;
  if (this->arpastate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->arpastate(), output);
  }

  // @@protoc_insertion_point(serialize_end:RadarHeader)
}

::google::protobuf::uint8* RadarHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadarHeader)
  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->packettype(), target);
  }

  // optional int32 stateflags = 2;
  if (this->stateflags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stateflags(), target);
  }

  // repeated int32 reserved0 = 3;
  if (this->reserved0_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _reserved0_cached_byte_size_, target);
  }
  for (int i = 0; i < this->reserved0_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->reserved0(i), target);
  }

  // optional int64 utc = 4;
  if (this->utc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->utc(), target);
  }

  // repeated int32 control = 5;
  if (this->control_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _control_cached_byte_size_, target);
  }
  for (int i = 0; i < this->control_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->control(i), target);
  }

  // optional int32 tune_min = 6;
  if (this->tune_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tune_min(), target);
  }

  // optional int32 tune_max = 7;
  if (this->tune_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->tune_max(), target);
  }

  // optional int32 tune_value = 8;
  if (this->tune_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->tune_value(), target);
  }

  // repeated int32 pad = 9;
  if (this->pad_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pad_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pad_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pad(i), target);
  }

  // optional int32 controlbits0 = 10;
  if (this->controlbits0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->controlbits0(), target);
  }

  // optional int32 controlbits1 = 11;
  if (this->controlbits1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->controlbits1(), target);
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarHeader.clientname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->clientname(), target);
  }

  // optional int32 arpaState = 13;
  if (this->arpastate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->arpastate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RadarHeader)
  return target;
}

size_t RadarHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadarHeader)
  size_t total_size = 0;

  // optional int32 packettype = 1;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packettype());
  }

  // optional int32 stateflags = 2;
  if (this->stateflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stateflags());
  }

  // optional int64 utc = 4;
  if (this->utc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->utc());
  }

  // optional int32 tune_min = 6;
  if (this->tune_min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tune_min());
  }

  // optional int32 tune_max = 7;
  if (this->tune_max() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tune_max());
  }

  // optional int32 tune_value = 8;
  if (this->tune_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tune_value());
  }

  // optional int32 controlbits0 = 10;
  if (this->controlbits0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->controlbits0());
  }

  // optional int32 controlbits1 = 11;
  if (this->controlbits1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->controlbits1());
  }

  // optional string clientname = 12;
  if (this->clientname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  // optional int32 arpaState = 13;
  if (this->arpastate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arpastate());
  }

  // repeated int32 reserved0 = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->reserved0_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reserved0(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reserved0_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 control = 5;
  {
    size_t data_size = 0;
    unsigned int count = this->control_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->control(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _control_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 pad = 9;
  {
    size_t data_size = 0;
    unsigned int count = this->pad_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pad(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pad_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadarHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RadarHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadarHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadarHeader)
    UnsafeMergeFrom(*source);
  }
}

void RadarHeader::MergeFrom(const RadarHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadarHeader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RadarHeader::UnsafeMergeFrom(const RadarHeader& from) {
  GOOGLE_DCHECK(&from != this);
  reserved0_.UnsafeMergeFrom(from.reserved0_);
  control_.UnsafeMergeFrom(from.control_);
  pad_.UnsafeMergeFrom(from.pad_);
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.stateflags() != 0) {
    set_stateflags(from.stateflags());
  }
  if (from.utc() != 0) {
    set_utc(from.utc());
  }
  if (from.tune_min() != 0) {
    set_tune_min(from.tune_min());
  }
  if (from.tune_max() != 0) {
    set_tune_max(from.tune_max());
  }
  if (from.tune_value() != 0) {
    set_tune_value(from.tune_value());
  }
  if (from.controlbits0() != 0) {
    set_controlbits0(from.controlbits0());
  }
  if (from.controlbits1() != 0) {
    set_controlbits1(from.controlbits1());
  }
  if (from.clientname().size() > 0) {

    clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
  }
  if (from.arpastate() != 0) {
    set_arpastate(from.arpastate());
  }
}

void RadarHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadarHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarHeader::CopyFrom(const RadarHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadarHeader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RadarHeader::IsInitialized() const {

  return true;
}

void RadarHeader::Swap(RadarHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarHeader::InternalSwap(RadarHeader* other) {
  std::swap(packettype_, other->packettype_);
  std::swap(stateflags_, other->stateflags_);
  reserved0_.UnsafeArenaSwap(&other->reserved0_);
  std::swap(utc_, other->utc_);
  control_.UnsafeArenaSwap(&other->control_);
  std::swap(tune_min_, other->tune_min_);
  std::swap(tune_max_, other->tune_max_);
  std::swap(tune_value_, other->tune_value_);
  pad_.UnsafeArenaSwap(&other->pad_);
  std::swap(controlbits0_, other->controlbits0_);
  std::swap(controlbits1_, other->controlbits1_);
  clientname_.Swap(&other->clientname_);
  std::swap(arpastate_, other->arpastate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RadarHeader_descriptor_;
  metadata.reflection = RadarHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarHeader

// optional int32 packettype = 1;
void RadarHeader::clear_packettype() {
  packettype_ = 0;
}
::google::protobuf::int32 RadarHeader::packettype() const {
  // @@protoc_insertion_point(field_get:RadarHeader.packettype)
  return packettype_;
}
void RadarHeader::set_packettype(::google::protobuf::int32 value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.packettype)
}

// optional int32 stateflags = 2;
void RadarHeader::clear_stateflags() {
  stateflags_ = 0;
}
::google::protobuf::int32 RadarHeader::stateflags() const {
  // @@protoc_insertion_point(field_get:RadarHeader.stateflags)
  return stateflags_;
}
void RadarHeader::set_stateflags(::google::protobuf::int32 value) {
  
  stateflags_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.stateflags)
}

// repeated int32 reserved0 = 3;
int RadarHeader::reserved0_size() const {
  return reserved0_.size();
}
void RadarHeader::clear_reserved0() {
  reserved0_.Clear();
}
::google::protobuf::int32 RadarHeader::reserved0(int index) const {
  // @@protoc_insertion_point(field_get:RadarHeader.reserved0)
  return reserved0_.Get(index);
}
void RadarHeader::set_reserved0(int index, ::google::protobuf::int32 value) {
  reserved0_.Set(index, value);
  // @@protoc_insertion_point(field_set:RadarHeader.reserved0)
}
void RadarHeader::add_reserved0(::google::protobuf::int32 value) {
  reserved0_.Add(value);
  // @@protoc_insertion_point(field_add:RadarHeader.reserved0)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RadarHeader::reserved0() const {
  // @@protoc_insertion_point(field_list:RadarHeader.reserved0)
  return reserved0_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RadarHeader::mutable_reserved0() {
  // @@protoc_insertion_point(field_mutable_list:RadarHeader.reserved0)
  return &reserved0_;
}

// optional int64 utc = 4;
void RadarHeader::clear_utc() {
  utc_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RadarHeader::utc() const {
  // @@protoc_insertion_point(field_get:RadarHeader.utc)
  return utc_;
}
void RadarHeader::set_utc(::google::protobuf::int64 value) {
  
  utc_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.utc)
}

// repeated int32 control = 5;
int RadarHeader::control_size() const {
  return control_.size();
}
void RadarHeader::clear_control() {
  control_.Clear();
}
::google::protobuf::int32 RadarHeader::control(int index) const {
  // @@protoc_insertion_point(field_get:RadarHeader.control)
  return control_.Get(index);
}
void RadarHeader::set_control(int index, ::google::protobuf::int32 value) {
  control_.Set(index, value);
  // @@protoc_insertion_point(field_set:RadarHeader.control)
}
void RadarHeader::add_control(::google::protobuf::int32 value) {
  control_.Add(value);
  // @@protoc_insertion_point(field_add:RadarHeader.control)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RadarHeader::control() const {
  // @@protoc_insertion_point(field_list:RadarHeader.control)
  return control_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RadarHeader::mutable_control() {
  // @@protoc_insertion_point(field_mutable_list:RadarHeader.control)
  return &control_;
}

// optional int32 tune_min = 6;
void RadarHeader::clear_tune_min() {
  tune_min_ = 0;
}
::google::protobuf::int32 RadarHeader::tune_min() const {
  // @@protoc_insertion_point(field_get:RadarHeader.tune_min)
  return tune_min_;
}
void RadarHeader::set_tune_min(::google::protobuf::int32 value) {
  
  tune_min_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.tune_min)
}

// optional int32 tune_max = 7;
void RadarHeader::clear_tune_max() {
  tune_max_ = 0;
}
::google::protobuf::int32 RadarHeader::tune_max() const {
  // @@protoc_insertion_point(field_get:RadarHeader.tune_max)
  return tune_max_;
}
void RadarHeader::set_tune_max(::google::protobuf::int32 value) {
  
  tune_max_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.tune_max)
}

// optional int32 tune_value = 8;
void RadarHeader::clear_tune_value() {
  tune_value_ = 0;
}
::google::protobuf::int32 RadarHeader::tune_value() const {
  // @@protoc_insertion_point(field_get:RadarHeader.tune_value)
  return tune_value_;
}
void RadarHeader::set_tune_value(::google::protobuf::int32 value) {
  
  tune_value_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.tune_value)
}

// repeated int32 pad = 9;
int RadarHeader::pad_size() const {
  return pad_.size();
}
void RadarHeader::clear_pad() {
  pad_.Clear();
}
::google::protobuf::int32 RadarHeader::pad(int index) const {
  // @@protoc_insertion_point(field_get:RadarHeader.pad)
  return pad_.Get(index);
}
void RadarHeader::set_pad(int index, ::google::protobuf::int32 value) {
  pad_.Set(index, value);
  // @@protoc_insertion_point(field_set:RadarHeader.pad)
}
void RadarHeader::add_pad(::google::protobuf::int32 value) {
  pad_.Add(value);
  // @@protoc_insertion_point(field_add:RadarHeader.pad)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RadarHeader::pad() const {
  // @@protoc_insertion_point(field_list:RadarHeader.pad)
  return pad_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RadarHeader::mutable_pad() {
  // @@protoc_insertion_point(field_mutable_list:RadarHeader.pad)
  return &pad_;
}

// optional int32 controlbits0 = 10;
void RadarHeader::clear_controlbits0() {
  controlbits0_ = 0;
}
::google::protobuf::int32 RadarHeader::controlbits0() const {
  // @@protoc_insertion_point(field_get:RadarHeader.controlbits0)
  return controlbits0_;
}
void RadarHeader::set_controlbits0(::google::protobuf::int32 value) {
  
  controlbits0_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.controlbits0)
}

// optional int32 controlbits1 = 11;
void RadarHeader::clear_controlbits1() {
  controlbits1_ = 0;
}
::google::protobuf::int32 RadarHeader::controlbits1() const {
  // @@protoc_insertion_point(field_get:RadarHeader.controlbits1)
  return controlbits1_;
}
void RadarHeader::set_controlbits1(::google::protobuf::int32 value) {
  
  controlbits1_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.controlbits1)
}

// optional string clientname = 12;
void RadarHeader::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarHeader::clientname() const {
  // @@protoc_insertion_point(field_get:RadarHeader.clientname)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarHeader::set_clientname(const ::std::string& value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarHeader.clientname)
}
void RadarHeader::set_clientname(const char* value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarHeader.clientname)
}
void RadarHeader::set_clientname(const char* value, size_t size) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarHeader.clientname)
}
::std::string* RadarHeader::mutable_clientname() {
  
  // @@protoc_insertion_point(field_mutable:RadarHeader.clientname)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarHeader::release_clientname() {
  // @@protoc_insertion_point(field_release:RadarHeader.clientname)
  
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarHeader::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    
  } else {
    
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:RadarHeader.clientname)
}

// optional int32 arpaState = 13;
void RadarHeader::clear_arpastate() {
  arpastate_ = 0;
}
::google::protobuf::int32 RadarHeader::arpastate() const {
  // @@protoc_insertion_point(field_get:RadarHeader.arpaState)
  return arpastate_;
}
void RadarHeader::set_arpastate(::google::protobuf::int32 value) {
  
  arpastate_ = value;
  // @@protoc_insertion_point(field_set:RadarHeader.arpaState)
}

inline const RadarHeader* RadarHeader::internal_default_instance() {
  return &RadarHeader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarRequst::kMessFieldNumber;
const int RadarRequst::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarRequst::RadarRequst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_RadarImagePack_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadarRequst)
}

void RadarRequst::InitAsDefaultInstance() {
}

RadarRequst::RadarRequst(const RadarRequst& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RadarRequst)
}

void RadarRequst::SharedCtor() {
  mess_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RadarRequst::~RadarRequst() {
  // @@protoc_insertion_point(destructor:RadarRequst)
  SharedDtor();
}

void RadarRequst::SharedDtor() {
  mess_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarRequst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarRequst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RadarRequst_descriptor_;
}

const RadarRequst& RadarRequst::default_instance() {
  protobuf_InitDefaults_RadarImagePack_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RadarRequst> RadarRequst_default_instance_;

RadarRequst* RadarRequst::New(::google::protobuf::Arena* arena) const {
  RadarRequst* n = new RadarRequst;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarRequst::Clear() {
// @@protoc_insertion_point(message_clear_start:RadarRequst)
  mess_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RadarRequst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadarRequst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mess = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mess()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mess().data(), this->mess().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarRequst.mess"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarRequst.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadarRequst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadarRequst)
  return false;
#undef DO_
}

void RadarRequst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadarRequst)
  // optional string mess = 1;
  if (this->mess().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mess().data(), this->mess().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarRequst.mess");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mess(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarRequst.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:RadarRequst)
}

::google::protobuf::uint8* RadarRequst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadarRequst)
  // optional string mess = 1;
  if (this->mess().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mess().data(), this->mess().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarRequst.mess");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mess(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarRequst.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RadarRequst)
  return target;
}

size_t RadarRequst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadarRequst)
  size_t total_size = 0;

  // optional string mess = 1;
  if (this->mess().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mess());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarRequst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadarRequst)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RadarRequst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarRequst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadarRequst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadarRequst)
    UnsafeMergeFrom(*source);
  }
}

void RadarRequst::MergeFrom(const RadarRequst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadarRequst)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RadarRequst::UnsafeMergeFrom(const RadarRequst& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mess().size() > 0) {

    mess_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mess_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RadarRequst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadarRequst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarRequst::CopyFrom(const RadarRequst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadarRequst)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RadarRequst::IsInitialized() const {

  return true;
}

void RadarRequst::Swap(RadarRequst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarRequst::InternalSwap(RadarRequst* other) {
  mess_.Swap(&other->mess_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarRequst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RadarRequst_descriptor_;
  metadata.reflection = RadarRequst_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarRequst

// optional string mess = 1;
void RadarRequst::clear_mess() {
  mess_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarRequst::mess() const {
  // @@protoc_insertion_point(field_get:RadarRequst.mess)
  return mess_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarRequst::set_mess(const ::std::string& value) {
  
  mess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarRequst.mess)
}
void RadarRequst::set_mess(const char* value) {
  
  mess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarRequst.mess)
}
void RadarRequst::set_mess(const char* value, size_t size) {
  
  mess_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarRequst.mess)
}
::std::string* RadarRequst::mutable_mess() {
  
  // @@protoc_insertion_point(field_mutable:RadarRequst.mess)
  return mess_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarRequst::release_mess() {
  // @@protoc_insertion_point(field_release:RadarRequst.mess)
  
  return mess_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarRequst::set_allocated_mess(::std::string* mess) {
  if (mess != NULL) {
    
  } else {
    
  }
  mess_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mess);
  // @@protoc_insertion_point(field_set_allocated:RadarRequst.mess)
}

// optional string name = 2;
void RadarRequst::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarRequst::name() const {
  // @@protoc_insertion_point(field_get:RadarRequst.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarRequst::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarRequst.name)
}
void RadarRequst::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarRequst.name)
}
void RadarRequst::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarRequst.name)
}
::std::string* RadarRequst::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RadarRequst.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarRequst::release_name() {
  // @@protoc_insertion_point(field_release:RadarRequst.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarRequst::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RadarRequst.name)
}

inline const RadarRequst* RadarRequst::internal_default_instance() {
  return &RadarRequst_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarAISStatePack::kNumberFieldNumber;
const int RadarAISStatePack::kReservedFieldNumber;
const int RadarAISStatePack::kMmsIdFieldNumber;
const int RadarAISStatePack::kImoFieldNumber;
const int RadarAISStatePack::kCallsignFieldNumber;
const int RadarAISStatePack::kNameFieldNumber;
const int RadarAISStatePack::kDestinationFieldNumber;
const int RadarAISStatePack::kCargoFieldNumber;
const int RadarAISStatePack::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarAISStatePack::RadarAISStatePack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_RadarImagePack_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadarAISStatePack)
}

void RadarAISStatePack::InitAsDefaultInstance() {
}

RadarAISStatePack::RadarAISStatePack(const RadarAISStatePack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RadarAISStatePack)
}

void RadarAISStatePack::SharedCtor() {
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, reinterpret_cast<char*>(&dimensions_) -
    reinterpret_cast<char*>(&number_) + sizeof(dimensions_));
  _cached_size_ = 0;
}

RadarAISStatePack::~RadarAISStatePack() {
  // @@protoc_insertion_point(destructor:RadarAISStatePack)
  SharedDtor();
}

void RadarAISStatePack::SharedDtor() {
  callsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarAISStatePack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarAISStatePack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RadarAISStatePack_descriptor_;
}

const RadarAISStatePack& RadarAISStatePack::default_instance() {
  protobuf_InitDefaults_RadarImagePack_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RadarAISStatePack> RadarAISStatePack_default_instance_;

RadarAISStatePack* RadarAISStatePack::New(::google::protobuf::Arena* arena) const {
  RadarAISStatePack* n = new RadarAISStatePack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarAISStatePack::Clear() {
// @@protoc_insertion_point(message_clear_start:RadarAISStatePack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RadarAISStatePack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RadarAISStatePack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_, cargo_);
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimensions_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool RadarAISStatePack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadarAISStatePack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reserved;
        break;
      }

      // optional int32 reserved = 2;
      case 2: {
        if (tag == 16) {
         parse_reserved:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mms_id;
        break;
      }

      // optional int32 mms_id = 3;
      case 3: {
        if (tag == 24) {
         parse_mms_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mms_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_imo;
        break;
      }

      // optional int32 imo = 4;
      case 4: {
        if (tag == 32) {
         parse_imo:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_callsign;
        break;
      }

      // optional string callsign = 5;
      case 5: {
        if (tag == 42) {
         parse_callsign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callsign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callsign().data(), this->callsign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarAISStatePack.callsign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarAISStatePack.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_destination;
        break;
      }

      // optional string destination = 7;
      case 7: {
        if (tag == 58) {
         parse_destination:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), this->destination().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RadarAISStatePack.destination"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cargo;
        break;
      }

      // optional int32 cargo = 8;
      case 8: {
        if (tag == 64) {
         parse_cargo:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cargo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_dimensions;
        break;
      }

      // optional int32 dimensions = 9;
      case 9: {
        if (tag == 72) {
         parse_dimensions:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimensions_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadarAISStatePack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadarAISStatePack)
  return false;
#undef DO_
}

void RadarAISStatePack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadarAISStatePack)
  // optional int32 number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reserved(), output);
  }

  // optional int32 mms_id = 3;
  if (this->mms_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mms_id(), output);
  }

  // optional int32 imo = 4;
  if (this->imo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->imo(), output);
  }

  // optional string callsign = 5;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.callsign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callsign(), output);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional string destination = 7;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->destination(), output);
  }

  // optional int32 cargo = 8;
  if (this->cargo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cargo(), output);
  }

  // optional int32 dimensions = 9;
  if (this->dimensions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dimensions(), output);
  }

  // @@protoc_insertion_point(serialize_end:RadarAISStatePack)
}

::google::protobuf::uint8* RadarAISStatePack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadarAISStatePack)
  // optional int32 number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reserved(), target);
  }

  // optional int32 mms_id = 3;
  if (this->mms_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mms_id(), target);
  }

  // optional int32 imo = 4;
  if (this->imo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->imo(), target);
  }

  // optional string callsign = 5;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.callsign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callsign(), target);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional string destination = 7;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RadarAISStatePack.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->destination(), target);
  }

  // optional int32 cargo = 8;
  if (this->cargo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cargo(), target);
  }

  // optional int32 dimensions = 9;
  if (this->dimensions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dimensions(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RadarAISStatePack)
  return target;
}

size_t RadarAISStatePack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadarAISStatePack)
  size_t total_size = 0;

  // optional int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  // optional int32 reserved = 2;
  if (this->reserved() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved());
  }

  // optional int32 mms_id = 3;
  if (this->mms_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mms_id());
  }

  // optional int32 imo = 4;
  if (this->imo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imo());
  }

  // optional string callsign = 5;
  if (this->callsign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callsign());
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string destination = 7;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // optional int32 cargo = 8;
  if (this->cargo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cargo());
  }

  // optional int32 dimensions = 9;
  if (this->dimensions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimensions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarAISStatePack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadarAISStatePack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RadarAISStatePack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarAISStatePack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadarAISStatePack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadarAISStatePack)
    UnsafeMergeFrom(*source);
  }
}

void RadarAISStatePack::MergeFrom(const RadarAISStatePack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadarAISStatePack)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RadarAISStatePack::UnsafeMergeFrom(const RadarAISStatePack& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
  if (from.mms_id() != 0) {
    set_mms_id(from.mms_id());
  }
  if (from.imo() != 0) {
    set_imo(from.imo());
  }
  if (from.callsign().size() > 0) {

    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.destination().size() > 0) {

    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  if (from.cargo() != 0) {
    set_cargo(from.cargo());
  }
  if (from.dimensions() != 0) {
    set_dimensions(from.dimensions());
  }
}

void RadarAISStatePack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadarAISStatePack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarAISStatePack::CopyFrom(const RadarAISStatePack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadarAISStatePack)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RadarAISStatePack::IsInitialized() const {

  return true;
}

void RadarAISStatePack::Swap(RadarAISStatePack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarAISStatePack::InternalSwap(RadarAISStatePack* other) {
  std::swap(number_, other->number_);
  std::swap(reserved_, other->reserved_);
  std::swap(mms_id_, other->mms_id_);
  std::swap(imo_, other->imo_);
  callsign_.Swap(&other->callsign_);
  name_.Swap(&other->name_);
  destination_.Swap(&other->destination_);
  std::swap(cargo_, other->cargo_);
  std::swap(dimensions_, other->dimensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarAISStatePack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RadarAISStatePack_descriptor_;
  metadata.reflection = RadarAISStatePack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarAISStatePack

// optional int32 number = 1;
void RadarAISStatePack::clear_number() {
  number_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::number() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.number)
  return number_;
}
void RadarAISStatePack::set_number(::google::protobuf::int32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.number)
}

// optional int32 reserved = 2;
void RadarAISStatePack::clear_reserved() {
  reserved_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::reserved() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.reserved)
  return reserved_;
}
void RadarAISStatePack::set_reserved(::google::protobuf::int32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.reserved)
}

// optional int32 mms_id = 3;
void RadarAISStatePack::clear_mms_id() {
  mms_id_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::mms_id() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.mms_id)
  return mms_id_;
}
void RadarAISStatePack::set_mms_id(::google::protobuf::int32 value) {
  
  mms_id_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.mms_id)
}

// optional int32 imo = 4;
void RadarAISStatePack::clear_imo() {
  imo_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::imo() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.imo)
  return imo_;
}
void RadarAISStatePack::set_imo(::google::protobuf::int32 value) {
  
  imo_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.imo)
}

// optional string callsign = 5;
void RadarAISStatePack::clear_callsign() {
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarAISStatePack::callsign() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.callsign)
  return callsign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_callsign(const ::std::string& value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarAISStatePack.callsign)
}
void RadarAISStatePack::set_callsign(const char* value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarAISStatePack.callsign)
}
void RadarAISStatePack::set_callsign(const char* value, size_t size) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarAISStatePack.callsign)
}
::std::string* RadarAISStatePack::mutable_callsign() {
  
  // @@protoc_insertion_point(field_mutable:RadarAISStatePack.callsign)
  return callsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarAISStatePack::release_callsign() {
  // @@protoc_insertion_point(field_release:RadarAISStatePack.callsign)
  
  return callsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_allocated_callsign(::std::string* callsign) {
  if (callsign != NULL) {
    
  } else {
    
  }
  callsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callsign);
  // @@protoc_insertion_point(field_set_allocated:RadarAISStatePack.callsign)
}

// optional string name = 6;
void RadarAISStatePack::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarAISStatePack::name() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarAISStatePack.name)
}
void RadarAISStatePack::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarAISStatePack.name)
}
void RadarAISStatePack::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarAISStatePack.name)
}
::std::string* RadarAISStatePack::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RadarAISStatePack.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarAISStatePack::release_name() {
  // @@protoc_insertion_point(field_release:RadarAISStatePack.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RadarAISStatePack.name)
}

// optional string destination = 7;
void RadarAISStatePack::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RadarAISStatePack::destination() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.destination)
  return destination_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_destination(const ::std::string& value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadarAISStatePack.destination)
}
void RadarAISStatePack::set_destination(const char* value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadarAISStatePack.destination)
}
void RadarAISStatePack::set_destination(const char* value, size_t size) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadarAISStatePack.destination)
}
::std::string* RadarAISStatePack::mutable_destination() {
  
  // @@protoc_insertion_point(field_mutable:RadarAISStatePack.destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarAISStatePack::release_destination() {
  // @@protoc_insertion_point(field_release:RadarAISStatePack.destination)
  
  return destination_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarAISStatePack::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    
  } else {
    
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:RadarAISStatePack.destination)
}

// optional int32 cargo = 8;
void RadarAISStatePack::clear_cargo() {
  cargo_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::cargo() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.cargo)
  return cargo_;
}
void RadarAISStatePack::set_cargo(::google::protobuf::int32 value) {
  
  cargo_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.cargo)
}

// optional int32 dimensions = 9;
void RadarAISStatePack::clear_dimensions() {
  dimensions_ = 0;
}
::google::protobuf::int32 RadarAISStatePack::dimensions() const {
  // @@protoc_insertion_point(field_get:RadarAISStatePack.dimensions)
  return dimensions_;
}
void RadarAISStatePack::set_dimensions(::google::protobuf::int32 value) {
  
  dimensions_ = value;
  // @@protoc_insertion_point(field_set:RadarAISStatePack.dimensions)
}

inline const RadarAISStatePack* RadarAISStatePack::internal_default_instance() {
  return &RadarAISStatePack_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
