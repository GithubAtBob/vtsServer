// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAisMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgAisMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgAisMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAisMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* hgAisRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAisRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgAisMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgAisMessage_2eproto() {
  protobuf_AddDesc_hgAisMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgAisMessage.proto");
  GOOGLE_CHECK(file != NULL);
  hgAisMessage_descriptor_ = file->message_type(0);
  static const int hgAisMessage_offsets_[59] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, navstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, rotais_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, sog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, lon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, cog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, hdg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, imo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, callsign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, shipname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, shiptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, posaccuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, equipmenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, eta_mo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, eta_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, eta_hr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, eta_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, draft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, syncstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, slotto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, dima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, dimb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, dimc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, dimd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, reportticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, recentperiod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, m_utc_hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, m_utc_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, m_utc_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, range_nm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, brg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, bcpa_valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, tcpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, cpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, simulation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, ownship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, reportinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, setshipsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, chshipname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, nationality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, radarid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, reserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, rng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, radarbrg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, spd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, crs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, scans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, radarguid_),
  };
  hgAisMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAisMessage_descriptor_,
      hgAisMessage::internal_default_instance(),
      hgAisMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAisMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisMessage, _internal_metadata_));
  hgAisRepsone_descriptor_ = file->message_type(1);
  static const int hgAisRepsone_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisRepsone, result_),
  };
  hgAisRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAisRepsone_descriptor_,
      hgAisRepsone::internal_default_instance(),
      hgAisRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAisRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAisRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgAisMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAisMessage_descriptor_, hgAisMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAisRepsone_descriptor_, hgAisRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgAisMessage_2eproto() {
  hgAisMessage_default_instance_.Shutdown();
  delete hgAisMessage_reflection_;
  hgAisRepsone_default_instance_.Shutdown();
  delete hgAisRepsone_reflection_;
}

void protobuf_InitDefaults_hgAisMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgAisMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  hgAisRepsone_default_instance_.DefaultConstruct();
  hgAisMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  hgAisRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgAisMessage_2eproto_once_);
void protobuf_InitDefaults_hgAisMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgAisMessage_2eproto_once_,
                 &protobuf_InitDefaults_hgAisMessage_2eproto_impl);
}
void protobuf_AddDesc_hgAisMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgAisMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022hgAisMessage.proto\"\340\007\n\014hgAisMessage\022\013\n"
    "\003MID\030\001 \001(\005\022\r\n\005Class\030\002 \001(\005\022\014\n\004MMSI\030\003 \001(\t\022"
    "\021\n\tNavStatus\030\004 \001(\005\022\016\n\006ROTAIS\030\005 \001(\005\022\013\n\003SO"
    "G\030\006 \001(\001\022\013\n\003Lon\030\007 \001(\001\022\013\n\003Lat\030\010 \001(\001\022\013\n\003COG"
    "\030\t \001(\001\022\013\n\003HDG\030\n \001(\001\022\013\n\003IMO\030\013 \001(\005\022\020\n\010Call"
    "Sign\030\014 \001(\t\022\020\n\010ShipName\030\r \001(\t\022\020\n\010ShipType"
    "\030\016 \001(\t\022\023\n\013PosAccuracy\030\017 \001(\005\022\025\n\rEquipment"
    "Type\030\020 \001(\005\022\016\n\006ETA_Mo\030\021 \001(\005\022\017\n\007ETA_Day\030\022 "
    "\001(\005\022\016\n\006ETA_Hr\030\023 \001(\005\022\017\n\007ETA_Min\030\024 \001(\005\022\r\n\005"
    "Draft\030\025 \001(\001\022\023\n\013Destination\030\026 \001(\t\022\021\n\tSync"
    "State\030\027 \001(\005\022\016\n\006SlotTO\030\030 \001(\005\022\014\n\004DimA\030\031 \001("
    "\005\022\014\n\004DimB\030\032 \001(\005\022\014\n\004DimC\030\033 \001(\005\022\014\n\004DimD\030\034 "
    "\001(\005\022\023\n\013ReportTicks\030\035 \001(\003\022\024\n\014RecentPeriod"
    "\030\036 \001(\003\022\022\n\nm_utc_hour\030\037 \001(\005\022\021\n\tm_utc_min\030"
    "  \001(\005\022\021\n\tm_utc_sec\030! \001(\005\022\020\n\010Range_NM\030\" \001"
    "(\001\022\013\n\003Brg\030# \001(\001\022\022\n\nbCPA_Valid\030$ \001(\010\022\014\n\004T"
    "CPA\030% \001(\001\022\013\n\003CPA\030& \001(\001\022\022\n\nSimulation\030\' \001"
    "(\010\022\017\n\007OwnShip\030( \001(\010\022\026\n\016ReportInterval\030) "
    "\001(\005\022\016\n\006Length\030* \001(\001\022\r\n\005Width\030+ \001(\001\022\023\n\013Se"
    "tShipSize\030, \001(\010\022\022\n\nChShipName\030- \001(\t\022\023\n\013N"
    "ationality\030. \001(\t\022\014\n\004Note\030/ \001(\t\022\n\n\002ID\0300 \001"
    "(\t\022\017\n\007RadarID\0301 \001(\t\022\016\n\006Source\0302 \001(\005\022\020\n\010R"
    "eserved\0303 \001(\005\022\013\n\003Rng\0304 \001(\005\022\020\n\010RadarBrg\0305"
    " \001(\001\022\013\n\003Spd\0306 \001(\001\022\013\n\003Crs\0307 \001(\001\022\r\n\005Scans\030"
    "8 \001(\005\022\r\n\005Flags\0309 \001(\005\022\016\n\006Result\030: \001(\005\022\021\n\t"
    "RadarGUID\030; \001(\t\"\036\n\014hgAisRepsone\022\016\n\006resul"
    "t\030\001 \001(\tb\006proto3", 1055);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgAisMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgAisMessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgAisMessage_2eproto_once_);
void protobuf_AddDesc_hgAisMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgAisMessage_2eproto_once_,
                 &protobuf_AddDesc_hgAisMessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgAisMessage_2eproto {
  StaticDescriptorInitializer_hgAisMessage_2eproto() {
    protobuf_AddDesc_hgAisMessage_2eproto();
  }
} static_descriptor_initializer_hgAisMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAisMessage::kMIDFieldNumber;
const int hgAisMessage::kClassFieldNumber;
const int hgAisMessage::kMMSIFieldNumber;
const int hgAisMessage::kNavStatusFieldNumber;
const int hgAisMessage::kROTAISFieldNumber;
const int hgAisMessage::kSOGFieldNumber;
const int hgAisMessage::kLonFieldNumber;
const int hgAisMessage::kLatFieldNumber;
const int hgAisMessage::kCOGFieldNumber;
const int hgAisMessage::kHDGFieldNumber;
const int hgAisMessage::kIMOFieldNumber;
const int hgAisMessage::kCallSignFieldNumber;
const int hgAisMessage::kShipNameFieldNumber;
const int hgAisMessage::kShipTypeFieldNumber;
const int hgAisMessage::kPosAccuracyFieldNumber;
const int hgAisMessage::kEquipmentTypeFieldNumber;
const int hgAisMessage::kETAMoFieldNumber;
const int hgAisMessage::kETADayFieldNumber;
const int hgAisMessage::kETAHrFieldNumber;
const int hgAisMessage::kETAMinFieldNumber;
const int hgAisMessage::kDraftFieldNumber;
const int hgAisMessage::kDestinationFieldNumber;
const int hgAisMessage::kSyncStateFieldNumber;
const int hgAisMessage::kSlotTOFieldNumber;
const int hgAisMessage::kDimAFieldNumber;
const int hgAisMessage::kDimBFieldNumber;
const int hgAisMessage::kDimCFieldNumber;
const int hgAisMessage::kDimDFieldNumber;
const int hgAisMessage::kReportTicksFieldNumber;
const int hgAisMessage::kRecentPeriodFieldNumber;
const int hgAisMessage::kMUtcHourFieldNumber;
const int hgAisMessage::kMUtcMinFieldNumber;
const int hgAisMessage::kMUtcSecFieldNumber;
const int hgAisMessage::kRangeNMFieldNumber;
const int hgAisMessage::kBrgFieldNumber;
const int hgAisMessage::kBCPAValidFieldNumber;
const int hgAisMessage::kTCPAFieldNumber;
const int hgAisMessage::kCPAFieldNumber;
const int hgAisMessage::kSimulationFieldNumber;
const int hgAisMessage::kOwnShipFieldNumber;
const int hgAisMessage::kReportIntervalFieldNumber;
const int hgAisMessage::kLengthFieldNumber;
const int hgAisMessage::kWidthFieldNumber;
const int hgAisMessage::kSetShipSizeFieldNumber;
const int hgAisMessage::kChShipNameFieldNumber;
const int hgAisMessage::kNationalityFieldNumber;
const int hgAisMessage::kNoteFieldNumber;
const int hgAisMessage::kIDFieldNumber;
const int hgAisMessage::kRadarIDFieldNumber;
const int hgAisMessage::kSourceFieldNumber;
const int hgAisMessage::kReservedFieldNumber;
const int hgAisMessage::kRngFieldNumber;
const int hgAisMessage::kRadarBrgFieldNumber;
const int hgAisMessage::kSpdFieldNumber;
const int hgAisMessage::kCrsFieldNumber;
const int hgAisMessage::kScansFieldNumber;
const int hgAisMessage::kFlagsFieldNumber;
const int hgAisMessage::kResultFieldNumber;
const int hgAisMessage::kRadarGUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAisMessage::hgAisMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAisMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAisMessage)
}

void hgAisMessage::InitAsDefaultInstance() {
}

hgAisMessage::hgAisMessage(const hgAisMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAisMessage)
}

void hgAisMessage::SharedCtor() {
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chshipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nationality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  radarid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  radarguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mid_) + sizeof(result_));
  _cached_size_ = 0;
}

hgAisMessage::~hgAisMessage() {
  // @@protoc_insertion_point(destructor:hgAisMessage)
  SharedDtor();
}

void hgAisMessage::SharedDtor() {
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chshipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nationality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  radarid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  radarguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgAisMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAisMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAisMessage_descriptor_;
}

const hgAisMessage& hgAisMessage::default_instance() {
  protobuf_InitDefaults_hgAisMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAisMessage> hgAisMessage_default_instance_;

hgAisMessage* hgAisMessage::New(::google::protobuf::Arena* arena) const {
  hgAisMessage* n = new hgAisMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAisMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAisMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgAisMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgAisMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mid_, lat_);
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(cog_, equipmenttype_);
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(eta_mo_, slotto_);
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(dima_, m_utc_min_);
  ZR_(m_utc_sec_, ownship_);
  ZR_(setshipsize_, width_);
  chshipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nationality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(source_, crs_);
  radarid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(flags_, result_);
  radarguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool hgAisMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAisMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Class;
        break;
      }

      // optional int32 Class = 2;
      case 2: {
        if (tag == 16) {
         parse_Class:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 3;
      case 3: {
        if (tag == 26) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NavStatus;
        break;
      }

      // optional int32 NavStatus = 4;
      case 4: {
        if (tag == 32) {
         parse_NavStatus:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &navstatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ROTAIS;
        break;
      }

      // optional int32 ROTAIS = 5;
      case 5: {
        if (tag == 40) {
         parse_ROTAIS:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rotais_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_SOG;
        break;
      }

      // optional double SOG = 6;
      case 6: {
        if (tag == 49) {
         parse_SOG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_Lon;
        break;
      }

      // optional double Lon = 7;
      case 7: {
        if (tag == 57) {
         parse_Lon:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_Lat;
        break;
      }

      // optional double Lat = 8;
      case 8: {
        if (tag == 65) {
         parse_Lat:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_COG;
        break;
      }

      // optional double COG = 9;
      case 9: {
        if (tag == 73) {
         parse_COG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_HDG;
        break;
      }

      // optional double HDG = 10;
      case 10: {
        if (tag == 81) {
         parse_HDG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_IMO;
        break;
      }

      // optional int32 IMO = 11;
      case 11: {
        if (tag == 88) {
         parse_IMO:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_CallSign;
        break;
      }

      // optional string CallSign = 12;
      case 12: {
        if (tag == 98) {
         parse_CallSign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callsign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callsign().data(), this->callsign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.CallSign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ShipName;
        break;
      }

      // optional string ShipName = 13;
      case 13: {
        if (tag == 106) {
         parse_ShipName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shipname().data(), this->shipname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.ShipName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_ShipType;
        break;
      }

      // optional string ShipType = 14;
      case 14: {
        if (tag == 114) {
         parse_ShipType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shiptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shiptype().data(), this->shiptype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.ShipType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_PosAccuracy;
        break;
      }

      // optional int32 PosAccuracy = 15;
      case 15: {
        if (tag == 120) {
         parse_PosAccuracy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posaccuracy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_EquipmentType;
        break;
      }

      // optional int32 EquipmentType = 16;
      case 16: {
        if (tag == 128) {
         parse_EquipmentType:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipmenttype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_ETA_Mo;
        break;
      }

      // optional int32 ETA_Mo = 17;
      case 17: {
        if (tag == 136) {
         parse_ETA_Mo:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eta_mo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_ETA_Day;
        break;
      }

      // optional int32 ETA_Day = 18;
      case 18: {
        if (tag == 144) {
         parse_ETA_Day:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eta_day_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_ETA_Hr;
        break;
      }

      // optional int32 ETA_Hr = 19;
      case 19: {
        if (tag == 152) {
         parse_ETA_Hr:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eta_hr_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_ETA_Min;
        break;
      }

      // optional int32 ETA_Min = 20;
      case 20: {
        if (tag == 160) {
         parse_ETA_Min:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eta_min_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_Draft;
        break;
      }

      // optional double Draft = 21;
      case 21: {
        if (tag == 169) {
         parse_Draft:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &draft_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_Destination;
        break;
      }

      // optional string Destination = 22;
      case 22: {
        if (tag == 178) {
         parse_Destination:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), this->destination().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.Destination"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_SyncState;
        break;
      }

      // optional int32 SyncState = 23;
      case 23: {
        if (tag == 184) {
         parse_SyncState:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &syncstate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_SlotTO;
        break;
      }

      // optional int32 SlotTO = 24;
      case 24: {
        if (tag == 192) {
         parse_SlotTO:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slotto_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_DimA;
        break;
      }

      // optional int32 DimA = 25;
      case 25: {
        if (tag == 200) {
         parse_DimA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dima_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_DimB;
        break;
      }

      // optional int32 DimB = 26;
      case 26: {
        if (tag == 208) {
         parse_DimB:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_DimC;
        break;
      }

      // optional int32 DimC = 27;
      case 27: {
        if (tag == 216) {
         parse_DimC:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_DimD;
        break;
      }

      // optional int32 DimD = 28;
      case 28: {
        if (tag == 224) {
         parse_DimD:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_ReportTicks;
        break;
      }

      // optional int64 ReportTicks = 29;
      case 29: {
        if (tag == 232) {
         parse_ReportTicks:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reportticks_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_RecentPeriod;
        break;
      }

      // optional int64 RecentPeriod = 30;
      case 30: {
        if (tag == 240) {
         parse_RecentPeriod:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recentperiod_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_m_utc_hour;
        break;
      }

      // optional int32 m_utc_hour = 31;
      case 31: {
        if (tag == 248) {
         parse_m_utc_hour:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_utc_hour_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_m_utc_min;
        break;
      }

      // optional int32 m_utc_min = 32;
      case 32: {
        if (tag == 256) {
         parse_m_utc_min:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_utc_min_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_m_utc_sec;
        break;
      }

      // optional int32 m_utc_sec = 33;
      case 33: {
        if (tag == 264) {
         parse_m_utc_sec:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_utc_sec_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(273)) goto parse_Range_NM;
        break;
      }

      // optional double Range_NM = 34;
      case 34: {
        if (tag == 273) {
         parse_Range_NM:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_nm_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(281)) goto parse_Brg;
        break;
      }

      // optional double Brg = 35;
      case 35: {
        if (tag == 281) {
         parse_Brg:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_bCPA_Valid;
        break;
      }

      // optional bool bCPA_Valid = 36;
      case 36: {
        if (tag == 288) {
         parse_bCPA_Valid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcpa_valid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(297)) goto parse_TCPA;
        break;
      }

      // optional double TCPA = 37;
      case 37: {
        if (tag == 297) {
         parse_TCPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tcpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_CPA;
        break;
      }

      // optional double CPA = 38;
      case 38: {
        if (tag == 305) {
         parse_CPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_Simulation;
        break;
      }

      // optional bool Simulation = 39;
      case 39: {
        if (tag == 312) {
         parse_Simulation:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &simulation_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_OwnShip;
        break;
      }

      // optional bool OwnShip = 40;
      case 40: {
        if (tag == 320) {
         parse_OwnShip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ownship_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_ReportInterval;
        break;
      }

      // optional int32 ReportInterval = 41;
      case 41: {
        if (tag == 328) {
         parse_ReportInterval:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reportinterval_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_Length;
        break;
      }

      // optional double Length = 42;
      case 42: {
        if (tag == 337) {
         parse_Length:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(345)) goto parse_Width;
        break;
      }

      // optional double Width = 43;
      case 43: {
        if (tag == 345) {
         parse_Width:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(352)) goto parse_SetShipSize;
        break;
      }

      // optional bool SetShipSize = 44;
      case 44: {
        if (tag == 352) {
         parse_SetShipSize:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setshipsize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_ChShipName;
        break;
      }

      // optional string ChShipName = 45;
      case 45: {
        if (tag == 362) {
         parse_ChShipName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chshipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chshipname().data(), this->chshipname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.ChShipName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_Nationality;
        break;
      }

      // optional string Nationality = 46;
      case 46: {
        if (tag == 370) {
         parse_Nationality:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nationality()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nationality().data(), this->nationality().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.Nationality"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_Note;
        break;
      }

      // optional string Note = 47;
      case 47: {
        if (tag == 378) {
         parse_Note:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note().data(), this->note().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.Note"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_ID;
        break;
      }

      // optional string ID = 48;
      case 48: {
        if (tag == 386) {
         parse_ID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_RadarID;
        break;
      }

      // optional string RadarID = 49;
      case 49: {
        if (tag == 394) {
         parse_RadarID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_radarid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->radarid().data(), this->radarid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.RadarID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_Source;
        break;
      }

      // optional int32 Source = 50;
      case 50: {
        if (tag == 400) {
         parse_Source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_Reserved;
        break;
      }

      // optional int32 Reserved = 51;
      case 51: {
        if (tag == 408) {
         parse_Reserved:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_Rng;
        break;
      }

      // optional int32 Rng = 52;
      case 52: {
        if (tag == 416) {
         parse_Rng:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rng_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(425)) goto parse_RadarBrg;
        break;
      }

      // optional double RadarBrg = 53;
      case 53: {
        if (tag == 425) {
         parse_RadarBrg:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radarbrg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(433)) goto parse_Spd;
        break;
      }

      // optional double Spd = 54;
      case 54: {
        if (tag == 433) {
         parse_Spd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &spd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(441)) goto parse_Crs;
        break;
      }

      // optional double Crs = 55;
      case 55: {
        if (tag == 441) {
         parse_Crs:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &crs_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(448)) goto parse_Scans;
        break;
      }

      // optional int32 Scans = 56;
      case 56: {
        if (tag == 448) {
         parse_Scans:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scans_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(456)) goto parse_Flags;
        break;
      }

      // optional int32 Flags = 57;
      case 57: {
        if (tag == 456) {
         parse_Flags:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(464)) goto parse_Result;
        break;
      }

      // optional int32 Result = 58;
      case 58: {
        if (tag == 464) {
         parse_Result:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_RadarGUID;
        break;
      }

      // optional string RadarGUID = 59;
      case 59: {
        if (tag == 474) {
         parse_RadarGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_radarguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->radarguid().data(), this->radarguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisMessage.RadarGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAisMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAisMessage)
  return false;
#undef DO_
}

void hgAisMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAisMessage)
  // optional int32 MID = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // optional int32 Class = 2;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->class_(), output);
  }

  // optional string MMSI = 3;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mmsi(), output);
  }

  // optional int32 NavStatus = 4;
  if (this->navstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->navstatus(), output);
  }

  // optional int32 ROTAIS = 5;
  if (this->rotais() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rotais(), output);
  }

  // optional double SOG = 6;
  if (this->sog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->sog(), output);
  }

  // optional double Lon = 7;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lon(), output);
  }

  // optional double Lat = 8;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->lat(), output);
  }

  // optional double COG = 9;
  if (this->cog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->cog(), output);
  }

  // optional double HDG = 10;
  if (this->hdg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->hdg(), output);
  }

  // optional int32 IMO = 11;
  if (this->imo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->imo(), output);
  }

  // optional string CallSign = 12;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.CallSign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->callsign(), output);
  }

  // optional string ShipName = 13;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ShipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->shipname(), output);
  }

  // optional string ShipType = 14;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ShipType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->shiptype(), output);
  }

  // optional int32 PosAccuracy = 15;
  if (this->posaccuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->posaccuracy(), output);
  }

  // optional int32 EquipmentType = 16;
  if (this->equipmenttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->equipmenttype(), output);
  }

  // optional int32 ETA_Mo = 17;
  if (this->eta_mo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->eta_mo(), output);
  }

  // optional int32 ETA_Day = 18;
  if (this->eta_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->eta_day(), output);
  }

  // optional int32 ETA_Hr = 19;
  if (this->eta_hr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->eta_hr(), output);
  }

  // optional int32 ETA_Min = 20;
  if (this->eta_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->eta_min(), output);
  }

  // optional double Draft = 21;
  if (this->draft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->draft(), output);
  }

  // optional string Destination = 22;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->destination(), output);
  }

  // optional int32 SyncState = 23;
  if (this->syncstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->syncstate(), output);
  }

  // optional int32 SlotTO = 24;
  if (this->slotto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->slotto(), output);
  }

  // optional int32 DimA = 25;
  if (this->dima() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->dima(), output);
  }

  // optional int32 DimB = 26;
  if (this->dimb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->dimb(), output);
  }

  // optional int32 DimC = 27;
  if (this->dimc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dimc(), output);
  }

  // optional int32 DimD = 28;
  if (this->dimd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->dimd(), output);
  }

  // optional int64 ReportTicks = 29;
  if (this->reportticks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->reportticks(), output);
  }

  // optional int64 RecentPeriod = 30;
  if (this->recentperiod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->recentperiod(), output);
  }

  // optional int32 m_utc_hour = 31;
  if (this->m_utc_hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->m_utc_hour(), output);
  }

  // optional int32 m_utc_min = 32;
  if (this->m_utc_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->m_utc_min(), output);
  }

  // optional int32 m_utc_sec = 33;
  if (this->m_utc_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->m_utc_sec(), output);
  }

  // optional double Range_NM = 34;
  if (this->range_nm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(34, this->range_nm(), output);
  }

  // optional double Brg = 35;
  if (this->brg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->brg(), output);
  }

  // optional bool bCPA_Valid = 36;
  if (this->bcpa_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(36, this->bcpa_valid(), output);
  }

  // optional double TCPA = 37;
  if (this->tcpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->tcpa(), output);
  }

  // optional double CPA = 38;
  if (this->cpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(38, this->cpa(), output);
  }

  // optional bool Simulation = 39;
  if (this->simulation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(39, this->simulation(), output);
  }

  // optional bool OwnShip = 40;
  if (this->ownship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->ownship(), output);
  }

  // optional int32 ReportInterval = 41;
  if (this->reportinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->reportinterval(), output);
  }

  // optional double Length = 42;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->length(), output);
  }

  // optional double Width = 43;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->width(), output);
  }

  // optional bool SetShipSize = 44;
  if (this->setshipsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(44, this->setshipsize(), output);
  }

  // optional string ChShipName = 45;
  if (this->chshipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chshipname().data(), this->chshipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ChShipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->chshipname(), output);
  }

  // optional string Nationality = 46;
  if (this->nationality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nationality().data(), this->nationality().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Nationality");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      46, this->nationality(), output);
  }

  // optional string Note = 47;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Note");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->note(), output);
  }

  // optional string ID = 48;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->id(), output);
  }

  // optional string RadarID = 49;
  if (this->radarid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->radarid().data(), this->radarid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.RadarID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->radarid(), output);
  }

  // optional int32 Source = 50;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->source(), output);
  }

  // optional int32 Reserved = 51;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->reserved(), output);
  }

  // optional int32 Rng = 52;
  if (this->rng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(52, this->rng(), output);
  }

  // optional double RadarBrg = 53;
  if (this->radarbrg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(53, this->radarbrg(), output);
  }

  // optional double Spd = 54;
  if (this->spd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(54, this->spd(), output);
  }

  // optional double Crs = 55;
  if (this->crs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(55, this->crs(), output);
  }

  // optional int32 Scans = 56;
  if (this->scans() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(56, this->scans(), output);
  }

  // optional int32 Flags = 57;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(57, this->flags(), output);
  }

  // optional int32 Result = 58;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(58, this->result(), output);
  }

  // optional string RadarGUID = 59;
  if (this->radarguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->radarguid().data(), this->radarguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.RadarGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      59, this->radarguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAisMessage)
}

::google::protobuf::uint8* hgAisMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAisMessage)
  // optional int32 MID = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // optional int32 Class = 2;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->class_(), target);
  }

  // optional string MMSI = 3;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mmsi(), target);
  }

  // optional int32 NavStatus = 4;
  if (this->navstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->navstatus(), target);
  }

  // optional int32 ROTAIS = 5;
  if (this->rotais() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rotais(), target);
  }

  // optional double SOG = 6;
  if (this->sog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->sog(), target);
  }

  // optional double Lon = 7;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lon(), target);
  }

  // optional double Lat = 8;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->lat(), target);
  }

  // optional double COG = 9;
  if (this->cog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->cog(), target);
  }

  // optional double HDG = 10;
  if (this->hdg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->hdg(), target);
  }

  // optional int32 IMO = 11;
  if (this->imo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->imo(), target);
  }

  // optional string CallSign = 12;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.CallSign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->callsign(), target);
  }

  // optional string ShipName = 13;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ShipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->shipname(), target);
  }

  // optional string ShipType = 14;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ShipType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->shiptype(), target);
  }

  // optional int32 PosAccuracy = 15;
  if (this->posaccuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->posaccuracy(), target);
  }

  // optional int32 EquipmentType = 16;
  if (this->equipmenttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->equipmenttype(), target);
  }

  // optional int32 ETA_Mo = 17;
  if (this->eta_mo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->eta_mo(), target);
  }

  // optional int32 ETA_Day = 18;
  if (this->eta_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->eta_day(), target);
  }

  // optional int32 ETA_Hr = 19;
  if (this->eta_hr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->eta_hr(), target);
  }

  // optional int32 ETA_Min = 20;
  if (this->eta_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->eta_min(), target);
  }

  // optional double Draft = 21;
  if (this->draft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->draft(), target);
  }

  // optional string Destination = 22;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->destination(), target);
  }

  // optional int32 SyncState = 23;
  if (this->syncstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->syncstate(), target);
  }

  // optional int32 SlotTO = 24;
  if (this->slotto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->slotto(), target);
  }

  // optional int32 DimA = 25;
  if (this->dima() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->dima(), target);
  }

  // optional int32 DimB = 26;
  if (this->dimb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->dimb(), target);
  }

  // optional int32 DimC = 27;
  if (this->dimc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dimc(), target);
  }

  // optional int32 DimD = 28;
  if (this->dimd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->dimd(), target);
  }

  // optional int64 ReportTicks = 29;
  if (this->reportticks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->reportticks(), target);
  }

  // optional int64 RecentPeriod = 30;
  if (this->recentperiod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->recentperiod(), target);
  }

  // optional int32 m_utc_hour = 31;
  if (this->m_utc_hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->m_utc_hour(), target);
  }

  // optional int32 m_utc_min = 32;
  if (this->m_utc_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->m_utc_min(), target);
  }

  // optional int32 m_utc_sec = 33;
  if (this->m_utc_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->m_utc_sec(), target);
  }

  // optional double Range_NM = 34;
  if (this->range_nm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(34, this->range_nm(), target);
  }

  // optional double Brg = 35;
  if (this->brg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(35, this->brg(), target);
  }

  // optional bool bCPA_Valid = 36;
  if (this->bcpa_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(36, this->bcpa_valid(), target);
  }

  // optional double TCPA = 37;
  if (this->tcpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->tcpa(), target);
  }

  // optional double CPA = 38;
  if (this->cpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(38, this->cpa(), target);
  }

  // optional bool Simulation = 39;
  if (this->simulation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(39, this->simulation(), target);
  }

  // optional bool OwnShip = 40;
  if (this->ownship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->ownship(), target);
  }

  // optional int32 ReportInterval = 41;
  if (this->reportinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->reportinterval(), target);
  }

  // optional double Length = 42;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(42, this->length(), target);
  }

  // optional double Width = 43;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->width(), target);
  }

  // optional bool SetShipSize = 44;
  if (this->setshipsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(44, this->setshipsize(), target);
  }

  // optional string ChShipName = 45;
  if (this->chshipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chshipname().data(), this->chshipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ChShipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->chshipname(), target);
  }

  // optional string Nationality = 46;
  if (this->nationality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nationality().data(), this->nationality().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Nationality");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->nationality(), target);
  }

  // optional string Note = 47;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.Note");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->note(), target);
  }

  // optional string ID = 48;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->id(), target);
  }

  // optional string RadarID = 49;
  if (this->radarid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->radarid().data(), this->radarid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.RadarID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->radarid(), target);
  }

  // optional int32 Source = 50;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->source(), target);
  }

  // optional int32 Reserved = 51;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->reserved(), target);
  }

  // optional int32 Rng = 52;
  if (this->rng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(52, this->rng(), target);
  }

  // optional double RadarBrg = 53;
  if (this->radarbrg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(53, this->radarbrg(), target);
  }

  // optional double Spd = 54;
  if (this->spd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(54, this->spd(), target);
  }

  // optional double Crs = 55;
  if (this->crs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(55, this->crs(), target);
  }

  // optional int32 Scans = 56;
  if (this->scans() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(56, this->scans(), target);
  }

  // optional int32 Flags = 57;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(57, this->flags(), target);
  }

  // optional int32 Result = 58;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(58, this->result(), target);
  }

  // optional string RadarGUID = 59;
  if (this->radarguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->radarguid().data(), this->radarguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisMessage.RadarGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->radarguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAisMessage)
  return target;
}

size_t hgAisMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAisMessage)
  size_t total_size = 0;

  // optional int32 MID = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // optional int32 Class = 2;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_());
  }

  // optional string MMSI = 3;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional int32 NavStatus = 4;
  if (this->navstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->navstatus());
  }

  // optional int32 ROTAIS = 5;
  if (this->rotais() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rotais());
  }

  // optional double SOG = 6;
  if (this->sog() != 0) {
    total_size += 1 + 8;
  }

  // optional double Lon = 7;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  // optional double Lat = 8;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // optional double COG = 9;
  if (this->cog() != 0) {
    total_size += 1 + 8;
  }

  // optional double HDG = 10;
  if (this->hdg() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 IMO = 11;
  if (this->imo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imo());
  }

  // optional string CallSign = 12;
  if (this->callsign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callsign());
  }

  // optional string ShipName = 13;
  if (this->shipname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shipname());
  }

  // optional string ShipType = 14;
  if (this->shiptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shiptype());
  }

  // optional int32 PosAccuracy = 15;
  if (this->posaccuracy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posaccuracy());
  }

  // optional int32 EquipmentType = 16;
  if (this->equipmenttype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipmenttype());
  }

  // optional int32 ETA_Mo = 17;
  if (this->eta_mo() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eta_mo());
  }

  // optional int32 ETA_Day = 18;
  if (this->eta_day() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eta_day());
  }

  // optional int32 ETA_Hr = 19;
  if (this->eta_hr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eta_hr());
  }

  // optional int32 ETA_Min = 20;
  if (this->eta_min() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eta_min());
  }

  // optional double Draft = 21;
  if (this->draft() != 0) {
    total_size += 2 + 8;
  }

  // optional string Destination = 22;
  if (this->destination().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // optional int32 SyncState = 23;
  if (this->syncstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->syncstate());
  }

  // optional int32 SlotTO = 24;
  if (this->slotto() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slotto());
  }

  // optional int32 DimA = 25;
  if (this->dima() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dima());
  }

  // optional int32 DimB = 26;
  if (this->dimb() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimb());
  }

  // optional int32 DimC = 27;
  if (this->dimc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimc());
  }

  // optional int32 DimD = 28;
  if (this->dimd() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimd());
  }

  // optional int64 ReportTicks = 29;
  if (this->reportticks() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reportticks());
  }

  // optional int64 RecentPeriod = 30;
  if (this->recentperiod() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->recentperiod());
  }

  // optional int32 m_utc_hour = 31;
  if (this->m_utc_hour() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_utc_hour());
  }

  // optional int32 m_utc_min = 32;
  if (this->m_utc_min() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_utc_min());
  }

  // optional int32 m_utc_sec = 33;
  if (this->m_utc_sec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_utc_sec());
  }

  // optional double Range_NM = 34;
  if (this->range_nm() != 0) {
    total_size += 2 + 8;
  }

  // optional double Brg = 35;
  if (this->brg() != 0) {
    total_size += 2 + 8;
  }

  // optional bool bCPA_Valid = 36;
  if (this->bcpa_valid() != 0) {
    total_size += 2 + 1;
  }

  // optional double TCPA = 37;
  if (this->tcpa() != 0) {
    total_size += 2 + 8;
  }

  // optional double CPA = 38;
  if (this->cpa() != 0) {
    total_size += 2 + 8;
  }

  // optional bool Simulation = 39;
  if (this->simulation() != 0) {
    total_size += 2 + 1;
  }

  // optional bool OwnShip = 40;
  if (this->ownship() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 ReportInterval = 41;
  if (this->reportinterval() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reportinterval());
  }

  // optional double Length = 42;
  if (this->length() != 0) {
    total_size += 2 + 8;
  }

  // optional double Width = 43;
  if (this->width() != 0) {
    total_size += 2 + 8;
  }

  // optional bool SetShipSize = 44;
  if (this->setshipsize() != 0) {
    total_size += 2 + 1;
  }

  // optional string ChShipName = 45;
  if (this->chshipname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chshipname());
  }

  // optional string Nationality = 46;
  if (this->nationality().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nationality());
  }

  // optional string Note = 47;
  if (this->note().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note());
  }

  // optional string ID = 48;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string RadarID = 49;
  if (this->radarid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->radarid());
  }

  // optional int32 Source = 50;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // optional int32 Reserved = 51;
  if (this->reserved() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved());
  }

  // optional int32 Rng = 52;
  if (this->rng() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rng());
  }

  // optional double RadarBrg = 53;
  if (this->radarbrg() != 0) {
    total_size += 2 + 8;
  }

  // optional double Spd = 54;
  if (this->spd() != 0) {
    total_size += 2 + 8;
  }

  // optional double Crs = 55;
  if (this->crs() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 Scans = 56;
  if (this->scans() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scans());
  }

  // optional int32 Flags = 57;
  if (this->flags() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  // optional int32 Result = 58;
  if (this->result() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional string RadarGUID = 59;
  if (this->radarguid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->radarguid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAisMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAisMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAisMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAisMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAisMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAisMessage)
    UnsafeMergeFrom(*source);
  }
}

void hgAisMessage::MergeFrom(const hgAisMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAisMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAisMessage::UnsafeMergeFrom(const hgAisMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.navstatus() != 0) {
    set_navstatus(from.navstatus());
  }
  if (from.rotais() != 0) {
    set_rotais(from.rotais());
  }
  if (from.sog() != 0) {
    set_sog(from.sog());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.cog() != 0) {
    set_cog(from.cog());
  }
  if (from.hdg() != 0) {
    set_hdg(from.hdg());
  }
  if (from.imo() != 0) {
    set_imo(from.imo());
  }
  if (from.callsign().size() > 0) {

    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  if (from.shipname().size() > 0) {

    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  if (from.shiptype().size() > 0) {

    shiptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shiptype_);
  }
  if (from.posaccuracy() != 0) {
    set_posaccuracy(from.posaccuracy());
  }
  if (from.equipmenttype() != 0) {
    set_equipmenttype(from.equipmenttype());
  }
  if (from.eta_mo() != 0) {
    set_eta_mo(from.eta_mo());
  }
  if (from.eta_day() != 0) {
    set_eta_day(from.eta_day());
  }
  if (from.eta_hr() != 0) {
    set_eta_hr(from.eta_hr());
  }
  if (from.eta_min() != 0) {
    set_eta_min(from.eta_min());
  }
  if (from.draft() != 0) {
    set_draft(from.draft());
  }
  if (from.destination().size() > 0) {

    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  if (from.syncstate() != 0) {
    set_syncstate(from.syncstate());
  }
  if (from.slotto() != 0) {
    set_slotto(from.slotto());
  }
  if (from.dima() != 0) {
    set_dima(from.dima());
  }
  if (from.dimb() != 0) {
    set_dimb(from.dimb());
  }
  if (from.dimc() != 0) {
    set_dimc(from.dimc());
  }
  if (from.dimd() != 0) {
    set_dimd(from.dimd());
  }
  if (from.reportticks() != 0) {
    set_reportticks(from.reportticks());
  }
  if (from.recentperiod() != 0) {
    set_recentperiod(from.recentperiod());
  }
  if (from.m_utc_hour() != 0) {
    set_m_utc_hour(from.m_utc_hour());
  }
  if (from.m_utc_min() != 0) {
    set_m_utc_min(from.m_utc_min());
  }
  if (from.m_utc_sec() != 0) {
    set_m_utc_sec(from.m_utc_sec());
  }
  if (from.range_nm() != 0) {
    set_range_nm(from.range_nm());
  }
  if (from.brg() != 0) {
    set_brg(from.brg());
  }
  if (from.bcpa_valid() != 0) {
    set_bcpa_valid(from.bcpa_valid());
  }
  if (from.tcpa() != 0) {
    set_tcpa(from.tcpa());
  }
  if (from.cpa() != 0) {
    set_cpa(from.cpa());
  }
  if (from.simulation() != 0) {
    set_simulation(from.simulation());
  }
  if (from.ownship() != 0) {
    set_ownship(from.ownship());
  }
  if (from.reportinterval() != 0) {
    set_reportinterval(from.reportinterval());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.setshipsize() != 0) {
    set_setshipsize(from.setshipsize());
  }
  if (from.chshipname().size() > 0) {

    chshipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chshipname_);
  }
  if (from.nationality().size() > 0) {

    nationality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nationality_);
  }
  if (from.note().size() > 0) {

    note_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.radarid().size() > 0) {

    radarid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radarid_);
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
  if (from.rng() != 0) {
    set_rng(from.rng());
  }
  if (from.radarbrg() != 0) {
    set_radarbrg(from.radarbrg());
  }
  if (from.spd() != 0) {
    set_spd(from.spd());
  }
  if (from.crs() != 0) {
    set_crs(from.crs());
  }
  if (from.scans() != 0) {
    set_scans(from.scans());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.radarguid().size() > 0) {

    radarguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radarguid_);
  }
}

void hgAisMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAisMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAisMessage::CopyFrom(const hgAisMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAisMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAisMessage::IsInitialized() const {

  return true;
}

void hgAisMessage::Swap(hgAisMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAisMessage::InternalSwap(hgAisMessage* other) {
  std::swap(mid_, other->mid_);
  std::swap(class__, other->class__);
  mmsi_.Swap(&other->mmsi_);
  std::swap(navstatus_, other->navstatus_);
  std::swap(rotais_, other->rotais_);
  std::swap(sog_, other->sog_);
  std::swap(lon_, other->lon_);
  std::swap(lat_, other->lat_);
  std::swap(cog_, other->cog_);
  std::swap(hdg_, other->hdg_);
  std::swap(imo_, other->imo_);
  callsign_.Swap(&other->callsign_);
  shipname_.Swap(&other->shipname_);
  shiptype_.Swap(&other->shiptype_);
  std::swap(posaccuracy_, other->posaccuracy_);
  std::swap(equipmenttype_, other->equipmenttype_);
  std::swap(eta_mo_, other->eta_mo_);
  std::swap(eta_day_, other->eta_day_);
  std::swap(eta_hr_, other->eta_hr_);
  std::swap(eta_min_, other->eta_min_);
  std::swap(draft_, other->draft_);
  destination_.Swap(&other->destination_);
  std::swap(syncstate_, other->syncstate_);
  std::swap(slotto_, other->slotto_);
  std::swap(dima_, other->dima_);
  std::swap(dimb_, other->dimb_);
  std::swap(dimc_, other->dimc_);
  std::swap(dimd_, other->dimd_);
  std::swap(reportticks_, other->reportticks_);
  std::swap(recentperiod_, other->recentperiod_);
  std::swap(m_utc_hour_, other->m_utc_hour_);
  std::swap(m_utc_min_, other->m_utc_min_);
  std::swap(m_utc_sec_, other->m_utc_sec_);
  std::swap(range_nm_, other->range_nm_);
  std::swap(brg_, other->brg_);
  std::swap(bcpa_valid_, other->bcpa_valid_);
  std::swap(tcpa_, other->tcpa_);
  std::swap(cpa_, other->cpa_);
  std::swap(simulation_, other->simulation_);
  std::swap(ownship_, other->ownship_);
  std::swap(reportinterval_, other->reportinterval_);
  std::swap(length_, other->length_);
  std::swap(width_, other->width_);
  std::swap(setshipsize_, other->setshipsize_);
  chshipname_.Swap(&other->chshipname_);
  nationality_.Swap(&other->nationality_);
  note_.Swap(&other->note_);
  id_.Swap(&other->id_);
  radarid_.Swap(&other->radarid_);
  std::swap(source_, other->source_);
  std::swap(reserved_, other->reserved_);
  std::swap(rng_, other->rng_);
  std::swap(radarbrg_, other->radarbrg_);
  std::swap(spd_, other->spd_);
  std::swap(crs_, other->crs_);
  std::swap(scans_, other->scans_);
  std::swap(flags_, other->flags_);
  std::swap(result_, other->result_);
  radarguid_.Swap(&other->radarguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAisMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAisMessage_descriptor_;
  metadata.reflection = hgAisMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAisMessage

// optional int32 MID = 1;
void hgAisMessage::clear_mid() {
  mid_ = 0;
}
::google::protobuf::int32 hgAisMessage::mid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.MID)
  return mid_;
}
void hgAisMessage::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.MID)
}

// optional int32 Class = 2;
void hgAisMessage::clear_class_() {
  class__ = 0;
}
::google::protobuf::int32 hgAisMessage::class_() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Class)
  return class__;
}
void hgAisMessage::set_class_(::google::protobuf::int32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Class)
}

// optional string MMSI = 3;
void hgAisMessage::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::mmsi() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.MMSI)
}
void hgAisMessage::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.MMSI)
}
void hgAisMessage::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.MMSI)
}
::std::string* hgAisMessage::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgAisMessage.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.MMSI)
}

// optional int32 NavStatus = 4;
void hgAisMessage::clear_navstatus() {
  navstatus_ = 0;
}
::google::protobuf::int32 hgAisMessage::navstatus() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.NavStatus)
  return navstatus_;
}
void hgAisMessage::set_navstatus(::google::protobuf::int32 value) {
  
  navstatus_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.NavStatus)
}

// optional int32 ROTAIS = 5;
void hgAisMessage::clear_rotais() {
  rotais_ = 0;
}
::google::protobuf::int32 hgAisMessage::rotais() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ROTAIS)
  return rotais_;
}
void hgAisMessage::set_rotais(::google::protobuf::int32 value) {
  
  rotais_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ROTAIS)
}

// optional double SOG = 6;
void hgAisMessage::clear_sog() {
  sog_ = 0;
}
double hgAisMessage::sog() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SOG)
  return sog_;
}
void hgAisMessage::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SOG)
}

// optional double Lon = 7;
void hgAisMessage::clear_lon() {
  lon_ = 0;
}
double hgAisMessage::lon() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Lon)
  return lon_;
}
void hgAisMessage::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Lon)
}

// optional double Lat = 8;
void hgAisMessage::clear_lat() {
  lat_ = 0;
}
double hgAisMessage::lat() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Lat)
  return lat_;
}
void hgAisMessage::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Lat)
}

// optional double COG = 9;
void hgAisMessage::clear_cog() {
  cog_ = 0;
}
double hgAisMessage::cog() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.COG)
  return cog_;
}
void hgAisMessage::set_cog(double value) {
  
  cog_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.COG)
}

// optional double HDG = 10;
void hgAisMessage::clear_hdg() {
  hdg_ = 0;
}
double hgAisMessage::hdg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.HDG)
  return hdg_;
}
void hgAisMessage::set_hdg(double value) {
  
  hdg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.HDG)
}

// optional int32 IMO = 11;
void hgAisMessage::clear_imo() {
  imo_ = 0;
}
::google::protobuf::int32 hgAisMessage::imo() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.IMO)
  return imo_;
}
void hgAisMessage::set_imo(::google::protobuf::int32 value) {
  
  imo_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.IMO)
}

// optional string CallSign = 12;
void hgAisMessage::clear_callsign() {
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::callsign() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.CallSign)
  return callsign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_callsign(const ::std::string& value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.CallSign)
}
void hgAisMessage::set_callsign(const char* value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.CallSign)
}
void hgAisMessage::set_callsign(const char* value, size_t size) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.CallSign)
}
::std::string* hgAisMessage::mutable_callsign() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.CallSign)
  return callsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_callsign() {
  // @@protoc_insertion_point(field_release:hgAisMessage.CallSign)
  
  return callsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_callsign(::std::string* callsign) {
  if (callsign != NULL) {
    
  } else {
    
  }
  callsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callsign);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.CallSign)
}

// optional string ShipName = 13;
void hgAisMessage::clear_shipname() {
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::shipname() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ShipName)
  return shipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_shipname(const ::std::string& value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ShipName)
}
void hgAisMessage::set_shipname(const char* value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ShipName)
}
void hgAisMessage::set_shipname(const char* value, size_t size) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ShipName)
}
::std::string* hgAisMessage::mutable_shipname() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ShipName)
  return shipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_shipname() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ShipName)
  
  return shipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_shipname(::std::string* shipname) {
  if (shipname != NULL) {
    
  } else {
    
  }
  shipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipname);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ShipName)
}

// optional string ShipType = 14;
void hgAisMessage::clear_shiptype() {
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::shiptype() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ShipType)
  return shiptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_shiptype(const ::std::string& value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ShipType)
}
void hgAisMessage::set_shiptype(const char* value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ShipType)
}
void hgAisMessage::set_shiptype(const char* value, size_t size) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ShipType)
}
::std::string* hgAisMessage::mutable_shiptype() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ShipType)
  return shiptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_shiptype() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ShipType)
  
  return shiptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_shiptype(::std::string* shiptype) {
  if (shiptype != NULL) {
    
  } else {
    
  }
  shiptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shiptype);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ShipType)
}

// optional int32 PosAccuracy = 15;
void hgAisMessage::clear_posaccuracy() {
  posaccuracy_ = 0;
}
::google::protobuf::int32 hgAisMessage::posaccuracy() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.PosAccuracy)
  return posaccuracy_;
}
void hgAisMessage::set_posaccuracy(::google::protobuf::int32 value) {
  
  posaccuracy_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.PosAccuracy)
}

// optional int32 EquipmentType = 16;
void hgAisMessage::clear_equipmenttype() {
  equipmenttype_ = 0;
}
::google::protobuf::int32 hgAisMessage::equipmenttype() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.EquipmentType)
  return equipmenttype_;
}
void hgAisMessage::set_equipmenttype(::google::protobuf::int32 value) {
  
  equipmenttype_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.EquipmentType)
}

// optional int32 ETA_Mo = 17;
void hgAisMessage::clear_eta_mo() {
  eta_mo_ = 0;
}
::google::protobuf::int32 hgAisMessage::eta_mo() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Mo)
  return eta_mo_;
}
void hgAisMessage::set_eta_mo(::google::protobuf::int32 value) {
  
  eta_mo_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Mo)
}

// optional int32 ETA_Day = 18;
void hgAisMessage::clear_eta_day() {
  eta_day_ = 0;
}
::google::protobuf::int32 hgAisMessage::eta_day() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Day)
  return eta_day_;
}
void hgAisMessage::set_eta_day(::google::protobuf::int32 value) {
  
  eta_day_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Day)
}

// optional int32 ETA_Hr = 19;
void hgAisMessage::clear_eta_hr() {
  eta_hr_ = 0;
}
::google::protobuf::int32 hgAisMessage::eta_hr() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Hr)
  return eta_hr_;
}
void hgAisMessage::set_eta_hr(::google::protobuf::int32 value) {
  
  eta_hr_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Hr)
}

// optional int32 ETA_Min = 20;
void hgAisMessage::clear_eta_min() {
  eta_min_ = 0;
}
::google::protobuf::int32 hgAisMessage::eta_min() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Min)
  return eta_min_;
}
void hgAisMessage::set_eta_min(::google::protobuf::int32 value) {
  
  eta_min_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Min)
}

// optional double Draft = 21;
void hgAisMessage::clear_draft() {
  draft_ = 0;
}
double hgAisMessage::draft() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Draft)
  return draft_;
}
void hgAisMessage::set_draft(double value) {
  
  draft_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Draft)
}

// optional string Destination = 22;
void hgAisMessage::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::destination() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Destination)
  return destination_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_destination(const ::std::string& value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Destination)
}
void hgAisMessage::set_destination(const char* value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Destination)
}
void hgAisMessage::set_destination(const char* value, size_t size) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Destination)
}
::std::string* hgAisMessage::mutable_destination() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_destination() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Destination)
  
  return destination_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    
  } else {
    
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Destination)
}

// optional int32 SyncState = 23;
void hgAisMessage::clear_syncstate() {
  syncstate_ = 0;
}
::google::protobuf::int32 hgAisMessage::syncstate() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SyncState)
  return syncstate_;
}
void hgAisMessage::set_syncstate(::google::protobuf::int32 value) {
  
  syncstate_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SyncState)
}

// optional int32 SlotTO = 24;
void hgAisMessage::clear_slotto() {
  slotto_ = 0;
}
::google::protobuf::int32 hgAisMessage::slotto() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SlotTO)
  return slotto_;
}
void hgAisMessage::set_slotto(::google::protobuf::int32 value) {
  
  slotto_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SlotTO)
}

// optional int32 DimA = 25;
void hgAisMessage::clear_dima() {
  dima_ = 0;
}
::google::protobuf::int32 hgAisMessage::dima() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimA)
  return dima_;
}
void hgAisMessage::set_dima(::google::protobuf::int32 value) {
  
  dima_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimA)
}

// optional int32 DimB = 26;
void hgAisMessage::clear_dimb() {
  dimb_ = 0;
}
::google::protobuf::int32 hgAisMessage::dimb() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimB)
  return dimb_;
}
void hgAisMessage::set_dimb(::google::protobuf::int32 value) {
  
  dimb_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimB)
}

// optional int32 DimC = 27;
void hgAisMessage::clear_dimc() {
  dimc_ = 0;
}
::google::protobuf::int32 hgAisMessage::dimc() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimC)
  return dimc_;
}
void hgAisMessage::set_dimc(::google::protobuf::int32 value) {
  
  dimc_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimC)
}

// optional int32 DimD = 28;
void hgAisMessage::clear_dimd() {
  dimd_ = 0;
}
::google::protobuf::int32 hgAisMessage::dimd() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimD)
  return dimd_;
}
void hgAisMessage::set_dimd(::google::protobuf::int32 value) {
  
  dimd_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimD)
}

// optional int64 ReportTicks = 29;
void hgAisMessage::clear_reportticks() {
  reportticks_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgAisMessage::reportticks() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ReportTicks)
  return reportticks_;
}
void hgAisMessage::set_reportticks(::google::protobuf::int64 value) {
  
  reportticks_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ReportTicks)
}

// optional int64 RecentPeriod = 30;
void hgAisMessage::clear_recentperiod() {
  recentperiod_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgAisMessage::recentperiod() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RecentPeriod)
  return recentperiod_;
}
void hgAisMessage::set_recentperiod(::google::protobuf::int64 value) {
  
  recentperiod_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.RecentPeriod)
}

// optional int32 m_utc_hour = 31;
void hgAisMessage::clear_m_utc_hour() {
  m_utc_hour_ = 0;
}
::google::protobuf::int32 hgAisMessage::m_utc_hour() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_hour)
  return m_utc_hour_;
}
void hgAisMessage::set_m_utc_hour(::google::protobuf::int32 value) {
  
  m_utc_hour_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_hour)
}

// optional int32 m_utc_min = 32;
void hgAisMessage::clear_m_utc_min() {
  m_utc_min_ = 0;
}
::google::protobuf::int32 hgAisMessage::m_utc_min() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_min)
  return m_utc_min_;
}
void hgAisMessage::set_m_utc_min(::google::protobuf::int32 value) {
  
  m_utc_min_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_min)
}

// optional int32 m_utc_sec = 33;
void hgAisMessage::clear_m_utc_sec() {
  m_utc_sec_ = 0;
}
::google::protobuf::int32 hgAisMessage::m_utc_sec() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_sec)
  return m_utc_sec_;
}
void hgAisMessage::set_m_utc_sec(::google::protobuf::int32 value) {
  
  m_utc_sec_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_sec)
}

// optional double Range_NM = 34;
void hgAisMessage::clear_range_nm() {
  range_nm_ = 0;
}
double hgAisMessage::range_nm() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Range_NM)
  return range_nm_;
}
void hgAisMessage::set_range_nm(double value) {
  
  range_nm_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Range_NM)
}

// optional double Brg = 35;
void hgAisMessage::clear_brg() {
  brg_ = 0;
}
double hgAisMessage::brg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Brg)
  return brg_;
}
void hgAisMessage::set_brg(double value) {
  
  brg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Brg)
}

// optional bool bCPA_Valid = 36;
void hgAisMessage::clear_bcpa_valid() {
  bcpa_valid_ = false;
}
bool hgAisMessage::bcpa_valid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.bCPA_Valid)
  return bcpa_valid_;
}
void hgAisMessage::set_bcpa_valid(bool value) {
  
  bcpa_valid_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.bCPA_Valid)
}

// optional double TCPA = 37;
void hgAisMessage::clear_tcpa() {
  tcpa_ = 0;
}
double hgAisMessage::tcpa() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.TCPA)
  return tcpa_;
}
void hgAisMessage::set_tcpa(double value) {
  
  tcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.TCPA)
}

// optional double CPA = 38;
void hgAisMessage::clear_cpa() {
  cpa_ = 0;
}
double hgAisMessage::cpa() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.CPA)
  return cpa_;
}
void hgAisMessage::set_cpa(double value) {
  
  cpa_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.CPA)
}

// optional bool Simulation = 39;
void hgAisMessage::clear_simulation() {
  simulation_ = false;
}
bool hgAisMessage::simulation() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Simulation)
  return simulation_;
}
void hgAisMessage::set_simulation(bool value) {
  
  simulation_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Simulation)
}

// optional bool OwnShip = 40;
void hgAisMessage::clear_ownship() {
  ownship_ = false;
}
bool hgAisMessage::ownship() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.OwnShip)
  return ownship_;
}
void hgAisMessage::set_ownship(bool value) {
  
  ownship_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.OwnShip)
}

// optional int32 ReportInterval = 41;
void hgAisMessage::clear_reportinterval() {
  reportinterval_ = 0;
}
::google::protobuf::int32 hgAisMessage::reportinterval() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ReportInterval)
  return reportinterval_;
}
void hgAisMessage::set_reportinterval(::google::protobuf::int32 value) {
  
  reportinterval_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ReportInterval)
}

// optional double Length = 42;
void hgAisMessage::clear_length() {
  length_ = 0;
}
double hgAisMessage::length() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Length)
  return length_;
}
void hgAisMessage::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Length)
}

// optional double Width = 43;
void hgAisMessage::clear_width() {
  width_ = 0;
}
double hgAisMessage::width() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Width)
  return width_;
}
void hgAisMessage::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Width)
}

// optional bool SetShipSize = 44;
void hgAisMessage::clear_setshipsize() {
  setshipsize_ = false;
}
bool hgAisMessage::setshipsize() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SetShipSize)
  return setshipsize_;
}
void hgAisMessage::set_setshipsize(bool value) {
  
  setshipsize_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SetShipSize)
}

// optional string ChShipName = 45;
void hgAisMessage::clear_chshipname() {
  chshipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::chshipname() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ChShipName)
  return chshipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_chshipname(const ::std::string& value) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ChShipName)
}
void hgAisMessage::set_chshipname(const char* value) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ChShipName)
}
void hgAisMessage::set_chshipname(const char* value, size_t size) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ChShipName)
}
::std::string* hgAisMessage::mutable_chshipname() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ChShipName)
  return chshipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_chshipname() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ChShipName)
  
  return chshipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_chshipname(::std::string* chshipname) {
  if (chshipname != NULL) {
    
  } else {
    
  }
  chshipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chshipname);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ChShipName)
}

// optional string Nationality = 46;
void hgAisMessage::clear_nationality() {
  nationality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::nationality() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Nationality)
  return nationality_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_nationality(const ::std::string& value) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Nationality)
}
void hgAisMessage::set_nationality(const char* value) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Nationality)
}
void hgAisMessage::set_nationality(const char* value, size_t size) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Nationality)
}
::std::string* hgAisMessage::mutable_nationality() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Nationality)
  return nationality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_nationality() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Nationality)
  
  return nationality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_nationality(::std::string* nationality) {
  if (nationality != NULL) {
    
  } else {
    
  }
  nationality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nationality);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Nationality)
}

// optional string Note = 47;
void hgAisMessage::clear_note() {
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::note() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Note)
  return note_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_note(const ::std::string& value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Note)
}
void hgAisMessage::set_note(const char* value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Note)
}
void hgAisMessage::set_note(const char* value, size_t size) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Note)
}
::std::string* hgAisMessage::mutable_note() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Note)
  return note_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_note() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Note)
  
  return note_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_note(::std::string* note) {
  if (note != NULL) {
    
  } else {
    
  }
  note_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), note);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Note)
}

// optional string ID = 48;
void hgAisMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::id() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ID)
}
void hgAisMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ID)
}
void hgAisMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ID)
}
::std::string* hgAisMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_id() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ID)
}

// optional string RadarID = 49;
void hgAisMessage::clear_radarid() {
  radarid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::radarid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarID)
  return radarid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_radarid(const ::std::string& value) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarID)
}
void hgAisMessage::set_radarid(const char* value) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.RadarID)
}
void hgAisMessage::set_radarid(const char* value, size_t size) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.RadarID)
}
::std::string* hgAisMessage::mutable_radarid() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.RadarID)
  return radarid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_radarid() {
  // @@protoc_insertion_point(field_release:hgAisMessage.RadarID)
  
  return radarid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_radarid(::std::string* radarid) {
  if (radarid != NULL) {
    
  } else {
    
  }
  radarid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radarid);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.RadarID)
}

// optional int32 Source = 50;
void hgAisMessage::clear_source() {
  source_ = 0;
}
::google::protobuf::int32 hgAisMessage::source() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Source)
  return source_;
}
void hgAisMessage::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Source)
}

// optional int32 Reserved = 51;
void hgAisMessage::clear_reserved() {
  reserved_ = 0;
}
::google::protobuf::int32 hgAisMessage::reserved() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Reserved)
  return reserved_;
}
void hgAisMessage::set_reserved(::google::protobuf::int32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Reserved)
}

// optional int32 Rng = 52;
void hgAisMessage::clear_rng() {
  rng_ = 0;
}
::google::protobuf::int32 hgAisMessage::rng() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Rng)
  return rng_;
}
void hgAisMessage::set_rng(::google::protobuf::int32 value) {
  
  rng_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Rng)
}

// optional double RadarBrg = 53;
void hgAisMessage::clear_radarbrg() {
  radarbrg_ = 0;
}
double hgAisMessage::radarbrg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarBrg)
  return radarbrg_;
}
void hgAisMessage::set_radarbrg(double value) {
  
  radarbrg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarBrg)
}

// optional double Spd = 54;
void hgAisMessage::clear_spd() {
  spd_ = 0;
}
double hgAisMessage::spd() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Spd)
  return spd_;
}
void hgAisMessage::set_spd(double value) {
  
  spd_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Spd)
}

// optional double Crs = 55;
void hgAisMessage::clear_crs() {
  crs_ = 0;
}
double hgAisMessage::crs() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Crs)
  return crs_;
}
void hgAisMessage::set_crs(double value) {
  
  crs_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Crs)
}

// optional int32 Scans = 56;
void hgAisMessage::clear_scans() {
  scans_ = 0;
}
::google::protobuf::int32 hgAisMessage::scans() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Scans)
  return scans_;
}
void hgAisMessage::set_scans(::google::protobuf::int32 value) {
  
  scans_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Scans)
}

// optional int32 Flags = 57;
void hgAisMessage::clear_flags() {
  flags_ = 0;
}
::google::protobuf::int32 hgAisMessage::flags() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Flags)
  return flags_;
}
void hgAisMessage::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Flags)
}

// optional int32 Result = 58;
void hgAisMessage::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 hgAisMessage::result() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Result)
  return result_;
}
void hgAisMessage::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Result)
}

// optional string RadarGUID = 59;
void hgAisMessage::clear_radarguid() {
  radarguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisMessage::radarguid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarGUID)
  return radarguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_radarguid(const ::std::string& value) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarGUID)
}
void hgAisMessage::set_radarguid(const char* value) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.RadarGUID)
}
void hgAisMessage::set_radarguid(const char* value, size_t size) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.RadarGUID)
}
::std::string* hgAisMessage::mutable_radarguid() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.RadarGUID)
  return radarguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisMessage::release_radarguid() {
  // @@protoc_insertion_point(field_release:hgAisMessage.RadarGUID)
  
  return radarguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisMessage::set_allocated_radarguid(::std::string* radarguid) {
  if (radarguid != NULL) {
    
  } else {
    
  }
  radarguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radarguid);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.RadarGUID)
}

inline const hgAisMessage* hgAisMessage::internal_default_instance() {
  return &hgAisMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAisRepsone::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAisRepsone::hgAisRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAisMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAisRepsone)
}

void hgAisRepsone::InitAsDefaultInstance() {
}

hgAisRepsone::hgAisRepsone(const hgAisRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAisRepsone)
}

void hgAisRepsone::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

hgAisRepsone::~hgAisRepsone() {
  // @@protoc_insertion_point(destructor:hgAisRepsone)
  SharedDtor();
}

void hgAisRepsone::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgAisRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAisRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAisRepsone_descriptor_;
}

const hgAisRepsone& hgAisRepsone::default_instance() {
  protobuf_InitDefaults_hgAisMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAisRepsone> hgAisRepsone_default_instance_;

hgAisRepsone* hgAisRepsone::New(::google::protobuf::Arena* arena) const {
  hgAisRepsone* n = new hgAisRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAisRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAisRepsone)
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool hgAisRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAisRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAisRepsone.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAisRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAisRepsone)
  return false;
#undef DO_
}

void hgAisRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAisRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisRepsone.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAisRepsone)
}

::google::protobuf::uint8* hgAisRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAisRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAisRepsone.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAisRepsone)
  return target;
}

size_t hgAisRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAisRepsone)
  size_t total_size = 0;

  // optional string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAisRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAisRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAisRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAisRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAisRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAisRepsone)
    UnsafeMergeFrom(*source);
  }
}

void hgAisRepsone::MergeFrom(const hgAisRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAisRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAisRepsone::UnsafeMergeFrom(const hgAisRepsone& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void hgAisRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAisRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAisRepsone::CopyFrom(const hgAisRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAisRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAisRepsone::IsInitialized() const {

  return true;
}

void hgAisRepsone::Swap(hgAisRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAisRepsone::InternalSwap(hgAisRepsone* other) {
  result_.Swap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAisRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAisRepsone_descriptor_;
  metadata.reflection = hgAisRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAisRepsone

// optional string result = 1;
void hgAisRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAisRepsone::result() const {
  // @@protoc_insertion_point(field_get:hgAisRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisRepsone.result)
}
void hgAisRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisRepsone.result)
}
void hgAisRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisRepsone.result)
}
::std::string* hgAisRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:hgAisRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAisRepsone::release_result() {
  // @@protoc_insertion_point(field_release:hgAisRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAisRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:hgAisRepsone.result)
}

inline const hgAisRepsone* hgAisRepsone::internal_default_instance() {
  return &hgAisRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
