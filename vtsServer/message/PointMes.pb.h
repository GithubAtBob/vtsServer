// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PointMes.proto

#ifndef PROTOBUF_PointMes_2eproto__INCLUDED
#define PROTOBUF_PointMes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PointMes_2eproto();
void protobuf_InitDefaults_PointMes_2eproto();
void protobuf_AssignDesc_PointMes_2eproto();
void protobuf_ShutdownFile_PointMes_2eproto();

class PointMes;

// ===================================================================

class PointMes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PointMes) */ {
 public:
  PointMes();
  virtual ~PointMes();

  PointMes(const PointMes& from);

  inline PointMes& operator=(const PointMes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointMes& default_instance();

  static const PointMes* internal_default_instance();

  void Swap(PointMes* other);

  // implements Message ----------------------------------------------

  inline PointMes* New() const { return New(NULL); }

  PointMes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointMes& from);
  void MergeFrom(const PointMes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointMes* other);
  void UnsafeMergeFrom(const PointMes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // optional double lon = 2;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  double lon() const;
  void set_lon(double value);

  // @@protoc_insertion_point(class_scope:PointMes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double lat_;
  double lon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PointMes_2eproto_impl();
  friend void  protobuf_AddDesc_PointMes_2eproto_impl();
  friend void protobuf_AssignDesc_PointMes_2eproto();
  friend void protobuf_ShutdownFile_PointMes_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PointMes> PointMes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PointMes

// optional double lat = 1;
inline void PointMes::clear_lat() {
  lat_ = 0;
}
inline double PointMes::lat() const {
  // @@protoc_insertion_point(field_get:PointMes.lat)
  return lat_;
}
inline void PointMes::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:PointMes.lat)
}

// optional double lon = 2;
inline void PointMes::clear_lon() {
  lon_ = 0;
}
inline double PointMes::lon() const {
  // @@protoc_insertion_point(field_get:PointMes.lon)
  return lon_;
}
inline void PointMes::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:PointMes.lon)
}

inline const PointMes* PointMes::internal_default_instance() {
  return &PointMes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PointMes_2eproto__INCLUDED
