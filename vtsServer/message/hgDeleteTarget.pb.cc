// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgDeleteTarget.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgDeleteTarget.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgDeleteTarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgDeleteTarget_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DeleteTarget_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgDeleteTarget_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgDeleteTarget_2eproto() {
  protobuf_AddDesc_hgDeleteTarget_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgDeleteTarget.proto");
  GOOGLE_CHECK(file != NULL);
  hgDeleteTarget_descriptor_ = file->message_type(0);
  static const int hgDeleteTarget_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgDeleteTarget, deletetype_),
  };
  hgDeleteTarget_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgDeleteTarget_descriptor_,
      hgDeleteTarget::internal_default_instance(),
      hgDeleteTarget_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgDeleteTarget),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgDeleteTarget, _internal_metadata_));
  DeleteTarget_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgDeleteTarget_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgDeleteTarget_descriptor_, hgDeleteTarget::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgDeleteTarget_2eproto() {
  hgDeleteTarget_default_instance_.Shutdown();
  delete hgDeleteTarget_reflection_;
}

void protobuf_InitDefaults_hgDeleteTarget_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  hgDeleteTarget_default_instance_.DefaultConstruct();
  hgDeleteTarget_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgDeleteTarget_2eproto_once_);
void protobuf_InitDefaults_hgDeleteTarget_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgDeleteTarget_2eproto_once_,
                 &protobuf_InitDefaults_hgDeleteTarget_2eproto_impl);
}
void protobuf_AddDesc_hgDeleteTarget_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgDeleteTarget_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024hgDeleteTarget.proto\"$\n\016hgDeleteTarget"
    "\022\022\n\nDeleteType\030\001 \001(\005*<\n\014DeleteTarget\022\r\n\t"
    "DeleteAll\020\000\022\r\n\tDeleteSim\020\001\022\016\n\nDeleteLost"
    "\020\002b\006proto3", 130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgDeleteTarget.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgDeleteTarget_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgDeleteTarget_2eproto_once_);
void protobuf_AddDesc_hgDeleteTarget_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgDeleteTarget_2eproto_once_,
                 &protobuf_AddDesc_hgDeleteTarget_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgDeleteTarget_2eproto {
  StaticDescriptorInitializer_hgDeleteTarget_2eproto() {
    protobuf_AddDesc_hgDeleteTarget_2eproto();
  }
} static_descriptor_initializer_hgDeleteTarget_2eproto_;
const ::google::protobuf::EnumDescriptor* DeleteTarget_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteTarget_descriptor_;
}
bool DeleteTarget_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgDeleteTarget::kDeleteTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgDeleteTarget::hgDeleteTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgDeleteTarget_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgDeleteTarget)
}

void hgDeleteTarget::InitAsDefaultInstance() {
}

hgDeleteTarget::hgDeleteTarget(const hgDeleteTarget& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgDeleteTarget)
}

void hgDeleteTarget::SharedCtor() {
  deletetype_ = 0;
  _cached_size_ = 0;
}

hgDeleteTarget::~hgDeleteTarget() {
  // @@protoc_insertion_point(destructor:hgDeleteTarget)
  SharedDtor();
}

void hgDeleteTarget::SharedDtor() {
}

void hgDeleteTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgDeleteTarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgDeleteTarget_descriptor_;
}

const hgDeleteTarget& hgDeleteTarget::default_instance() {
  protobuf_InitDefaults_hgDeleteTarget_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgDeleteTarget> hgDeleteTarget_default_instance_;

hgDeleteTarget* hgDeleteTarget::New(::google::protobuf::Arena* arena) const {
  hgDeleteTarget* n = new hgDeleteTarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgDeleteTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:hgDeleteTarget)
  deletetype_ = 0;
}

bool hgDeleteTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgDeleteTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 DeleteType = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deletetype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgDeleteTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgDeleteTarget)
  return false;
#undef DO_
}

void hgDeleteTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgDeleteTarget)
  // optional int32 DeleteType = 1;
  if (this->deletetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deletetype(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgDeleteTarget)
}

::google::protobuf::uint8* hgDeleteTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgDeleteTarget)
  // optional int32 DeleteType = 1;
  if (this->deletetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deletetype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgDeleteTarget)
  return target;
}

size_t hgDeleteTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgDeleteTarget)
  size_t total_size = 0;

  // optional int32 DeleteType = 1;
  if (this->deletetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deletetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgDeleteTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgDeleteTarget)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgDeleteTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgDeleteTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgDeleteTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgDeleteTarget)
    UnsafeMergeFrom(*source);
  }
}

void hgDeleteTarget::MergeFrom(const hgDeleteTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgDeleteTarget)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgDeleteTarget::UnsafeMergeFrom(const hgDeleteTarget& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.deletetype() != 0) {
    set_deletetype(from.deletetype());
  }
}

void hgDeleteTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgDeleteTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgDeleteTarget::CopyFrom(const hgDeleteTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgDeleteTarget)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgDeleteTarget::IsInitialized() const {

  return true;
}

void hgDeleteTarget::Swap(hgDeleteTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgDeleteTarget::InternalSwap(hgDeleteTarget* other) {
  std::swap(deletetype_, other->deletetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgDeleteTarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgDeleteTarget_descriptor_;
  metadata.reflection = hgDeleteTarget_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgDeleteTarget

// optional int32 DeleteType = 1;
void hgDeleteTarget::clear_deletetype() {
  deletetype_ = 0;
}
::google::protobuf::int32 hgDeleteTarget::deletetype() const {
  // @@protoc_insertion_point(field_get:hgDeleteTarget.DeleteType)
  return deletetype_;
}
void hgDeleteTarget::set_deletetype(::google::protobuf::int32 value) {
  
  deletetype_ = value;
  // @@protoc_insertion_point(field_set:hgDeleteTarget.DeleteType)
}

inline const hgDeleteTarget* hgDeleteTarget::internal_default_instance() {
  return &hgDeleteTarget_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
