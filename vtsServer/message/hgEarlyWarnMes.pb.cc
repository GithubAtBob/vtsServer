// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgEarlyWarnMes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgEarlyWarnMes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgWarnPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgWarnPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* hgEarlyWarnMes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgEarlyWarnMes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* hgWarningLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgEarlyWarnMes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgEarlyWarnMes_2eproto() {
  protobuf_AddDesc_hgEarlyWarnMes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgEarlyWarnMes.proto");
  GOOGLE_CHECK(file != NULL);
  hgWarnPoint_descriptor_ = file->message_type(0);
  static const int hgWarnPoint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarnPoint, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarnPoint, distance_),
  };
  hgWarnPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgWarnPoint_descriptor_,
      hgWarnPoint::internal_default_instance(),
      hgWarnPoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgWarnPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarnPoint, _internal_metadata_));
  hgEarlyWarnMes_descriptor_ = file->message_type(1);
  static const int hgEarlyWarnMes_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningpriority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, targetmmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, startpaint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, warningtype_),
  };
  hgEarlyWarnMes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgEarlyWarnMes_descriptor_,
      hgEarlyWarnMes::internal_default_instance(),
      hgEarlyWarnMes_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgEarlyWarnMes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgEarlyWarnMes, _internal_metadata_));
  hgWarningLevel_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgEarlyWarnMes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgWarnPoint_descriptor_, hgWarnPoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgEarlyWarnMes_descriptor_, hgEarlyWarnMes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgEarlyWarnMes_2eproto() {
  hgWarnPoint_default_instance_.Shutdown();
  delete hgWarnPoint_reflection_;
  hgEarlyWarnMes_default_instance_.Shutdown();
  delete hgEarlyWarnMes_reflection_;
}

void protobuf_InitDefaults_hgEarlyWarnMes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_hgWarningType_2eproto();
  hgWarnPoint_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  hgEarlyWarnMes_default_instance_.DefaultConstruct();
  hgWarnPoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  hgEarlyWarnMes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgEarlyWarnMes_2eproto_once_);
void protobuf_InitDefaults_hgEarlyWarnMes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgEarlyWarnMes_2eproto_once_,
                 &protobuf_InitDefaults_hgEarlyWarnMes_2eproto_impl);
}
void protobuf_AddDesc_hgEarlyWarnMes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgEarlyWarnMes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024hgEarlyWarnMes.proto\032\023hgWarningType.pr"
    "oto\"-\n\013hgWarnPoint\022\014\n\004time\030\001 \001(\003\022\020\n\010dist"
    "ance\030\002 \001(\001\"\223\002\n\016hgEarlyWarnMes\022\021\n\tWarning"
    "ID\030\001 \001(\t\022\023\n\013WarningGUID\030\002 \001(\t\022\027\n\017Warning"
    "Priority\030\003 \001(\005\022\023\n\013WarningName\030\004 \001(\t\022\014\n\004M"
    "MSI\030\005 \001(\t\022\022\n\nTargetMMSI\030\006 \001(\t\022\023\n\013Warning"
    "Time\030\007 \001(\003\022\036\n\005Level\030\010 \001(\0162\017.hgWarningLev"
    "el\022\033\n\005Point\030\t \003(\0132\014.hgWarnPoint\022\022\n\nStart"
    "Paint\030\n \001(\010\022#\n\013WarningType\030\013 \001(\0162\016.hgWar"
    "ningType*Z\n\016hgWarningLevel\022\n\n\006NoWarn\020\000\022\r"
    "\n\tFirstWarn\020\001\022\016\n\nSecondWarn\020\002\022\r\n\tThirdWa"
    "rn\020\003\022\016\n\nFourthWarn\020\004b\006proto3", 468);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgEarlyWarnMes.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_hgWarningType_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgEarlyWarnMes_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgEarlyWarnMes_2eproto_once_);
void protobuf_AddDesc_hgEarlyWarnMes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgEarlyWarnMes_2eproto_once_,
                 &protobuf_AddDesc_hgEarlyWarnMes_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgEarlyWarnMes_2eproto {
  StaticDescriptorInitializer_hgEarlyWarnMes_2eproto() {
    protobuf_AddDesc_hgEarlyWarnMes_2eproto();
  }
} static_descriptor_initializer_hgEarlyWarnMes_2eproto_;
const ::google::protobuf::EnumDescriptor* hgWarningLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgWarningLevel_descriptor_;
}
bool hgWarningLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgWarnPoint::kTimeFieldNumber;
const int hgWarnPoint::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgWarnPoint::hgWarnPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgEarlyWarnMes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgWarnPoint)
}

void hgWarnPoint::InitAsDefaultInstance() {
}

hgWarnPoint::hgWarnPoint(const hgWarnPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgWarnPoint)
}

void hgWarnPoint::SharedCtor() {
  ::memset(&time_, 0, reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&time_) + sizeof(distance_));
  _cached_size_ = 0;
}

hgWarnPoint::~hgWarnPoint() {
  // @@protoc_insertion_point(destructor:hgWarnPoint)
  SharedDtor();
}

void hgWarnPoint::SharedDtor() {
}

void hgWarnPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgWarnPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgWarnPoint_descriptor_;
}

const hgWarnPoint& hgWarnPoint::default_instance() {
  protobuf_InitDefaults_hgEarlyWarnMes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgWarnPoint> hgWarnPoint_default_instance_;

hgWarnPoint* hgWarnPoint::New(::google::protobuf::Arena* arena) const {
  hgWarnPoint* n = new hgWarnPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgWarnPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:hgWarnPoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgWarnPoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgWarnPoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, distance_);

#undef ZR_HELPER_
#undef ZR_

}

bool hgWarnPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgWarnPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 time = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_distance;
        break;
      }

      // optional double distance = 2;
      case 2: {
        if (tag == 17) {
         parse_distance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgWarnPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgWarnPoint)
  return false;
#undef DO_
}

void hgWarnPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgWarnPoint)
  // optional int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // optional double distance = 2;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgWarnPoint)
}

::google::protobuf::uint8* hgWarnPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgWarnPoint)
  // optional int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // optional double distance = 2;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgWarnPoint)
  return target;
}

size_t hgWarnPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgWarnPoint)
  size_t total_size = 0;

  // optional int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // optional double distance = 2;
  if (this->distance() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgWarnPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgWarnPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgWarnPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgWarnPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgWarnPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgWarnPoint)
    UnsafeMergeFrom(*source);
  }
}

void hgWarnPoint::MergeFrom(const hgWarnPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgWarnPoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgWarnPoint::UnsafeMergeFrom(const hgWarnPoint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void hgWarnPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgWarnPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgWarnPoint::CopyFrom(const hgWarnPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgWarnPoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgWarnPoint::IsInitialized() const {

  return true;
}

void hgWarnPoint::Swap(hgWarnPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgWarnPoint::InternalSwap(hgWarnPoint* other) {
  std::swap(time_, other->time_);
  std::swap(distance_, other->distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgWarnPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgWarnPoint_descriptor_;
  metadata.reflection = hgWarnPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgWarnPoint

// optional int64 time = 1;
void hgWarnPoint::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgWarnPoint::time() const {
  // @@protoc_insertion_point(field_get:hgWarnPoint.time)
  return time_;
}
void hgWarnPoint::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:hgWarnPoint.time)
}

// optional double distance = 2;
void hgWarnPoint::clear_distance() {
  distance_ = 0;
}
double hgWarnPoint::distance() const {
  // @@protoc_insertion_point(field_get:hgWarnPoint.distance)
  return distance_;
}
void hgWarnPoint::set_distance(double value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:hgWarnPoint.distance)
}

inline const hgWarnPoint* hgWarnPoint::internal_default_instance() {
  return &hgWarnPoint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgEarlyWarnMes::kWarningIDFieldNumber;
const int hgEarlyWarnMes::kWarningGUIDFieldNumber;
const int hgEarlyWarnMes::kWarningPriorityFieldNumber;
const int hgEarlyWarnMes::kWarningNameFieldNumber;
const int hgEarlyWarnMes::kMMSIFieldNumber;
const int hgEarlyWarnMes::kTargetMMSIFieldNumber;
const int hgEarlyWarnMes::kWarningTimeFieldNumber;
const int hgEarlyWarnMes::kLevelFieldNumber;
const int hgEarlyWarnMes::kPointFieldNumber;
const int hgEarlyWarnMes::kStartPaintFieldNumber;
const int hgEarlyWarnMes::kWarningTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgEarlyWarnMes::hgEarlyWarnMes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgEarlyWarnMes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgEarlyWarnMes)
}

void hgEarlyWarnMes::InitAsDefaultInstance() {
}

hgEarlyWarnMes::hgEarlyWarnMes(const hgEarlyWarnMes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgEarlyWarnMes)
}

void hgEarlyWarnMes::SharedCtor() {
  warningid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&warningpriority_, 0, reinterpret_cast<char*>(&warningtype_) -
    reinterpret_cast<char*>(&warningpriority_) + sizeof(warningtype_));
  _cached_size_ = 0;
}

hgEarlyWarnMes::~hgEarlyWarnMes() {
  // @@protoc_insertion_point(destructor:hgEarlyWarnMes)
  SharedDtor();
}

void hgEarlyWarnMes::SharedDtor() {
  warningid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgEarlyWarnMes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgEarlyWarnMes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgEarlyWarnMes_descriptor_;
}

const hgEarlyWarnMes& hgEarlyWarnMes::default_instance() {
  protobuf_InitDefaults_hgEarlyWarnMes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgEarlyWarnMes> hgEarlyWarnMes_default_instance_;

hgEarlyWarnMes* hgEarlyWarnMes::New(::google::protobuf::Arena* arena) const {
  hgEarlyWarnMes* n = new hgEarlyWarnMes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgEarlyWarnMes::Clear() {
// @@protoc_insertion_point(message_clear_start:hgEarlyWarnMes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgEarlyWarnMes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgEarlyWarnMes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(warningpriority_, warningtime_);
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(startpaint_, warningtype_);

#undef ZR_HELPER_
#undef ZR_

  point_.Clear();
}

bool hgEarlyWarnMes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgEarlyWarnMes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WarningID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningid().data(), this->warningid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgEarlyWarnMes.WarningID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarningGUID;
        break;
      }

      // optional string WarningGUID = 2;
      case 2: {
        if (tag == 18) {
         parse_WarningGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningguid().data(), this->warningguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgEarlyWarnMes.WarningGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WarningPriority;
        break;
      }

      // optional int32 WarningPriority = 3;
      case 3: {
        if (tag == 24) {
         parse_WarningPriority:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warningpriority_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_WarningName;
        break;
      }

      // optional string WarningName = 4;
      case 4: {
        if (tag == 34) {
         parse_WarningName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningname().data(), this->warningname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgEarlyWarnMes.WarningName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 5;
      case 5: {
        if (tag == 42) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgEarlyWarnMes.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_TargetMMSI;
        break;
      }

      // optional string TargetMMSI = 6;
      case 6: {
        if (tag == 50) {
         parse_TargetMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetmmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetmmsi().data(), this->targetmmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgEarlyWarnMes.TargetMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_WarningTime;
        break;
      }

      // optional int64 WarningTime = 7;
      case 7: {
        if (tag == 56) {
         parse_WarningTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &warningtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Level;
        break;
      }

      // optional .hgWarningLevel Level = 8;
      case 8: {
        if (tag == 64) {
         parse_Level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level(static_cast< ::hgWarningLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Point;
        break;
      }

      // repeated .hgWarnPoint Point = 9;
      case 9: {
        if (tag == 74) {
         parse_Point:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_Point;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(80)) goto parse_StartPaint;
        break;
      }

      // optional bool StartPaint = 10;
      case 10: {
        if (tag == 80) {
         parse_StartPaint:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &startpaint_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_WarningType;
        break;
      }

      // optional .hgWarningType WarningType = 11;
      case 11: {
        if (tag == 88) {
         parse_WarningType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warningtype(static_cast< ::hgWarningType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgEarlyWarnMes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgEarlyWarnMes)
  return false;
#undef DO_
}

void hgEarlyWarnMes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgEarlyWarnMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->warningid(), output);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->warningguid(), output);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->warningpriority(), output);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->warningname(), output);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mmsi(), output);
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.TargetMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->targetmmsi(), output);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->warningtime(), output);
  }

  // optional .hgWarningLevel Level = 8;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->level(), output);
  }

  // repeated .hgWarnPoint Point = 9;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->point(i), output);
  }

  // optional bool StartPaint = 10;
  if (this->startpaint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->startpaint(), output);
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->warningtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgEarlyWarnMes)
}

::google::protobuf::uint8* hgEarlyWarnMes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgEarlyWarnMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->warningid(), target);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->warningguid(), target);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->warningpriority(), target);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.WarningName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->warningname(), target);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mmsi(), target);
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgEarlyWarnMes.TargetMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->targetmmsi(), target);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->warningtime(), target);
  }

  // optional .hgWarningLevel Level = 8;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->level(), target);
  }

  // repeated .hgWarnPoint Point = 9;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->point(i), false, target);
  }

  // optional bool StartPaint = 10;
  if (this->startpaint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->startpaint(), target);
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->warningtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgEarlyWarnMes)
  return target;
}

size_t hgEarlyWarnMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgEarlyWarnMes)
  size_t total_size = 0;

  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningid());
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningguid());
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warningpriority());
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningname());
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetmmsi());
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->warningtime());
  }

  // optional .hgWarningLevel Level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
  }

  // optional bool StartPaint = 10;
  if (this->startpaint() != 0) {
    total_size += 1 + 1;
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warningtype());
  }

  // repeated .hgWarnPoint Point = 9;
  {
    unsigned int count = this->point_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgEarlyWarnMes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgEarlyWarnMes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgEarlyWarnMes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgEarlyWarnMes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgEarlyWarnMes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgEarlyWarnMes)
    UnsafeMergeFrom(*source);
  }
}

void hgEarlyWarnMes::MergeFrom(const hgEarlyWarnMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgEarlyWarnMes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgEarlyWarnMes::UnsafeMergeFrom(const hgEarlyWarnMes& from) {
  GOOGLE_DCHECK(&from != this);
  point_.MergeFrom(from.point_);
  if (from.warningid().size() > 0) {

    warningid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningid_);
  }
  if (from.warningguid().size() > 0) {

    warningguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningguid_);
  }
  if (from.warningpriority() != 0) {
    set_warningpriority(from.warningpriority());
  }
  if (from.warningname().size() > 0) {

    warningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningname_);
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.targetmmsi().size() > 0) {

    targetmmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetmmsi_);
  }
  if (from.warningtime() != 0) {
    set_warningtime(from.warningtime());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.startpaint() != 0) {
    set_startpaint(from.startpaint());
  }
  if (from.warningtype() != 0) {
    set_warningtype(from.warningtype());
  }
}

void hgEarlyWarnMes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgEarlyWarnMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgEarlyWarnMes::CopyFrom(const hgEarlyWarnMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgEarlyWarnMes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgEarlyWarnMes::IsInitialized() const {

  return true;
}

void hgEarlyWarnMes::Swap(hgEarlyWarnMes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgEarlyWarnMes::InternalSwap(hgEarlyWarnMes* other) {
  warningid_.Swap(&other->warningid_);
  warningguid_.Swap(&other->warningguid_);
  std::swap(warningpriority_, other->warningpriority_);
  warningname_.Swap(&other->warningname_);
  mmsi_.Swap(&other->mmsi_);
  targetmmsi_.Swap(&other->targetmmsi_);
  std::swap(warningtime_, other->warningtime_);
  std::swap(level_, other->level_);
  point_.UnsafeArenaSwap(&other->point_);
  std::swap(startpaint_, other->startpaint_);
  std::swap(warningtype_, other->warningtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgEarlyWarnMes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgEarlyWarnMes_descriptor_;
  metadata.reflection = hgEarlyWarnMes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgEarlyWarnMes

// optional string WarningID = 1;
void hgEarlyWarnMes::clear_warningid() {
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgEarlyWarnMes::warningid() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningID)
  return warningid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_warningid(const ::std::string& value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningID)
}
void hgEarlyWarnMes::set_warningid(const char* value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgEarlyWarnMes.WarningID)
}
void hgEarlyWarnMes::set_warningid(const char* value, size_t size) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgEarlyWarnMes.WarningID)
}
::std::string* hgEarlyWarnMes::mutable_warningid() {
  
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.WarningID)
  return warningid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgEarlyWarnMes::release_warningid() {
  // @@protoc_insertion_point(field_release:hgEarlyWarnMes.WarningID)
  
  return warningid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_allocated_warningid(::std::string* warningid) {
  if (warningid != NULL) {
    
  } else {
    
  }
  warningid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningid);
  // @@protoc_insertion_point(field_set_allocated:hgEarlyWarnMes.WarningID)
}

// optional string WarningGUID = 2;
void hgEarlyWarnMes::clear_warningguid() {
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgEarlyWarnMes::warningguid() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningGUID)
  return warningguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_warningguid(const ::std::string& value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningGUID)
}
void hgEarlyWarnMes::set_warningguid(const char* value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgEarlyWarnMes.WarningGUID)
}
void hgEarlyWarnMes::set_warningguid(const char* value, size_t size) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgEarlyWarnMes.WarningGUID)
}
::std::string* hgEarlyWarnMes::mutable_warningguid() {
  
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.WarningGUID)
  return warningguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgEarlyWarnMes::release_warningguid() {
  // @@protoc_insertion_point(field_release:hgEarlyWarnMes.WarningGUID)
  
  return warningguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_allocated_warningguid(::std::string* warningguid) {
  if (warningguid != NULL) {
    
  } else {
    
  }
  warningguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningguid);
  // @@protoc_insertion_point(field_set_allocated:hgEarlyWarnMes.WarningGUID)
}

// optional int32 WarningPriority = 3;
void hgEarlyWarnMes::clear_warningpriority() {
  warningpriority_ = 0;
}
::google::protobuf::int32 hgEarlyWarnMes::warningpriority() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningPriority)
  return warningpriority_;
}
void hgEarlyWarnMes::set_warningpriority(::google::protobuf::int32 value) {
  
  warningpriority_ = value;
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningPriority)
}

// optional string WarningName = 4;
void hgEarlyWarnMes::clear_warningname() {
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgEarlyWarnMes::warningname() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningName)
  return warningname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_warningname(const ::std::string& value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningName)
}
void hgEarlyWarnMes::set_warningname(const char* value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgEarlyWarnMes.WarningName)
}
void hgEarlyWarnMes::set_warningname(const char* value, size_t size) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgEarlyWarnMes.WarningName)
}
::std::string* hgEarlyWarnMes::mutable_warningname() {
  
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.WarningName)
  return warningname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgEarlyWarnMes::release_warningname() {
  // @@protoc_insertion_point(field_release:hgEarlyWarnMes.WarningName)
  
  return warningname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_allocated_warningname(::std::string* warningname) {
  if (warningname != NULL) {
    
  } else {
    
  }
  warningname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningname);
  // @@protoc_insertion_point(field_set_allocated:hgEarlyWarnMes.WarningName)
}

// optional string MMSI = 5;
void hgEarlyWarnMes::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgEarlyWarnMes::mmsi() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.MMSI)
}
void hgEarlyWarnMes::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgEarlyWarnMes.MMSI)
}
void hgEarlyWarnMes::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgEarlyWarnMes.MMSI)
}
::std::string* hgEarlyWarnMes::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgEarlyWarnMes::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgEarlyWarnMes.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgEarlyWarnMes.MMSI)
}

// optional string TargetMMSI = 6;
void hgEarlyWarnMes::clear_targetmmsi() {
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgEarlyWarnMes::targetmmsi() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.TargetMMSI)
  return targetmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_targetmmsi(const ::std::string& value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.TargetMMSI)
}
void hgEarlyWarnMes::set_targetmmsi(const char* value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgEarlyWarnMes.TargetMMSI)
}
void hgEarlyWarnMes::set_targetmmsi(const char* value, size_t size) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgEarlyWarnMes.TargetMMSI)
}
::std::string* hgEarlyWarnMes::mutable_targetmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.TargetMMSI)
  return targetmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgEarlyWarnMes::release_targetmmsi() {
  // @@protoc_insertion_point(field_release:hgEarlyWarnMes.TargetMMSI)
  
  return targetmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgEarlyWarnMes::set_allocated_targetmmsi(::std::string* targetmmsi) {
  if (targetmmsi != NULL) {
    
  } else {
    
  }
  targetmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgEarlyWarnMes.TargetMMSI)
}

// optional int64 WarningTime = 7;
void hgEarlyWarnMes::clear_warningtime() {
  warningtime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgEarlyWarnMes::warningtime() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningTime)
  return warningtime_;
}
void hgEarlyWarnMes::set_warningtime(::google::protobuf::int64 value) {
  
  warningtime_ = value;
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningTime)
}

// optional .hgWarningLevel Level = 8;
void hgEarlyWarnMes::clear_level() {
  level_ = 0;
}
::hgWarningLevel hgEarlyWarnMes::level() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.Level)
  return static_cast< ::hgWarningLevel >(level_);
}
void hgEarlyWarnMes::set_level(::hgWarningLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.Level)
}

// repeated .hgWarnPoint Point = 9;
int hgEarlyWarnMes::point_size() const {
  return point_.size();
}
void hgEarlyWarnMes::clear_point() {
  point_.Clear();
}
const ::hgWarnPoint& hgEarlyWarnMes::point(int index) const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.Point)
  return point_.Get(index);
}
::hgWarnPoint* hgEarlyWarnMes::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:hgEarlyWarnMes.Point)
  return point_.Mutable(index);
}
::hgWarnPoint* hgEarlyWarnMes::add_point() {
  // @@protoc_insertion_point(field_add:hgEarlyWarnMes.Point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::hgWarnPoint >*
hgEarlyWarnMes::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:hgEarlyWarnMes.Point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::hgWarnPoint >&
hgEarlyWarnMes::point() const {
  // @@protoc_insertion_point(field_list:hgEarlyWarnMes.Point)
  return point_;
}

// optional bool StartPaint = 10;
void hgEarlyWarnMes::clear_startpaint() {
  startpaint_ = false;
}
bool hgEarlyWarnMes::startpaint() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.StartPaint)
  return startpaint_;
}
void hgEarlyWarnMes::set_startpaint(bool value) {
  
  startpaint_ = value;
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.StartPaint)
}

// optional .hgWarningType WarningType = 11;
void hgEarlyWarnMes::clear_warningtype() {
  warningtype_ = 0;
}
::hgWarningType hgEarlyWarnMes::warningtype() const {
  // @@protoc_insertion_point(field_get:hgEarlyWarnMes.WarningType)
  return static_cast< ::hgWarningType >(warningtype_);
}
void hgEarlyWarnMes::set_warningtype(::hgWarningType value) {
  
  warningtype_ = value;
  // @@protoc_insertion_point(field_set:hgEarlyWarnMes.WarningType)
}

inline const hgEarlyWarnMes* hgEarlyWarnMes::internal_default_instance() {
  return &hgEarlyWarnMes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
