// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlgorText.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgAlgorText.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgAlgorText_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAlgorText_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgAlgorText_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgAlgorText_2eproto() {
  protobuf_AddDesc_hgAlgorText_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgAlgorText.proto");
  GOOGLE_CHECK(file != NULL);
  hgAlgorText_descriptor_ = file->message_type(0);
  static const int hgAlgorText_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, rv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, rc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tcpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, dcpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, sda_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, sdam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tarlat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tarlon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tarcoure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tarspd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, tarmmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, bown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, ownmmsi_),
  };
  hgAlgorText_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAlgorText_descriptor_,
      hgAlgorText::internal_default_instance(),
      hgAlgorText_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAlgorText),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorText, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgAlgorText_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAlgorText_descriptor_, hgAlgorText::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgAlgorText_2eproto() {
  hgAlgorText_default_instance_.Shutdown();
  delete hgAlgorText_reflection_;
}

void protobuf_InitDefaults_hgAlgorText_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgAlgorText_default_instance_.DefaultConstruct();
  hgAlgorText_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgAlgorText_2eproto_once_);
void protobuf_InitDefaults_hgAlgorText_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgAlgorText_2eproto_once_,
                 &protobuf_InitDefaults_hgAlgorText_2eproto_impl);
}
void protobuf_AddDesc_hgAlgorText_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgAlgorText_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021hgAlgorText.proto\"\333\001\n\013hgAlgorText\022\n\n\002R"
    "V\030\001 \001(\001\022\n\n\002Rc\030\002 \001(\001\022\013\n\003Dis\030\003 \001(\001\022\014\n\004TCPA"
    "\030\004 \001(\001\022\014\n\004DCPA\030\005 \001(\001\022\013\n\003SDA\030\006 \001(\001\022\014\n\004SDA"
    "m\030\007 \001(\001\022\016\n\006TarLat\030\010 \001(\001\022\016\n\006TarLon\030\t \001(\001\022"
    "\020\n\010TarCoure\030\n \001(\001\022\016\n\006TarSpd\030\013 \001(\001\022\017\n\007Tar"
    "MMSI\030\014 \001(\t\022\014\n\004BOwn\030\r \001(\005\022\017\n\007OwnMMSI\030\016 \001("
    "\tb\006proto3", 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgAlgorText.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgAlgorText_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgAlgorText_2eproto_once_);
void protobuf_AddDesc_hgAlgorText_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgAlgorText_2eproto_once_,
                 &protobuf_AddDesc_hgAlgorText_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgAlgorText_2eproto {
  StaticDescriptorInitializer_hgAlgorText_2eproto() {
    protobuf_AddDesc_hgAlgorText_2eproto();
  }
} static_descriptor_initializer_hgAlgorText_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAlgorText::kRVFieldNumber;
const int hgAlgorText::kRcFieldNumber;
const int hgAlgorText::kDisFieldNumber;
const int hgAlgorText::kTCPAFieldNumber;
const int hgAlgorText::kDCPAFieldNumber;
const int hgAlgorText::kSDAFieldNumber;
const int hgAlgorText::kSDAmFieldNumber;
const int hgAlgorText::kTarLatFieldNumber;
const int hgAlgorText::kTarLonFieldNumber;
const int hgAlgorText::kTarCoureFieldNumber;
const int hgAlgorText::kTarSpdFieldNumber;
const int hgAlgorText::kTarMMSIFieldNumber;
const int hgAlgorText::kBOwnFieldNumber;
const int hgAlgorText::kOwnMMSIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAlgorText::hgAlgorText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAlgorText_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAlgorText)
}

void hgAlgorText::InitAsDefaultInstance() {
}

hgAlgorText::hgAlgorText(const hgAlgorText& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAlgorText)
}

void hgAlgorText::SharedCtor() {
  tarmmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ownmmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rv_, 0, reinterpret_cast<char*>(&bown_) -
    reinterpret_cast<char*>(&rv_) + sizeof(bown_));
  _cached_size_ = 0;
}

hgAlgorText::~hgAlgorText() {
  // @@protoc_insertion_point(destructor:hgAlgorText)
  SharedDtor();
}

void hgAlgorText::SharedDtor() {
  tarmmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ownmmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgAlgorText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAlgorText::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlgorText_descriptor_;
}

const hgAlgorText& hgAlgorText::default_instance() {
  protobuf_InitDefaults_hgAlgorText_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAlgorText> hgAlgorText_default_instance_;

hgAlgorText* hgAlgorText::New(::google::protobuf::Arena* arena) const {
  hgAlgorText* n = new hgAlgorText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAlgorText::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAlgorText)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgAlgorText, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgAlgorText*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rv_, tarlat_);
  ZR_(tarlon_, bown_);
  tarmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ownmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool hgAlgorText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAlgorText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double RV = 1;
      case 1: {
        if (tag == 9) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rv_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_Rc;
        break;
      }

      // optional double Rc = 2;
      case 2: {
        if (tag == 17) {
         parse_Rc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_Dis;
        break;
      }

      // optional double Dis = 3;
      case 3: {
        if (tag == 25) {
         parse_Dis:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dis_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_TCPA;
        break;
      }

      // optional double TCPA = 4;
      case 4: {
        if (tag == 33) {
         parse_TCPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tcpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_DCPA;
        break;
      }

      // optional double DCPA = 5;
      case 5: {
        if (tag == 41) {
         parse_DCPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dcpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_SDA;
        break;
      }

      // optional double SDA = 6;
      case 6: {
        if (tag == 49) {
         parse_SDA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sda_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_SDAm;
        break;
      }

      // optional double SDAm = 7;
      case 7: {
        if (tag == 57) {
         parse_SDAm:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sdam_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_TarLat;
        break;
      }

      // optional double TarLat = 8;
      case 8: {
        if (tag == 65) {
         parse_TarLat:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tarlat_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_TarLon;
        break;
      }

      // optional double TarLon = 9;
      case 9: {
        if (tag == 73) {
         parse_TarLon:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tarlon_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_TarCoure;
        break;
      }

      // optional double TarCoure = 10;
      case 10: {
        if (tag == 81) {
         parse_TarCoure:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tarcoure_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_TarSpd;
        break;
      }

      // optional double TarSpd = 11;
      case 11: {
        if (tag == 89) {
         parse_TarSpd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tarspd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_TarMMSI;
        break;
      }

      // optional string TarMMSI = 12;
      case 12: {
        if (tag == 98) {
         parse_TarMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tarmmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tarmmsi().data(), this->tarmmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorText.TarMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_BOwn;
        break;
      }

      // optional int32 BOwn = 13;
      case 13: {
        if (tag == 104) {
         parse_BOwn:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bown_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_OwnMMSI;
        break;
      }

      // optional string OwnMMSI = 14;
      case 14: {
        if (tag == 114) {
         parse_OwnMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ownmmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ownmmsi().data(), this->ownmmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorText.OwnMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAlgorText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAlgorText)
  return false;
#undef DO_
}

void hgAlgorText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAlgorText)
  // optional double RV = 1;
  if (this->rv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->rv(), output);
  }

  // optional double Rc = 2;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->rc(), output);
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dis(), output);
  }

  // optional double TCPA = 4;
  if (this->tcpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->tcpa(), output);
  }

  // optional double DCPA = 5;
  if (this->dcpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dcpa(), output);
  }

  // optional double SDA = 6;
  if (this->sda() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->sda(), output);
  }

  // optional double SDAm = 7;
  if (this->sdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->sdam(), output);
  }

  // optional double TarLat = 8;
  if (this->tarlat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->tarlat(), output);
  }

  // optional double TarLon = 9;
  if (this->tarlon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->tarlon(), output);
  }

  // optional double TarCoure = 10;
  if (this->tarcoure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->tarcoure(), output);
  }

  // optional double TarSpd = 11;
  if (this->tarspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->tarspd(), output);
  }

  // optional string TarMMSI = 12;
  if (this->tarmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tarmmsi().data(), this->tarmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorText.TarMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->tarmmsi(), output);
  }

  // optional int32 BOwn = 13;
  if (this->bown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->bown(), output);
  }

  // optional string OwnMMSI = 14;
  if (this->ownmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ownmmsi().data(), this->ownmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorText.OwnMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->ownmmsi(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAlgorText)
}

::google::protobuf::uint8* hgAlgorText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAlgorText)
  // optional double RV = 1;
  if (this->rv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->rv(), target);
  }

  // optional double Rc = 2;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->rc(), target);
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dis(), target);
  }

  // optional double TCPA = 4;
  if (this->tcpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->tcpa(), target);
  }

  // optional double DCPA = 5;
  if (this->dcpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dcpa(), target);
  }

  // optional double SDA = 6;
  if (this->sda() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->sda(), target);
  }

  // optional double SDAm = 7;
  if (this->sdam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->sdam(), target);
  }

  // optional double TarLat = 8;
  if (this->tarlat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->tarlat(), target);
  }

  // optional double TarLon = 9;
  if (this->tarlon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->tarlon(), target);
  }

  // optional double TarCoure = 10;
  if (this->tarcoure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->tarcoure(), target);
  }

  // optional double TarSpd = 11;
  if (this->tarspd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->tarspd(), target);
  }

  // optional string TarMMSI = 12;
  if (this->tarmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tarmmsi().data(), this->tarmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorText.TarMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->tarmmsi(), target);
  }

  // optional int32 BOwn = 13;
  if (this->bown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->bown(), target);
  }

  // optional string OwnMMSI = 14;
  if (this->ownmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ownmmsi().data(), this->ownmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorText.OwnMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->ownmmsi(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAlgorText)
  return target;
}

size_t hgAlgorText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAlgorText)
  size_t total_size = 0;

  // optional double RV = 1;
  if (this->rv() != 0) {
    total_size += 1 + 8;
  }

  // optional double Rc = 2;
  if (this->rc() != 0) {
    total_size += 1 + 8;
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    total_size += 1 + 8;
  }

  // optional double TCPA = 4;
  if (this->tcpa() != 0) {
    total_size += 1 + 8;
  }

  // optional double DCPA = 5;
  if (this->dcpa() != 0) {
    total_size += 1 + 8;
  }

  // optional double SDA = 6;
  if (this->sda() != 0) {
    total_size += 1 + 8;
  }

  // optional double SDAm = 7;
  if (this->sdam() != 0) {
    total_size += 1 + 8;
  }

  // optional double TarLat = 8;
  if (this->tarlat() != 0) {
    total_size += 1 + 8;
  }

  // optional double TarLon = 9;
  if (this->tarlon() != 0) {
    total_size += 1 + 8;
  }

  // optional double TarCoure = 10;
  if (this->tarcoure() != 0) {
    total_size += 1 + 8;
  }

  // optional double TarSpd = 11;
  if (this->tarspd() != 0) {
    total_size += 1 + 8;
  }

  // optional string TarMMSI = 12;
  if (this->tarmmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tarmmsi());
  }

  // optional int32 BOwn = 13;
  if (this->bown() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bown());
  }

  // optional string OwnMMSI = 14;
  if (this->ownmmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ownmmsi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAlgorText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAlgorText)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAlgorText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAlgorText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAlgorText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAlgorText)
    UnsafeMergeFrom(*source);
  }
}

void hgAlgorText::MergeFrom(const hgAlgorText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAlgorText)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAlgorText::UnsafeMergeFrom(const hgAlgorText& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.rv() != 0) {
    set_rv(from.rv());
  }
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
  if (from.dis() != 0) {
    set_dis(from.dis());
  }
  if (from.tcpa() != 0) {
    set_tcpa(from.tcpa());
  }
  if (from.dcpa() != 0) {
    set_dcpa(from.dcpa());
  }
  if (from.sda() != 0) {
    set_sda(from.sda());
  }
  if (from.sdam() != 0) {
    set_sdam(from.sdam());
  }
  if (from.tarlat() != 0) {
    set_tarlat(from.tarlat());
  }
  if (from.tarlon() != 0) {
    set_tarlon(from.tarlon());
  }
  if (from.tarcoure() != 0) {
    set_tarcoure(from.tarcoure());
  }
  if (from.tarspd() != 0) {
    set_tarspd(from.tarspd());
  }
  if (from.tarmmsi().size() > 0) {

    tarmmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tarmmsi_);
  }
  if (from.bown() != 0) {
    set_bown(from.bown());
  }
  if (from.ownmmsi().size() > 0) {

    ownmmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ownmmsi_);
  }
}

void hgAlgorText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAlgorText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAlgorText::CopyFrom(const hgAlgorText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAlgorText)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAlgorText::IsInitialized() const {

  return true;
}

void hgAlgorText::Swap(hgAlgorText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAlgorText::InternalSwap(hgAlgorText* other) {
  std::swap(rv_, other->rv_);
  std::swap(rc_, other->rc_);
  std::swap(dis_, other->dis_);
  std::swap(tcpa_, other->tcpa_);
  std::swap(dcpa_, other->dcpa_);
  std::swap(sda_, other->sda_);
  std::swap(sdam_, other->sdam_);
  std::swap(tarlat_, other->tarlat_);
  std::swap(tarlon_, other->tarlon_);
  std::swap(tarcoure_, other->tarcoure_);
  std::swap(tarspd_, other->tarspd_);
  tarmmsi_.Swap(&other->tarmmsi_);
  std::swap(bown_, other->bown_);
  ownmmsi_.Swap(&other->ownmmsi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAlgorText::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAlgorText_descriptor_;
  metadata.reflection = hgAlgorText_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlgorText

// optional double RV = 1;
void hgAlgorText::clear_rv() {
  rv_ = 0;
}
double hgAlgorText::rv() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.RV)
  return rv_;
}
void hgAlgorText::set_rv(double value) {
  
  rv_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.RV)
}

// optional double Rc = 2;
void hgAlgorText::clear_rc() {
  rc_ = 0;
}
double hgAlgorText::rc() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.Rc)
  return rc_;
}
void hgAlgorText::set_rc(double value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.Rc)
}

// optional double Dis = 3;
void hgAlgorText::clear_dis() {
  dis_ = 0;
}
double hgAlgorText::dis() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.Dis)
  return dis_;
}
void hgAlgorText::set_dis(double value) {
  
  dis_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.Dis)
}

// optional double TCPA = 4;
void hgAlgorText::clear_tcpa() {
  tcpa_ = 0;
}
double hgAlgorText::tcpa() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TCPA)
  return tcpa_;
}
void hgAlgorText::set_tcpa(double value) {
  
  tcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TCPA)
}

// optional double DCPA = 5;
void hgAlgorText::clear_dcpa() {
  dcpa_ = 0;
}
double hgAlgorText::dcpa() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.DCPA)
  return dcpa_;
}
void hgAlgorText::set_dcpa(double value) {
  
  dcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.DCPA)
}

// optional double SDA = 6;
void hgAlgorText::clear_sda() {
  sda_ = 0;
}
double hgAlgorText::sda() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.SDA)
  return sda_;
}
void hgAlgorText::set_sda(double value) {
  
  sda_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.SDA)
}

// optional double SDAm = 7;
void hgAlgorText::clear_sdam() {
  sdam_ = 0;
}
double hgAlgorText::sdam() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.SDAm)
  return sdam_;
}
void hgAlgorText::set_sdam(double value) {
  
  sdam_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.SDAm)
}

// optional double TarLat = 8;
void hgAlgorText::clear_tarlat() {
  tarlat_ = 0;
}
double hgAlgorText::tarlat() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarLat)
  return tarlat_;
}
void hgAlgorText::set_tarlat(double value) {
  
  tarlat_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarLat)
}

// optional double TarLon = 9;
void hgAlgorText::clear_tarlon() {
  tarlon_ = 0;
}
double hgAlgorText::tarlon() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarLon)
  return tarlon_;
}
void hgAlgorText::set_tarlon(double value) {
  
  tarlon_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarLon)
}

// optional double TarCoure = 10;
void hgAlgorText::clear_tarcoure() {
  tarcoure_ = 0;
}
double hgAlgorText::tarcoure() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarCoure)
  return tarcoure_;
}
void hgAlgorText::set_tarcoure(double value) {
  
  tarcoure_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarCoure)
}

// optional double TarSpd = 11;
void hgAlgorText::clear_tarspd() {
  tarspd_ = 0;
}
double hgAlgorText::tarspd() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarSpd)
  return tarspd_;
}
void hgAlgorText::set_tarspd(double value) {
  
  tarspd_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarSpd)
}

// optional string TarMMSI = 12;
void hgAlgorText::clear_tarmmsi() {
  tarmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorText::tarmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarMMSI)
  return tarmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorText::set_tarmmsi(const ::std::string& value) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorText.TarMMSI)
}
void hgAlgorText::set_tarmmsi(const char* value) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorText.TarMMSI)
}
void hgAlgorText::set_tarmmsi(const char* value, size_t size) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorText.TarMMSI)
}
::std::string* hgAlgorText::mutable_tarmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorText.TarMMSI)
  return tarmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorText::release_tarmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorText.TarMMSI)
  
  return tarmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorText::set_allocated_tarmmsi(::std::string* tarmmsi) {
  if (tarmmsi != NULL) {
    
  } else {
    
  }
  tarmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tarmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorText.TarMMSI)
}

// optional int32 BOwn = 13;
void hgAlgorText::clear_bown() {
  bown_ = 0;
}
::google::protobuf::int32 hgAlgorText::bown() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.BOwn)
  return bown_;
}
void hgAlgorText::set_bown(::google::protobuf::int32 value) {
  
  bown_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.BOwn)
}

// optional string OwnMMSI = 14;
void hgAlgorText::clear_ownmmsi() {
  ownmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorText::ownmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.OwnMMSI)
  return ownmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorText::set_ownmmsi(const ::std::string& value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorText.OwnMMSI)
}
void hgAlgorText::set_ownmmsi(const char* value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorText.OwnMMSI)
}
void hgAlgorText::set_ownmmsi(const char* value, size_t size) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorText.OwnMMSI)
}
::std::string* hgAlgorText::mutable_ownmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorText.OwnMMSI)
  return ownmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorText::release_ownmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorText.OwnMMSI)
  
  return ownmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorText::set_allocated_ownmmsi(::std::string* ownmmsi) {
  if (ownmmsi != NULL) {
    
  } else {
    
  }
  ownmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorText.OwnMMSI)
}

inline const hgAlgorText* hgAlgorText::internal_default_instance() {
  return &hgAlgorText_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
