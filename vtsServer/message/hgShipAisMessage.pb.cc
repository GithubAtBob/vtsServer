// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgShipAisMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgShipAisMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgShipAisMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgShipAisMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgShipAisMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgShipAisMessage_2eproto() {
  protobuf_AddDesc_hgShipAisMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgShipAisMessage.proto");
  GOOGLE_CHECK(file != NULL);
  hgShipAisMessage_descriptor_ = file->message_type(0);
  static const int hgShipAisMessage_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, sog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, lon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, cog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, hdg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, dima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, dimb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, dimc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, dimd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, reportticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, recentperiod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, ownship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, reportinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, shipname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, hdgtype_),
  };
  hgShipAisMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgShipAisMessage_descriptor_,
      hgShipAisMessage::internal_default_instance(),
      hgShipAisMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgShipAisMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgShipAisMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgShipAisMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgShipAisMessage_descriptor_, hgShipAisMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgShipAisMessage_2eproto() {
  hgShipAisMessage_default_instance_.Shutdown();
  delete hgShipAisMessage_reflection_;
}

void protobuf_InitDefaults_hgShipAisMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgShipAisMessage_default_instance_.DefaultConstruct();
  hgShipAisMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgShipAisMessage_2eproto_once_);
void protobuf_InitDefaults_hgShipAisMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgShipAisMessage_2eproto_once_,
                 &protobuf_InitDefaults_hgShipAisMessage_2eproto_impl);
}
void protobuf_AddDesc_hgShipAisMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgShipAisMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026hgShipAisMessage.proto\"\352\002\n\020hgShipAisMe"
    "ssage\022\n\n\002ID\030\001 \001(\t\022\014\n\004MMSI\030\002 \001(\t\022\013\n\003SOG\030\003"
    " \001(\001\022\013\n\003Lon\030\004 \001(\001\022\013\n\003Lat\030\005 \001(\001\022\013\n\003COG\030\006 "
    "\001(\001\022\013\n\003HDG\030\007 \001(\001\022\016\n\006Length\030\010 \001(\001\022\r\n\005Widt"
    "h\030\t \001(\001\022\014\n\004DimA\030\n \001(\005\022\014\n\004DimB\030\013 \001(\005\022\014\n\004D"
    "imC\030\014 \001(\005\022\014\n\004DimD\030\r \001(\005\022\023\n\013ReportTicks\030\016"
    " \001(\003\022\024\n\014RecentPeriod\030\017 \001(\003\022\017\n\007OwnShip\030\020 "
    "\001(\010\022\016\n\006Source\030\021 \001(\005\022\016\n\006Result\030\022 \001(\005\022\r\n\005C"
    "lass\030\023 \001(\005\022\026\n\016ReportInterval\030\024 \001(\005\022\020\n\010Sh"
    "ipName\030\025 \001(\t\022\017\n\007hdgtype\030\026 \001(\005b\006proto3", 397);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgShipAisMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgShipAisMessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgShipAisMessage_2eproto_once_);
void protobuf_AddDesc_hgShipAisMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgShipAisMessage_2eproto_once_,
                 &protobuf_AddDesc_hgShipAisMessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgShipAisMessage_2eproto {
  StaticDescriptorInitializer_hgShipAisMessage_2eproto() {
    protobuf_AddDesc_hgShipAisMessage_2eproto();
  }
} static_descriptor_initializer_hgShipAisMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgShipAisMessage::kIDFieldNumber;
const int hgShipAisMessage::kMMSIFieldNumber;
const int hgShipAisMessage::kSOGFieldNumber;
const int hgShipAisMessage::kLonFieldNumber;
const int hgShipAisMessage::kLatFieldNumber;
const int hgShipAisMessage::kCOGFieldNumber;
const int hgShipAisMessage::kHDGFieldNumber;
const int hgShipAisMessage::kLengthFieldNumber;
const int hgShipAisMessage::kWidthFieldNumber;
const int hgShipAisMessage::kDimAFieldNumber;
const int hgShipAisMessage::kDimBFieldNumber;
const int hgShipAisMessage::kDimCFieldNumber;
const int hgShipAisMessage::kDimDFieldNumber;
const int hgShipAisMessage::kReportTicksFieldNumber;
const int hgShipAisMessage::kRecentPeriodFieldNumber;
const int hgShipAisMessage::kOwnShipFieldNumber;
const int hgShipAisMessage::kSourceFieldNumber;
const int hgShipAisMessage::kResultFieldNumber;
const int hgShipAisMessage::kClassFieldNumber;
const int hgShipAisMessage::kReportIntervalFieldNumber;
const int hgShipAisMessage::kShipNameFieldNumber;
const int hgShipAisMessage::kHdgtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgShipAisMessage::hgShipAisMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgShipAisMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgShipAisMessage)
}

void hgShipAisMessage::InitAsDefaultInstance() {
}

hgShipAisMessage::hgShipAisMessage(const hgShipAisMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgShipAisMessage)
}

void hgShipAisMessage::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sog_, 0, reinterpret_cast<char*>(&hdgtype_) -
    reinterpret_cast<char*>(&sog_) + sizeof(hdgtype_));
  _cached_size_ = 0;
}

hgShipAisMessage::~hgShipAisMessage() {
  // @@protoc_insertion_point(destructor:hgShipAisMessage)
  SharedDtor();
}

void hgShipAisMessage::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgShipAisMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgShipAisMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgShipAisMessage_descriptor_;
}

const hgShipAisMessage& hgShipAisMessage::default_instance() {
  protobuf_InitDefaults_hgShipAisMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgShipAisMessage> hgShipAisMessage_default_instance_;

hgShipAisMessage* hgShipAisMessage::New(::google::protobuf::Arena* arena) const {
  hgShipAisMessage* n = new hgShipAisMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgShipAisMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hgShipAisMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgShipAisMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgShipAisMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sog_, length_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(width_, ownship_);
  ZR_(source_, hdgtype_);
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool hgShipAisMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgShipAisMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgShipAisMessage.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 2;
      case 2: {
        if (tag == 18) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgShipAisMessage.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_SOG;
        break;
      }

      // optional double SOG = 3;
      case 3: {
        if (tag == 25) {
         parse_SOG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_Lon;
        break;
      }

      // optional double Lon = 4;
      case 4: {
        if (tag == 33) {
         parse_Lon:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_Lat;
        break;
      }

      // optional double Lat = 5;
      case 5: {
        if (tag == 41) {
         parse_Lat:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_COG;
        break;
      }

      // optional double COG = 6;
      case 6: {
        if (tag == 49) {
         parse_COG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_HDG;
        break;
      }

      // optional double HDG = 7;
      case 7: {
        if (tag == 57) {
         parse_HDG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_Length;
        break;
      }

      // optional double Length = 8;
      case 8: {
        if (tag == 65) {
         parse_Length:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_Width;
        break;
      }

      // optional double Width = 9;
      case 9: {
        if (tag == 73) {
         parse_Width:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_DimA;
        break;
      }

      // optional int32 DimA = 10;
      case 10: {
        if (tag == 80) {
         parse_DimA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dima_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_DimB;
        break;
      }

      // optional int32 DimB = 11;
      case 11: {
        if (tag == 88) {
         parse_DimB:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_DimC;
        break;
      }

      // optional int32 DimC = 12;
      case 12: {
        if (tag == 96) {
         parse_DimC:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_DimD;
        break;
      }

      // optional int32 DimD = 13;
      case 13: {
        if (tag == 104) {
         parse_DimD:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dimd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_ReportTicks;
        break;
      }

      // optional int64 ReportTicks = 14;
      case 14: {
        if (tag == 112) {
         parse_ReportTicks:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reportticks_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_RecentPeriod;
        break;
      }

      // optional int64 RecentPeriod = 15;
      case 15: {
        if (tag == 120) {
         parse_RecentPeriod:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recentperiod_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_OwnShip;
        break;
      }

      // optional bool OwnShip = 16;
      case 16: {
        if (tag == 128) {
         parse_OwnShip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ownship_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_Source;
        break;
      }

      // optional int32 Source = 17;
      case 17: {
        if (tag == 136) {
         parse_Source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_Result;
        break;
      }

      // optional int32 Result = 18;
      case 18: {
        if (tag == 144) {
         parse_Result:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_Class;
        break;
      }

      // optional int32 Class = 19;
      case 19: {
        if (tag == 152) {
         parse_Class:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_ReportInterval;
        break;
      }

      // optional int32 ReportInterval = 20;
      case 20: {
        if (tag == 160) {
         parse_ReportInterval:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reportinterval_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_ShipName;
        break;
      }

      // optional string ShipName = 21;
      case 21: {
        if (tag == 170) {
         parse_ShipName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shipname().data(), this->shipname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgShipAisMessage.ShipName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_hdgtype;
        break;
      }

      // optional int32 hdgtype = 22;
      case 22: {
        if (tag == 176) {
         parse_hdgtype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hdgtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgShipAisMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgShipAisMessage)
  return false;
#undef DO_
}

void hgShipAisMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgShipAisMessage)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string MMSI = 2;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mmsi(), output);
  }

  // optional double SOG = 3;
  if (this->sog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->sog(), output);
  }

  // optional double Lon = 4;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lon(), output);
  }

  // optional double Lat = 5;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lat(), output);
  }

  // optional double COG = 6;
  if (this->cog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cog(), output);
  }

  // optional double HDG = 7;
  if (this->hdg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->hdg(), output);
  }

  // optional double Length = 8;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->length(), output);
  }

  // optional double Width = 9;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->width(), output);
  }

  // optional int32 DimA = 10;
  if (this->dima() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->dima(), output);
  }

  // optional int32 DimB = 11;
  if (this->dimb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->dimb(), output);
  }

  // optional int32 DimC = 12;
  if (this->dimc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->dimc(), output);
  }

  // optional int32 DimD = 13;
  if (this->dimd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dimd(), output);
  }

  // optional int64 ReportTicks = 14;
  if (this->reportticks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->reportticks(), output);
  }

  // optional int64 RecentPeriod = 15;
  if (this->recentperiod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->recentperiod(), output);
  }

  // optional bool OwnShip = 16;
  if (this->ownship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->ownship(), output);
  }

  // optional int32 Source = 17;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->source(), output);
  }

  // optional int32 Result = 18;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->result(), output);
  }

  // optional int32 Class = 19;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->class_(), output);
  }

  // optional int32 ReportInterval = 20;
  if (this->reportinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->reportinterval(), output);
  }

  // optional string ShipName = 21;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.ShipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->shipname(), output);
  }

  // optional int32 hdgtype = 22;
  if (this->hdgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->hdgtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgShipAisMessage)
}

::google::protobuf::uint8* hgShipAisMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgShipAisMessage)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string MMSI = 2;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mmsi(), target);
  }

  // optional double SOG = 3;
  if (this->sog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->sog(), target);
  }

  // optional double Lon = 4;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lon(), target);
  }

  // optional double Lat = 5;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lat(), target);
  }

  // optional double COG = 6;
  if (this->cog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->cog(), target);
  }

  // optional double HDG = 7;
  if (this->hdg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->hdg(), target);
  }

  // optional double Length = 8;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->length(), target);
  }

  // optional double Width = 9;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->width(), target);
  }

  // optional int32 DimA = 10;
  if (this->dima() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->dima(), target);
  }

  // optional int32 DimB = 11;
  if (this->dimb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->dimb(), target);
  }

  // optional int32 DimC = 12;
  if (this->dimc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->dimc(), target);
  }

  // optional int32 DimD = 13;
  if (this->dimd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dimd(), target);
  }

  // optional int64 ReportTicks = 14;
  if (this->reportticks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->reportticks(), target);
  }

  // optional int64 RecentPeriod = 15;
  if (this->recentperiod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->recentperiod(), target);
  }

  // optional bool OwnShip = 16;
  if (this->ownship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->ownship(), target);
  }

  // optional int32 Source = 17;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->source(), target);
  }

  // optional int32 Result = 18;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->result(), target);
  }

  // optional int32 Class = 19;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->class_(), target);
  }

  // optional int32 ReportInterval = 20;
  if (this->reportinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->reportinterval(), target);
  }

  // optional string ShipName = 21;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgShipAisMessage.ShipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->shipname(), target);
  }

  // optional int32 hdgtype = 22;
  if (this->hdgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->hdgtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgShipAisMessage)
  return target;
}

size_t hgShipAisMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgShipAisMessage)
  size_t total_size = 0;

  // optional string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string MMSI = 2;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional double SOG = 3;
  if (this->sog() != 0) {
    total_size += 1 + 8;
  }

  // optional double Lon = 4;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  // optional double Lat = 5;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // optional double COG = 6;
  if (this->cog() != 0) {
    total_size += 1 + 8;
  }

  // optional double HDG = 7;
  if (this->hdg() != 0) {
    total_size += 1 + 8;
  }

  // optional double Length = 8;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // optional double Width = 9;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 DimA = 10;
  if (this->dima() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dima());
  }

  // optional int32 DimB = 11;
  if (this->dimb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimb());
  }

  // optional int32 DimC = 12;
  if (this->dimc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimc());
  }

  // optional int32 DimD = 13;
  if (this->dimd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dimd());
  }

  // optional int64 ReportTicks = 14;
  if (this->reportticks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reportticks());
  }

  // optional int64 RecentPeriod = 15;
  if (this->recentperiod() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->recentperiod());
  }

  // optional bool OwnShip = 16;
  if (this->ownship() != 0) {
    total_size += 2 + 1;
  }

  // optional int32 Source = 17;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // optional int32 Result = 18;
  if (this->result() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional int32 Class = 19;
  if (this->class_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_());
  }

  // optional int32 ReportInterval = 20;
  if (this->reportinterval() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reportinterval());
  }

  // optional string ShipName = 21;
  if (this->shipname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shipname());
  }

  // optional int32 hdgtype = 22;
  if (this->hdgtype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hdgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgShipAisMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgShipAisMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgShipAisMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgShipAisMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgShipAisMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgShipAisMessage)
    UnsafeMergeFrom(*source);
  }
}

void hgShipAisMessage::MergeFrom(const hgShipAisMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgShipAisMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgShipAisMessage::UnsafeMergeFrom(const hgShipAisMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.sog() != 0) {
    set_sog(from.sog());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.cog() != 0) {
    set_cog(from.cog());
  }
  if (from.hdg() != 0) {
    set_hdg(from.hdg());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.dima() != 0) {
    set_dima(from.dima());
  }
  if (from.dimb() != 0) {
    set_dimb(from.dimb());
  }
  if (from.dimc() != 0) {
    set_dimc(from.dimc());
  }
  if (from.dimd() != 0) {
    set_dimd(from.dimd());
  }
  if (from.reportticks() != 0) {
    set_reportticks(from.reportticks());
  }
  if (from.recentperiod() != 0) {
    set_recentperiod(from.recentperiod());
  }
  if (from.ownship() != 0) {
    set_ownship(from.ownship());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.reportinterval() != 0) {
    set_reportinterval(from.reportinterval());
  }
  if (from.shipname().size() > 0) {

    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  if (from.hdgtype() != 0) {
    set_hdgtype(from.hdgtype());
  }
}

void hgShipAisMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgShipAisMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgShipAisMessage::CopyFrom(const hgShipAisMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgShipAisMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgShipAisMessage::IsInitialized() const {

  return true;
}

void hgShipAisMessage::Swap(hgShipAisMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgShipAisMessage::InternalSwap(hgShipAisMessage* other) {
  id_.Swap(&other->id_);
  mmsi_.Swap(&other->mmsi_);
  std::swap(sog_, other->sog_);
  std::swap(lon_, other->lon_);
  std::swap(lat_, other->lat_);
  std::swap(cog_, other->cog_);
  std::swap(hdg_, other->hdg_);
  std::swap(length_, other->length_);
  std::swap(width_, other->width_);
  std::swap(dima_, other->dima_);
  std::swap(dimb_, other->dimb_);
  std::swap(dimc_, other->dimc_);
  std::swap(dimd_, other->dimd_);
  std::swap(reportticks_, other->reportticks_);
  std::swap(recentperiod_, other->recentperiod_);
  std::swap(ownship_, other->ownship_);
  std::swap(source_, other->source_);
  std::swap(result_, other->result_);
  std::swap(class__, other->class__);
  std::swap(reportinterval_, other->reportinterval_);
  shipname_.Swap(&other->shipname_);
  std::swap(hdgtype_, other->hdgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgShipAisMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgShipAisMessage_descriptor_;
  metadata.reflection = hgShipAisMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgShipAisMessage

// optional string ID = 1;
void hgShipAisMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgShipAisMessage::id() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgShipAisMessage.ID)
}
void hgShipAisMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgShipAisMessage.ID)
}
void hgShipAisMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgShipAisMessage.ID)
}
::std::string* hgShipAisMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgShipAisMessage.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgShipAisMessage::release_id() {
  // @@protoc_insertion_point(field_release:hgShipAisMessage.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgShipAisMessage.ID)
}

// optional string MMSI = 2;
void hgShipAisMessage::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgShipAisMessage::mmsi() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgShipAisMessage.MMSI)
}
void hgShipAisMessage::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgShipAisMessage.MMSI)
}
void hgShipAisMessage::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgShipAisMessage.MMSI)
}
::std::string* hgShipAisMessage::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgShipAisMessage.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgShipAisMessage::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgShipAisMessage.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgShipAisMessage.MMSI)
}

// optional double SOG = 3;
void hgShipAisMessage::clear_sog() {
  sog_ = 0;
}
double hgShipAisMessage::sog() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.SOG)
  return sog_;
}
void hgShipAisMessage::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.SOG)
}

// optional double Lon = 4;
void hgShipAisMessage::clear_lon() {
  lon_ = 0;
}
double hgShipAisMessage::lon() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Lon)
  return lon_;
}
void hgShipAisMessage::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Lon)
}

// optional double Lat = 5;
void hgShipAisMessage::clear_lat() {
  lat_ = 0;
}
double hgShipAisMessage::lat() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Lat)
  return lat_;
}
void hgShipAisMessage::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Lat)
}

// optional double COG = 6;
void hgShipAisMessage::clear_cog() {
  cog_ = 0;
}
double hgShipAisMessage::cog() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.COG)
  return cog_;
}
void hgShipAisMessage::set_cog(double value) {
  
  cog_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.COG)
}

// optional double HDG = 7;
void hgShipAisMessage::clear_hdg() {
  hdg_ = 0;
}
double hgShipAisMessage::hdg() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.HDG)
  return hdg_;
}
void hgShipAisMessage::set_hdg(double value) {
  
  hdg_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.HDG)
}

// optional double Length = 8;
void hgShipAisMessage::clear_length() {
  length_ = 0;
}
double hgShipAisMessage::length() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Length)
  return length_;
}
void hgShipAisMessage::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Length)
}

// optional double Width = 9;
void hgShipAisMessage::clear_width() {
  width_ = 0;
}
double hgShipAisMessage::width() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Width)
  return width_;
}
void hgShipAisMessage::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Width)
}

// optional int32 DimA = 10;
void hgShipAisMessage::clear_dima() {
  dima_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::dima() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.DimA)
  return dima_;
}
void hgShipAisMessage::set_dima(::google::protobuf::int32 value) {
  
  dima_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.DimA)
}

// optional int32 DimB = 11;
void hgShipAisMessage::clear_dimb() {
  dimb_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::dimb() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.DimB)
  return dimb_;
}
void hgShipAisMessage::set_dimb(::google::protobuf::int32 value) {
  
  dimb_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.DimB)
}

// optional int32 DimC = 12;
void hgShipAisMessage::clear_dimc() {
  dimc_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::dimc() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.DimC)
  return dimc_;
}
void hgShipAisMessage::set_dimc(::google::protobuf::int32 value) {
  
  dimc_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.DimC)
}

// optional int32 DimD = 13;
void hgShipAisMessage::clear_dimd() {
  dimd_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::dimd() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.DimD)
  return dimd_;
}
void hgShipAisMessage::set_dimd(::google::protobuf::int32 value) {
  
  dimd_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.DimD)
}

// optional int64 ReportTicks = 14;
void hgShipAisMessage::clear_reportticks() {
  reportticks_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgShipAisMessage::reportticks() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.ReportTicks)
  return reportticks_;
}
void hgShipAisMessage::set_reportticks(::google::protobuf::int64 value) {
  
  reportticks_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.ReportTicks)
}

// optional int64 RecentPeriod = 15;
void hgShipAisMessage::clear_recentperiod() {
  recentperiod_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgShipAisMessage::recentperiod() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.RecentPeriod)
  return recentperiod_;
}
void hgShipAisMessage::set_recentperiod(::google::protobuf::int64 value) {
  
  recentperiod_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.RecentPeriod)
}

// optional bool OwnShip = 16;
void hgShipAisMessage::clear_ownship() {
  ownship_ = false;
}
bool hgShipAisMessage::ownship() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.OwnShip)
  return ownship_;
}
void hgShipAisMessage::set_ownship(bool value) {
  
  ownship_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.OwnShip)
}

// optional int32 Source = 17;
void hgShipAisMessage::clear_source() {
  source_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::source() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Source)
  return source_;
}
void hgShipAisMessage::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Source)
}

// optional int32 Result = 18;
void hgShipAisMessage::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::result() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Result)
  return result_;
}
void hgShipAisMessage::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Result)
}

// optional int32 Class = 19;
void hgShipAisMessage::clear_class_() {
  class__ = 0;
}
::google::protobuf::int32 hgShipAisMessage::class_() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.Class)
  return class__;
}
void hgShipAisMessage::set_class_(::google::protobuf::int32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.Class)
}

// optional int32 ReportInterval = 20;
void hgShipAisMessage::clear_reportinterval() {
  reportinterval_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::reportinterval() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.ReportInterval)
  return reportinterval_;
}
void hgShipAisMessage::set_reportinterval(::google::protobuf::int32 value) {
  
  reportinterval_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.ReportInterval)
}

// optional string ShipName = 21;
void hgShipAisMessage::clear_shipname() {
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgShipAisMessage::shipname() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.ShipName)
  return shipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_shipname(const ::std::string& value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgShipAisMessage.ShipName)
}
void hgShipAisMessage::set_shipname(const char* value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgShipAisMessage.ShipName)
}
void hgShipAisMessage::set_shipname(const char* value, size_t size) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgShipAisMessage.ShipName)
}
::std::string* hgShipAisMessage::mutable_shipname() {
  
  // @@protoc_insertion_point(field_mutable:hgShipAisMessage.ShipName)
  return shipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgShipAisMessage::release_shipname() {
  // @@protoc_insertion_point(field_release:hgShipAisMessage.ShipName)
  
  return shipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgShipAisMessage::set_allocated_shipname(::std::string* shipname) {
  if (shipname != NULL) {
    
  } else {
    
  }
  shipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipname);
  // @@protoc_insertion_point(field_set_allocated:hgShipAisMessage.ShipName)
}

// optional int32 hdgtype = 22;
void hgShipAisMessage::clear_hdgtype() {
  hdgtype_ = 0;
}
::google::protobuf::int32 hgShipAisMessage::hdgtype() const {
  // @@protoc_insertion_point(field_get:hgShipAisMessage.hdgtype)
  return hdgtype_;
}
void hgShipAisMessage::set_hdgtype(::google::protobuf::int32 value) {
  
  hdgtype_ = value;
  // @@protoc_insertion_point(field_set:hgShipAisMessage.hdgtype)
}

inline const hgShipAisMessage* hgShipAisMessage::internal_default_instance() {
  return &hgShipAisMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
