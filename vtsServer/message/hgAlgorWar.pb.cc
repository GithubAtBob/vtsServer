// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlgorWar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgAlgorWar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgAlgorWarMes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAlgorWarMes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* hgAlgorWarLevel_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* hgAlgorWarMesType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgAlgorWar_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgAlgorWar_2eproto() {
  protobuf_AddDesc_hgAlgorWar_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgAlgorWar.proto");
  GOOGLE_CHECK(file != NULL);
  hgAlgorWarMes_descriptor_ = file->message_type(0);
  static const int hgAlgorWarMes_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warningid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warningguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warningpriority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warningname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, othermmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warningtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, warmes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, blink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, vector_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, sound_),
  };
  hgAlgorWarMes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAlgorWarMes_descriptor_,
      hgAlgorWarMes::internal_default_instance(),
      hgAlgorWarMes_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAlgorWarMes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorWarMes, _internal_metadata_));
  hgAlgorWarLevel_descriptor_ = file->enum_type(0);
  hgAlgorWarMesType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgAlgorWar_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAlgorWarMes_descriptor_, hgAlgorWarMes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgAlgorWar_2eproto() {
  hgAlgorWarMes_default_instance_.Shutdown();
  delete hgAlgorWarMes_reflection_;
}

void protobuf_InitDefaults_hgAlgorWar_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgAlgorWarMes_default_instance_.DefaultConstruct();
  hgAlgorWarMes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgAlgorWar_2eproto_once_);
void protobuf_InitDefaults_hgAlgorWar_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgAlgorWar_2eproto_once_,
                 &protobuf_InitDefaults_hgAlgorWar_2eproto_impl);
}
void protobuf_AddDesc_hgAlgorWar_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgAlgorWar_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020hgAlgorWar.proto\"\222\002\n\rhgAlgorWarMes\022\021\n\t"
    "WarningID\030\001 \001(\t\022\023\n\013WarningGUID\030\002 \001(\t\022\027\n\017"
    "WarningPriority\030\003 \001(\005\022\023\n\013WarningName\030\004 \001"
    "(\t\022\014\n\004MMSI\030\005 \001(\t\022\021\n\totherMMSI\030\006 \001(\t\022\023\n\013W"
    "arningTime\030\007 \001(\003\022\"\n\006WarMes\030\010 \001(\0162\022.hgAlg"
    "orWarMesType\022\037\n\005level\030\t \001(\0162\020.hgAlgorWar"
    "Level\022\r\n\005blink\030\n \001(\005\022\022\n\nvector_min\030\013 \001(\001"
    "\022\r\n\005sound\030\014 \001(\005*d\n\017hgAlgorWarLevel\022\016\n\nLe"
    "velBegin\020\000\022\017\n\013DANCOMMONLY\020\001\022\020\n\014DANCOLLIS"
    "ION\020\002\022\017\n\013DANCRITICAL\020\003\022\r\n\tDANURGENT\020\004*\265\001"
    "\n\021hgAlgorWarMesType\022\017\n\013NormalRight\020\000\022\016\n\n"
    "NormalLeft\020\001\022\022\n\016CollisionRight\020\002\022\021\n\rColl"
    "isionLeft\020\003\022\023\n\017CollisionDRight\020\004\022\022\n\016Coll"
    "isionDLeft\020\005\022\017\n\013ApproDRight\020\006\022\016\n\nApproDL"
    "eft\020\007\022\016\n\nDangerCase\020\010b\006proto3", 589);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgAlgorWar.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgAlgorWar_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgAlgorWar_2eproto_once_);
void protobuf_AddDesc_hgAlgorWar_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgAlgorWar_2eproto_once_,
                 &protobuf_AddDesc_hgAlgorWar_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgAlgorWar_2eproto {
  StaticDescriptorInitializer_hgAlgorWar_2eproto() {
    protobuf_AddDesc_hgAlgorWar_2eproto();
  }
} static_descriptor_initializer_hgAlgorWar_2eproto_;
const ::google::protobuf::EnumDescriptor* hgAlgorWarLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlgorWarLevel_descriptor_;
}
bool hgAlgorWarLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* hgAlgorWarMesType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlgorWarMesType_descriptor_;
}
bool hgAlgorWarMesType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAlgorWarMes::kWarningIDFieldNumber;
const int hgAlgorWarMes::kWarningGUIDFieldNumber;
const int hgAlgorWarMes::kWarningPriorityFieldNumber;
const int hgAlgorWarMes::kWarningNameFieldNumber;
const int hgAlgorWarMes::kMMSIFieldNumber;
const int hgAlgorWarMes::kOtherMMSIFieldNumber;
const int hgAlgorWarMes::kWarningTimeFieldNumber;
const int hgAlgorWarMes::kWarMesFieldNumber;
const int hgAlgorWarMes::kLevelFieldNumber;
const int hgAlgorWarMes::kBlinkFieldNumber;
const int hgAlgorWarMes::kVectorMinFieldNumber;
const int hgAlgorWarMes::kSoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAlgorWarMes::hgAlgorWarMes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAlgorWar_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAlgorWarMes)
}

void hgAlgorWarMes::InitAsDefaultInstance() {
}

hgAlgorWarMes::hgAlgorWarMes(const hgAlgorWarMes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAlgorWarMes)
}

void hgAlgorWarMes::SharedCtor() {
  warningid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othermmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&warningpriority_, 0, reinterpret_cast<char*>(&sound_) -
    reinterpret_cast<char*>(&warningpriority_) + sizeof(sound_));
  _cached_size_ = 0;
}

hgAlgorWarMes::~hgAlgorWarMes() {
  // @@protoc_insertion_point(destructor:hgAlgorWarMes)
  SharedDtor();
}

void hgAlgorWarMes::SharedDtor() {
  warningid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othermmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgAlgorWarMes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAlgorWarMes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlgorWarMes_descriptor_;
}

const hgAlgorWarMes& hgAlgorWarMes::default_instance() {
  protobuf_InitDefaults_hgAlgorWar_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAlgorWarMes> hgAlgorWarMes_default_instance_;

hgAlgorWarMes* hgAlgorWarMes::New(::google::protobuf::Arena* arena) const {
  hgAlgorWarMes* n = new hgAlgorWarMes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAlgorWarMes::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAlgorWarMes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgAlgorWarMes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgAlgorWarMes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(warningpriority_, warningtime_);
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othermmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(level_, sound_);

#undef ZR_HELPER_
#undef ZR_

}

bool hgAlgorWarMes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAlgorWarMes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WarningID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningid().data(), this->warningid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorWarMes.WarningID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarningGUID;
        break;
      }

      // optional string WarningGUID = 2;
      case 2: {
        if (tag == 18) {
         parse_WarningGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningguid().data(), this->warningguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorWarMes.WarningGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WarningPriority;
        break;
      }

      // optional int32 WarningPriority = 3;
      case 3: {
        if (tag == 24) {
         parse_WarningPriority:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warningpriority_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_WarningName;
        break;
      }

      // optional string WarningName = 4;
      case 4: {
        if (tag == 34) {
         parse_WarningName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningname().data(), this->warningname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorWarMes.WarningName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 5;
      case 5: {
        if (tag == 42) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorWarMes.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_otherMMSI;
        break;
      }

      // optional string otherMMSI = 6;
      case 6: {
        if (tag == 50) {
         parse_otherMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othermmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->othermmsi().data(), this->othermmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorWarMes.otherMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_WarningTime;
        break;
      }

      // optional int64 WarningTime = 7;
      case 7: {
        if (tag == 56) {
         parse_WarningTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &warningtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_WarMes;
        break;
      }

      // optional .hgAlgorWarMesType WarMes = 8;
      case 8: {
        if (tag == 64) {
         parse_WarMes:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warmes(static_cast< ::hgAlgorWarMesType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_level;
        break;
      }

      // optional .hgAlgorWarLevel level = 9;
      case 9: {
        if (tag == 72) {
         parse_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level(static_cast< ::hgAlgorWarLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_blink;
        break;
      }

      // optional int32 blink = 10;
      case 10: {
        if (tag == 80) {
         parse_blink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_vector_min;
        break;
      }

      // optional double vector_min = 11;
      case 11: {
        if (tag == 89) {
         parse_vector_min:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vector_min_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_sound;
        break;
      }

      // optional int32 sound = 12;
      case 12: {
        if (tag == 96) {
         parse_sound:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sound_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAlgorWarMes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAlgorWarMes)
  return false;
#undef DO_
}

void hgAlgorWarMes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAlgorWarMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->warningid(), output);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->warningguid(), output);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->warningpriority(), output);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->warningname(), output);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mmsi(), output);
  }

  // optional string otherMMSI = 6;
  if (this->othermmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othermmsi().data(), this->othermmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.otherMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->othermmsi(), output);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->warningtime(), output);
  }

  // optional .hgAlgorWarMesType WarMes = 8;
  if (this->warmes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->warmes(), output);
  }

  // optional .hgAlgorWarLevel level = 9;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->level(), output);
  }

  // optional int32 blink = 10;
  if (this->blink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->blink(), output);
  }

  // optional double vector_min = 11;
  if (this->vector_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->vector_min(), output);
  }

  // optional int32 sound = 12;
  if (this->sound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sound(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAlgorWarMes)
}

::google::protobuf::uint8* hgAlgorWarMes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAlgorWarMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->warningid(), target);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->warningguid(), target);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->warningpriority(), target);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.WarningName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->warningname(), target);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mmsi(), target);
  }

  // optional string otherMMSI = 6;
  if (this->othermmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othermmsi().data(), this->othermmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorWarMes.otherMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->othermmsi(), target);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->warningtime(), target);
  }

  // optional .hgAlgorWarMesType WarMes = 8;
  if (this->warmes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->warmes(), target);
  }

  // optional .hgAlgorWarLevel level = 9;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->level(), target);
  }

  // optional int32 blink = 10;
  if (this->blink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->blink(), target);
  }

  // optional double vector_min = 11;
  if (this->vector_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->vector_min(), target);
  }

  // optional int32 sound = 12;
  if (this->sound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sound(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAlgorWarMes)
  return target;
}

size_t hgAlgorWarMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAlgorWarMes)
  size_t total_size = 0;

  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningid());
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningguid());
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warningpriority());
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningname());
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional string otherMMSI = 6;
  if (this->othermmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othermmsi());
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->warningtime());
  }

  // optional .hgAlgorWarMesType WarMes = 8;
  if (this->warmes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warmes());
  }

  // optional .hgAlgorWarLevel level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
  }

  // optional int32 blink = 10;
  if (this->blink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blink());
  }

  // optional double vector_min = 11;
  if (this->vector_min() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 sound = 12;
  if (this->sound() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sound());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAlgorWarMes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAlgorWarMes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAlgorWarMes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAlgorWarMes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAlgorWarMes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAlgorWarMes)
    UnsafeMergeFrom(*source);
  }
}

void hgAlgorWarMes::MergeFrom(const hgAlgorWarMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAlgorWarMes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAlgorWarMes::UnsafeMergeFrom(const hgAlgorWarMes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.warningid().size() > 0) {

    warningid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningid_);
  }
  if (from.warningguid().size() > 0) {

    warningguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningguid_);
  }
  if (from.warningpriority() != 0) {
    set_warningpriority(from.warningpriority());
  }
  if (from.warningname().size() > 0) {

    warningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningname_);
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.othermmsi().size() > 0) {

    othermmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othermmsi_);
  }
  if (from.warningtime() != 0) {
    set_warningtime(from.warningtime());
  }
  if (from.warmes() != 0) {
    set_warmes(from.warmes());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.blink() != 0) {
    set_blink(from.blink());
  }
  if (from.vector_min() != 0) {
    set_vector_min(from.vector_min());
  }
  if (from.sound() != 0) {
    set_sound(from.sound());
  }
}

void hgAlgorWarMes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAlgorWarMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAlgorWarMes::CopyFrom(const hgAlgorWarMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAlgorWarMes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAlgorWarMes::IsInitialized() const {

  return true;
}

void hgAlgorWarMes::Swap(hgAlgorWarMes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAlgorWarMes::InternalSwap(hgAlgorWarMes* other) {
  warningid_.Swap(&other->warningid_);
  warningguid_.Swap(&other->warningguid_);
  std::swap(warningpriority_, other->warningpriority_);
  warningname_.Swap(&other->warningname_);
  mmsi_.Swap(&other->mmsi_);
  othermmsi_.Swap(&other->othermmsi_);
  std::swap(warningtime_, other->warningtime_);
  std::swap(warmes_, other->warmes_);
  std::swap(level_, other->level_);
  std::swap(blink_, other->blink_);
  std::swap(vector_min_, other->vector_min_);
  std::swap(sound_, other->sound_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAlgorWarMes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAlgorWarMes_descriptor_;
  metadata.reflection = hgAlgorWarMes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlgorWarMes

// optional string WarningID = 1;
void hgAlgorWarMes::clear_warningid() {
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorWarMes::warningid() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarningID)
  return warningid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_warningid(const ::std::string& value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarningID)
}
void hgAlgorWarMes::set_warningid(const char* value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorWarMes.WarningID)
}
void hgAlgorWarMes::set_warningid(const char* value, size_t size) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorWarMes.WarningID)
}
::std::string* hgAlgorWarMes::mutable_warningid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorWarMes.WarningID)
  return warningid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorWarMes::release_warningid() {
  // @@protoc_insertion_point(field_release:hgAlgorWarMes.WarningID)
  
  return warningid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_allocated_warningid(::std::string* warningid) {
  if (warningid != NULL) {
    
  } else {
    
  }
  warningid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorWarMes.WarningID)
}

// optional string WarningGUID = 2;
void hgAlgorWarMes::clear_warningguid() {
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorWarMes::warningguid() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarningGUID)
  return warningguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_warningguid(const ::std::string& value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarningGUID)
}
void hgAlgorWarMes::set_warningguid(const char* value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorWarMes.WarningGUID)
}
void hgAlgorWarMes::set_warningguid(const char* value, size_t size) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorWarMes.WarningGUID)
}
::std::string* hgAlgorWarMes::mutable_warningguid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorWarMes.WarningGUID)
  return warningguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorWarMes::release_warningguid() {
  // @@protoc_insertion_point(field_release:hgAlgorWarMes.WarningGUID)
  
  return warningguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_allocated_warningguid(::std::string* warningguid) {
  if (warningguid != NULL) {
    
  } else {
    
  }
  warningguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningguid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorWarMes.WarningGUID)
}

// optional int32 WarningPriority = 3;
void hgAlgorWarMes::clear_warningpriority() {
  warningpriority_ = 0;
}
::google::protobuf::int32 hgAlgorWarMes::warningpriority() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarningPriority)
  return warningpriority_;
}
void hgAlgorWarMes::set_warningpriority(::google::protobuf::int32 value) {
  
  warningpriority_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarningPriority)
}

// optional string WarningName = 4;
void hgAlgorWarMes::clear_warningname() {
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorWarMes::warningname() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarningName)
  return warningname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_warningname(const ::std::string& value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarningName)
}
void hgAlgorWarMes::set_warningname(const char* value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorWarMes.WarningName)
}
void hgAlgorWarMes::set_warningname(const char* value, size_t size) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorWarMes.WarningName)
}
::std::string* hgAlgorWarMes::mutable_warningname() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorWarMes.WarningName)
  return warningname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorWarMes::release_warningname() {
  // @@protoc_insertion_point(field_release:hgAlgorWarMes.WarningName)
  
  return warningname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_allocated_warningname(::std::string* warningname) {
  if (warningname != NULL) {
    
  } else {
    
  }
  warningname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningname);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorWarMes.WarningName)
}

// optional string MMSI = 5;
void hgAlgorWarMes::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorWarMes::mmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.MMSI)
}
void hgAlgorWarMes::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorWarMes.MMSI)
}
void hgAlgorWarMes::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorWarMes.MMSI)
}
::std::string* hgAlgorWarMes::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorWarMes.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorWarMes::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorWarMes.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorWarMes.MMSI)
}

// optional string otherMMSI = 6;
void hgAlgorWarMes::clear_othermmsi() {
  othermmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgAlgorWarMes::othermmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.otherMMSI)
  return othermmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_othermmsi(const ::std::string& value) {
  
  othermmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.otherMMSI)
}
void hgAlgorWarMes::set_othermmsi(const char* value) {
  
  othermmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorWarMes.otherMMSI)
}
void hgAlgorWarMes::set_othermmsi(const char* value, size_t size) {
  
  othermmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorWarMes.otherMMSI)
}
::std::string* hgAlgorWarMes::mutable_othermmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorWarMes.otherMMSI)
  return othermmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgAlgorWarMes::release_othermmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorWarMes.otherMMSI)
  
  return othermmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgAlgorWarMes::set_allocated_othermmsi(::std::string* othermmsi) {
  if (othermmsi != NULL) {
    
  } else {
    
  }
  othermmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), othermmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorWarMes.otherMMSI)
}

// optional int64 WarningTime = 7;
void hgAlgorWarMes::clear_warningtime() {
  warningtime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgAlgorWarMes::warningtime() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarningTime)
  return warningtime_;
}
void hgAlgorWarMes::set_warningtime(::google::protobuf::int64 value) {
  
  warningtime_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarningTime)
}

// optional .hgAlgorWarMesType WarMes = 8;
void hgAlgorWarMes::clear_warmes() {
  warmes_ = 0;
}
::hgAlgorWarMesType hgAlgorWarMes::warmes() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.WarMes)
  return static_cast< ::hgAlgorWarMesType >(warmes_);
}
void hgAlgorWarMes::set_warmes(::hgAlgorWarMesType value) {
  
  warmes_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.WarMes)
}

// optional .hgAlgorWarLevel level = 9;
void hgAlgorWarMes::clear_level() {
  level_ = 0;
}
::hgAlgorWarLevel hgAlgorWarMes::level() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.level)
  return static_cast< ::hgAlgorWarLevel >(level_);
}
void hgAlgorWarMes::set_level(::hgAlgorWarLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.level)
}

// optional int32 blink = 10;
void hgAlgorWarMes::clear_blink() {
  blink_ = 0;
}
::google::protobuf::int32 hgAlgorWarMes::blink() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.blink)
  return blink_;
}
void hgAlgorWarMes::set_blink(::google::protobuf::int32 value) {
  
  blink_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.blink)
}

// optional double vector_min = 11;
void hgAlgorWarMes::clear_vector_min() {
  vector_min_ = 0;
}
double hgAlgorWarMes::vector_min() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.vector_min)
  return vector_min_;
}
void hgAlgorWarMes::set_vector_min(double value) {
  
  vector_min_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.vector_min)
}

// optional int32 sound = 12;
void hgAlgorWarMes::clear_sound() {
  sound_ = 0;
}
::google::protobuf::int32 hgAlgorWarMes::sound() const {
  // @@protoc_insertion_point(field_get:hgAlgorWarMes.sound)
  return sound_;
}
void hgAlgorWarMes::set_sound(::google::protobuf::int32 value) {
  
  sound_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorWarMes.sound)
}

inline const hgAlgorWarMes* hgAlgorWarMes::internal_default_instance() {
  return &hgAlgorWarMes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
