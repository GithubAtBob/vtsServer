// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: createUser.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "createUser.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CreateUserRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateUserRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateUserRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateUserRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_createUser_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_createUser_2eproto() {
  protobuf_AddDesc_createUser_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "createUser.proto");
  GOOGLE_CHECK(file != NULL);
  CreateUserRequest_descriptor_ = file->message_type(0);
  static const int CreateUserRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, telephone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, userimagepath_),
  };
  CreateUserRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateUserRequest_descriptor_,
      CreateUserRequest::internal_default_instance(),
      CreateUserRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateUserRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRequest, _internal_metadata_));
  CreateUserRepsone_descriptor_ = file->message_type(1);
  static const int CreateUserRepsone_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRepsone, result_),
  };
  CreateUserRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateUserRepsone_descriptor_,
      CreateUserRepsone::internal_default_instance(),
      CreateUserRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateUserRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateUserRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_createUser_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateUserRequest_descriptor_, CreateUserRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateUserRepsone_descriptor_, CreateUserRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_createUser_2eproto() {
  CreateUserRequest_default_instance_.Shutdown();
  delete CreateUserRequest_reflection_;
  CreateUserRepsone_default_instance_.Shutdown();
  delete CreateUserRepsone_reflection_;
}

void protobuf_InitDefaults_createUser_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  CreateUserRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateUserRepsone_default_instance_.DefaultConstruct();
  CreateUserRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateUserRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_createUser_2eproto_once_);
void protobuf_InitDefaults_createUser_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_createUser_2eproto_once_,
                 &protobuf_InitDefaults_createUser_2eproto_impl);
}
void protobuf_AddDesc_createUser_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_createUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020createUser.proto\"\205\001\n\021CreateUserRequest"
    "\022\017\n\007Account\030\001 \001(\t\022\020\n\010RealName\030\002 \001(\t\022\020\n\010P"
    "assword\030\003 \001(\t\022\021\n\tTelephone\030\004 \001(\t\022\021\n\tGrou"
    "pName\030\005 \001(\t\022\025\n\rUserImagePath\030\006 \001(\t\"#\n\021Cr"
    "eateUserRepsone\022\016\n\006result\030\001 \001(\tb\006proto3", 199);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "createUser.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_createUser_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_createUser_2eproto_once_);
void protobuf_AddDesc_createUser_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_createUser_2eproto_once_,
                 &protobuf_AddDesc_createUser_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_createUser_2eproto {
  StaticDescriptorInitializer_createUser_2eproto() {
    protobuf_AddDesc_createUser_2eproto();
  }
} static_descriptor_initializer_createUser_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUserRequest::kAccountFieldNumber;
const int CreateUserRequest::kRealNameFieldNumber;
const int CreateUserRequest::kPasswordFieldNumber;
const int CreateUserRequest::kTelephoneFieldNumber;
const int CreateUserRequest::kGroupNameFieldNumber;
const int CreateUserRequest::kUserImagePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUserRequest::CreateUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_createUser_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateUserRequest)
}

void CreateUserRequest::InitAsDefaultInstance() {
}

CreateUserRequest::CreateUserRequest(const CreateUserRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateUserRequest)
}

void CreateUserRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userimagepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateUserRequest::~CreateUserRequest() {
  // @@protoc_insertion_point(destructor:CreateUserRequest)
  SharedDtor();
}

void CreateUserRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userimagepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateUserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateUserRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateUserRequest_descriptor_;
}

const CreateUserRequest& CreateUserRequest::default_instance() {
  protobuf_InitDefaults_createUser_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateUserRequest> CreateUserRequest_default_instance_;

CreateUserRequest* CreateUserRequest::New(::google::protobuf::Arena* arena) const {
  CreateUserRequest* n = new CreateUserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateUserRequest)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userimagepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateUserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.Account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RealName;
        break;
      }

      // optional string RealName = 2;
      case 2: {
        if (tag == 18) {
         parse_RealName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.RealName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Password;
        break;
      }

      // optional string Password = 3;
      case 3: {
        if (tag == 26) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Telephone;
        break;
      }

      // optional string Telephone = 4;
      case 4: {
        if (tag == 34) {
         parse_Telephone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telephone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->telephone().data(), this->telephone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.Telephone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_GroupName;
        break;
      }

      // optional string GroupName = 5;
      case 5: {
        if (tag == 42) {
         parse_GroupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.GroupName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UserImagePath;
        break;
      }

      // optional string UserImagePath = 6;
      case 6: {
        if (tag == 50) {
         parse_UserImagePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userimagepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userimagepath().data(), this->userimagepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRequest.UserImagePath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateUserRequest)
  return false;
#undef DO_
}

void CreateUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateUserRequest)
  // optional string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string RealName = 2;
  if (this->realname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.RealName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->realname(), output);
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string Telephone = 4;
  if (this->telephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telephone().data(), this->telephone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Telephone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->telephone(), output);
  }

  // optional string GroupName = 5;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.GroupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->groupname(), output);
  }

  // optional string UserImagePath = 6;
  if (this->userimagepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userimagepath().data(), this->userimagepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.UserImagePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->userimagepath(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateUserRequest)
}

::google::protobuf::uint8* CreateUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateUserRequest)
  // optional string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string RealName = 2;
  if (this->realname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.RealName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->realname(), target);
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional string Telephone = 4;
  if (this->telephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telephone().data(), this->telephone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.Telephone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->telephone(), target);
  }

  // optional string GroupName = 5;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.GroupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->groupname(), target);
  }

  // optional string UserImagePath = 6;
  if (this->userimagepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userimagepath().data(), this->userimagepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRequest.UserImagePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->userimagepath(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateUserRequest)
  return target;
}

size_t CreateUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateUserRequest)
  size_t total_size = 0;

  // optional string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string RealName = 2;
  if (this->realname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->realname());
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string Telephone = 4;
  if (this->telephone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->telephone());
  }

  // optional string GroupName = 5;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  // optional string UserImagePath = 6;
  if (this->userimagepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userimagepath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateUserRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateUserRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateUserRequest::MergeFrom(const CreateUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateUserRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateUserRequest::UnsafeMergeFrom(const CreateUserRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.realname().size() > 0) {

    realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.telephone().size() > 0) {

    telephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephone_);
  }
  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.userimagepath().size() > 0) {

    userimagepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userimagepath_);
  }
}

void CreateUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUserRequest::CopyFrom(const CreateUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateUserRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateUserRequest::IsInitialized() const {

  return true;
}

void CreateUserRequest::Swap(CreateUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUserRequest::InternalSwap(CreateUserRequest* other) {
  account_.Swap(&other->account_);
  realname_.Swap(&other->realname_);
  password_.Swap(&other->password_);
  telephone_.Swap(&other->telephone_);
  groupname_.Swap(&other->groupname_);
  userimagepath_.Swap(&other->userimagepath_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateUserRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateUserRequest_descriptor_;
  metadata.reflection = CreateUserRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateUserRequest

// optional string Account = 1;
void CreateUserRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::account() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.Account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.Account)
}
void CreateUserRequest::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.Account)
}
void CreateUserRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.Account)
}
::std::string* CreateUserRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_account() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.Account)
}

// optional string RealName = 2;
void CreateUserRequest::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::realname() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.RealName)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_realname(const ::std::string& value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.RealName)
}
void CreateUserRequest::set_realname(const char* value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.RealName)
}
void CreateUserRequest::set_realname(const char* value, size_t size) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.RealName)
}
::std::string* CreateUserRequest::mutable_realname() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.RealName)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_realname() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.RealName)
  
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    
  } else {
    
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.RealName)
}

// optional string Password = 3;
void CreateUserRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::password() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.Password)
}
void CreateUserRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.Password)
}
void CreateUserRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.Password)
}
::std::string* CreateUserRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_password() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.Password)
}

// optional string Telephone = 4;
void CreateUserRequest::clear_telephone() {
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::telephone() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.Telephone)
  return telephone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_telephone(const ::std::string& value) {
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.Telephone)
}
void CreateUserRequest::set_telephone(const char* value) {
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.Telephone)
}
void CreateUserRequest::set_telephone(const char* value, size_t size) {
  
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.Telephone)
}
::std::string* CreateUserRequest::mutable_telephone() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.Telephone)
  return telephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_telephone() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.Telephone)
  
  return telephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_telephone(::std::string* telephone) {
  if (telephone != NULL) {
    
  } else {
    
  }
  telephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telephone);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.Telephone)
}

// optional string GroupName = 5;
void CreateUserRequest::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::groupname() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.GroupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_groupname(const ::std::string& value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.GroupName)
}
void CreateUserRequest::set_groupname(const char* value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.GroupName)
}
void CreateUserRequest::set_groupname(const char* value, size_t size) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.GroupName)
}
::std::string* CreateUserRequest::mutable_groupname() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.GroupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_groupname() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.GroupName)
  
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    
  } else {
    
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.GroupName)
}

// optional string UserImagePath = 6;
void CreateUserRequest::clear_userimagepath() {
  userimagepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRequest::userimagepath() const {
  // @@protoc_insertion_point(field_get:CreateUserRequest.UserImagePath)
  return userimagepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_userimagepath(const ::std::string& value) {
  
  userimagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRequest.UserImagePath)
}
void CreateUserRequest::set_userimagepath(const char* value) {
  
  userimagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRequest.UserImagePath)
}
void CreateUserRequest::set_userimagepath(const char* value, size_t size) {
  
  userimagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRequest.UserImagePath)
}
::std::string* CreateUserRequest::mutable_userimagepath() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRequest.UserImagePath)
  return userimagepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRequest::release_userimagepath() {
  // @@protoc_insertion_point(field_release:CreateUserRequest.UserImagePath)
  
  return userimagepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRequest::set_allocated_userimagepath(::std::string* userimagepath) {
  if (userimagepath != NULL) {
    
  } else {
    
  }
  userimagepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userimagepath);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRequest.UserImagePath)
}

inline const CreateUserRequest* CreateUserRequest::internal_default_instance() {
  return &CreateUserRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUserRepsone::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUserRepsone::CreateUserRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_createUser_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateUserRepsone)
}

void CreateUserRepsone::InitAsDefaultInstance() {
}

CreateUserRepsone::CreateUserRepsone(const CreateUserRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateUserRepsone)
}

void CreateUserRepsone::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateUserRepsone::~CreateUserRepsone() {
  // @@protoc_insertion_point(destructor:CreateUserRepsone)
  SharedDtor();
}

void CreateUserRepsone::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateUserRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateUserRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateUserRepsone_descriptor_;
}

const CreateUserRepsone& CreateUserRepsone::default_instance() {
  protobuf_InitDefaults_createUser_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateUserRepsone> CreateUserRepsone_default_instance_;

CreateUserRepsone* CreateUserRepsone::New(::google::protobuf::Arena* arena) const {
  CreateUserRepsone* n = new CreateUserRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateUserRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateUserRepsone)
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateUserRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateUserRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CreateUserRepsone.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateUserRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateUserRepsone)
  return false;
#undef DO_
}

void CreateUserRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateUserRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRepsone.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateUserRepsone)
}

::google::protobuf::uint8* CreateUserRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateUserRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CreateUserRepsone.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateUserRepsone)
  return target;
}

size_t CreateUserRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateUserRepsone)
  size_t total_size = 0;

  // optional string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateUserRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateUserRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateUserRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateUserRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateUserRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateUserRepsone)
    UnsafeMergeFrom(*source);
  }
}

void CreateUserRepsone::MergeFrom(const CreateUserRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateUserRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateUserRepsone::UnsafeMergeFrom(const CreateUserRepsone& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void CreateUserRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateUserRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUserRepsone::CopyFrom(const CreateUserRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateUserRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateUserRepsone::IsInitialized() const {

  return true;
}

void CreateUserRepsone::Swap(CreateUserRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUserRepsone::InternalSwap(CreateUserRepsone* other) {
  result_.Swap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateUserRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateUserRepsone_descriptor_;
  metadata.reflection = CreateUserRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateUserRepsone

// optional string result = 1;
void CreateUserRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateUserRepsone::result() const {
  // @@protoc_insertion_point(field_get:CreateUserRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateUserRepsone.result)
}
void CreateUserRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateUserRepsone.result)
}
void CreateUserRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateUserRepsone.result)
}
::std::string* CreateUserRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:CreateUserRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateUserRepsone::release_result() {
  // @@protoc_insertion_point(field_release:CreateUserRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateUserRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:CreateUserRepsone.result)
}

inline const CreateUserRepsone* CreateUserRepsone::internal_default_instance() {
  return &CreateUserRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
