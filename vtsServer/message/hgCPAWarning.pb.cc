// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgCPAWarning.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgCPAWarning.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgCPAWarning_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgCPAWarning_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgCPAWarning_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgCPAWarning_2eproto() {
  protobuf_AddDesc_hgCPAWarning_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgCPAWarning.proto");
  GOOGLE_CHECK(file != NULL);
  hgCPAWarning_descriptor_ = file->message_type(0);
  static const int hgCPAWarning_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningpriority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, targetmmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, shipname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, callsign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, shiptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, sog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, cpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, tcpa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, relativebear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, reciprocalbear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, warningtype_),
  };
  hgCPAWarning_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgCPAWarning_descriptor_,
      hgCPAWarning::internal_default_instance(),
      hgCPAWarning_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgCPAWarning),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgCPAWarning, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgCPAWarning_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgCPAWarning_descriptor_, hgCPAWarning::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgCPAWarning_2eproto() {
  hgCPAWarning_default_instance_.Shutdown();
  delete hgCPAWarning_reflection_;
}

void protobuf_InitDefaults_hgCPAWarning_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_hgWarningType_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  hgCPAWarning_default_instance_.DefaultConstruct();
  hgCPAWarning_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgCPAWarning_2eproto_once_);
void protobuf_InitDefaults_hgCPAWarning_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgCPAWarning_2eproto_once_,
                 &protobuf_InitDefaults_hgCPAWarning_2eproto_impl);
}
void protobuf_AddDesc_hgCPAWarning_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgCPAWarning_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022hgCPAWarning.proto\032\023hgWarningType.prot"
    "o\"\336\002\n\014hgCPAWarning\022\021\n\tWarningID\030\001 \001(\t\022\023\n"
    "\013WarningGUID\030\002 \001(\t\022\027\n\017WarningPriority\030\003 "
    "\001(\005\022\023\n\013WarningName\030\004 \001(\t\022\014\n\004MMSI\030\005 \001(\t\022\022"
    "\n\nTargetMMSI\030\006 \001(\t\022\023\n\013WarningTime\030\007 \001(\003\022"
    "\020\n\010ShipName\030\010 \001(\t\022\020\n\010CallSign\030\t \001(\t\022\020\n\010S"
    "hipType\030\n \001(\t\022\013\n\003SOG\030\013 \001(\001\022\013\n\003CPA\030\014 \001(\001\022"
    "\014\n\004TCPA\030\r \001(\001\022\024\n\014RelativeBear\030\016 \001(\001\022\020\n\010D"
    "istance\030\017 \001(\001\022\026\n\016ReciprocalBear\030\020 \001(\001\022#\n"
    "\013WarningType\030\021 \001(\0162\016.hgWarningTypeb\006prot"
    "o3", 402);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgCPAWarning.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_hgWarningType_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgCPAWarning_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgCPAWarning_2eproto_once_);
void protobuf_AddDesc_hgCPAWarning_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgCPAWarning_2eproto_once_,
                 &protobuf_AddDesc_hgCPAWarning_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgCPAWarning_2eproto {
  StaticDescriptorInitializer_hgCPAWarning_2eproto() {
    protobuf_AddDesc_hgCPAWarning_2eproto();
  }
} static_descriptor_initializer_hgCPAWarning_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgCPAWarning::kWarningIDFieldNumber;
const int hgCPAWarning::kWarningGUIDFieldNumber;
const int hgCPAWarning::kWarningPriorityFieldNumber;
const int hgCPAWarning::kWarningNameFieldNumber;
const int hgCPAWarning::kMMSIFieldNumber;
const int hgCPAWarning::kTargetMMSIFieldNumber;
const int hgCPAWarning::kWarningTimeFieldNumber;
const int hgCPAWarning::kShipNameFieldNumber;
const int hgCPAWarning::kCallSignFieldNumber;
const int hgCPAWarning::kShipTypeFieldNumber;
const int hgCPAWarning::kSOGFieldNumber;
const int hgCPAWarning::kCPAFieldNumber;
const int hgCPAWarning::kTCPAFieldNumber;
const int hgCPAWarning::kRelativeBearFieldNumber;
const int hgCPAWarning::kDistanceFieldNumber;
const int hgCPAWarning::kReciprocalBearFieldNumber;
const int hgCPAWarning::kWarningTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgCPAWarning::hgCPAWarning()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgCPAWarning_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgCPAWarning)
}

void hgCPAWarning::InitAsDefaultInstance() {
}

hgCPAWarning::hgCPAWarning(const hgCPAWarning& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgCPAWarning)
}

void hgCPAWarning::SharedCtor() {
  warningid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&warningtime_, 0, reinterpret_cast<char*>(&reciprocalbear_) -
    reinterpret_cast<char*>(&warningtime_) + sizeof(reciprocalbear_));
  _cached_size_ = 0;
}

hgCPAWarning::~hgCPAWarning() {
  // @@protoc_insertion_point(destructor:hgCPAWarning)
  SharedDtor();
}

void hgCPAWarning::SharedDtor() {
  warningid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgCPAWarning::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgCPAWarning::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgCPAWarning_descriptor_;
}

const hgCPAWarning& hgCPAWarning::default_instance() {
  protobuf_InitDefaults_hgCPAWarning_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgCPAWarning> hgCPAWarning_default_instance_;

hgCPAWarning* hgCPAWarning::New(::google::protobuf::Arena* arena) const {
  hgCPAWarning* n = new hgCPAWarning;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgCPAWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:hgCPAWarning)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgCPAWarning, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgCPAWarning*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(warningtime_, warningpriority_);
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(sog_, reciprocalbear_);
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningtype_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool hgCPAWarning::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgCPAWarning)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WarningID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningid().data(), this->warningid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.WarningID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarningGUID;
        break;
      }

      // optional string WarningGUID = 2;
      case 2: {
        if (tag == 18) {
         parse_WarningGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningguid().data(), this->warningguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.WarningGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WarningPriority;
        break;
      }

      // optional int32 WarningPriority = 3;
      case 3: {
        if (tag == 24) {
         parse_WarningPriority:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warningpriority_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_WarningName;
        break;
      }

      // optional string WarningName = 4;
      case 4: {
        if (tag == 34) {
         parse_WarningName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningname().data(), this->warningname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.WarningName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 5;
      case 5: {
        if (tag == 42) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_TargetMMSI;
        break;
      }

      // optional string TargetMMSI = 6;
      case 6: {
        if (tag == 50) {
         parse_TargetMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetmmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetmmsi().data(), this->targetmmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.TargetMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_WarningTime;
        break;
      }

      // optional int64 WarningTime = 7;
      case 7: {
        if (tag == 56) {
         parse_WarningTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &warningtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_ShipName;
        break;
      }

      // optional string ShipName = 8;
      case 8: {
        if (tag == 66) {
         parse_ShipName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shipname().data(), this->shipname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.ShipName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CallSign;
        break;
      }

      // optional string CallSign = 9;
      case 9: {
        if (tag == 74) {
         parse_CallSign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callsign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callsign().data(), this->callsign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.CallSign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ShipType;
        break;
      }

      // optional string ShipType = 10;
      case 10: {
        if (tag == 82) {
         parse_ShipType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shiptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shiptype().data(), this->shiptype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgCPAWarning.ShipType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_SOG;
        break;
      }

      // optional double SOG = 11;
      case 11: {
        if (tag == 89) {
         parse_SOG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_CPA;
        break;
      }

      // optional double CPA = 12;
      case 12: {
        if (tag == 97) {
         parse_CPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_TCPA;
        break;
      }

      // optional double TCPA = 13;
      case 13: {
        if (tag == 105) {
         parse_TCPA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tcpa_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_RelativeBear;
        break;
      }

      // optional double RelativeBear = 14;
      case 14: {
        if (tag == 113) {
         parse_RelativeBear:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &relativebear_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_Distance;
        break;
      }

      // optional double Distance = 15;
      case 15: {
        if (tag == 121) {
         parse_Distance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_ReciprocalBear;
        break;
      }

      // optional double ReciprocalBear = 16;
      case 16: {
        if (tag == 129) {
         parse_ReciprocalBear:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reciprocalbear_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_WarningType;
        break;
      }

      // optional .hgWarningType WarningType = 17;
      case 17: {
        if (tag == 136) {
         parse_WarningType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warningtype(static_cast< ::hgWarningType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgCPAWarning)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgCPAWarning)
  return false;
#undef DO_
}

void hgCPAWarning::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgCPAWarning)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->warningid(), output);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->warningguid(), output);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->warningpriority(), output);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->warningname(), output);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mmsi(), output);
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.TargetMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->targetmmsi(), output);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->warningtime(), output);
  }

  // optional string ShipName = 8;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.ShipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->shipname(), output);
  }

  // optional string CallSign = 9;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.CallSign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->callsign(), output);
  }

  // optional string ShipType = 10;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.ShipType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->shiptype(), output);
  }

  // optional double SOG = 11;
  if (this->sog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->sog(), output);
  }

  // optional double CPA = 12;
  if (this->cpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->cpa(), output);
  }

  // optional double TCPA = 13;
  if (this->tcpa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->tcpa(), output);
  }

  // optional double RelativeBear = 14;
  if (this->relativebear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->relativebear(), output);
  }

  // optional double Distance = 15;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->distance(), output);
  }

  // optional double ReciprocalBear = 16;
  if (this->reciprocalbear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->reciprocalbear(), output);
  }

  // optional .hgWarningType WarningType = 17;
  if (this->warningtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->warningtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgCPAWarning)
}

::google::protobuf::uint8* hgCPAWarning::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgCPAWarning)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->warningid(), target);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->warningguid(), target);
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->warningpriority(), target);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.WarningName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->warningname(), target);
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mmsi(), target);
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.TargetMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->targetmmsi(), target);
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->warningtime(), target);
  }

  // optional string ShipName = 8;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.ShipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->shipname(), target);
  }

  // optional string CallSign = 9;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.CallSign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->callsign(), target);
  }

  // optional string ShipType = 10;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgCPAWarning.ShipType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->shiptype(), target);
  }

  // optional double SOG = 11;
  if (this->sog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->sog(), target);
  }

  // optional double CPA = 12;
  if (this->cpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->cpa(), target);
  }

  // optional double TCPA = 13;
  if (this->tcpa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->tcpa(), target);
  }

  // optional double RelativeBear = 14;
  if (this->relativebear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->relativebear(), target);
  }

  // optional double Distance = 15;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->distance(), target);
  }

  // optional double ReciprocalBear = 16;
  if (this->reciprocalbear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->reciprocalbear(), target);
  }

  // optional .hgWarningType WarningType = 17;
  if (this->warningtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->warningtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgCPAWarning)
  return target;
}

size_t hgCPAWarning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgCPAWarning)
  size_t total_size = 0;

  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningid());
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningguid());
  }

  // optional int32 WarningPriority = 3;
  if (this->warningpriority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warningpriority());
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningname());
  }

  // optional string MMSI = 5;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional string TargetMMSI = 6;
  if (this->targetmmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetmmsi());
  }

  // optional int64 WarningTime = 7;
  if (this->warningtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->warningtime());
  }

  // optional string ShipName = 8;
  if (this->shipname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shipname());
  }

  // optional string CallSign = 9;
  if (this->callsign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callsign());
  }

  // optional string ShipType = 10;
  if (this->shiptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shiptype());
  }

  // optional double SOG = 11;
  if (this->sog() != 0) {
    total_size += 1 + 8;
  }

  // optional double CPA = 12;
  if (this->cpa() != 0) {
    total_size += 1 + 8;
  }

  // optional double TCPA = 13;
  if (this->tcpa() != 0) {
    total_size += 1 + 8;
  }

  // optional double RelativeBear = 14;
  if (this->relativebear() != 0) {
    total_size += 1 + 8;
  }

  // optional double Distance = 15;
  if (this->distance() != 0) {
    total_size += 1 + 8;
  }

  // optional double ReciprocalBear = 16;
  if (this->reciprocalbear() != 0) {
    total_size += 2 + 8;
  }

  // optional .hgWarningType WarningType = 17;
  if (this->warningtype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warningtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgCPAWarning::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgCPAWarning)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgCPAWarning* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgCPAWarning>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgCPAWarning)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgCPAWarning)
    UnsafeMergeFrom(*source);
  }
}

void hgCPAWarning::MergeFrom(const hgCPAWarning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgCPAWarning)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgCPAWarning::UnsafeMergeFrom(const hgCPAWarning& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.warningid().size() > 0) {

    warningid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningid_);
  }
  if (from.warningguid().size() > 0) {

    warningguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningguid_);
  }
  if (from.warningpriority() != 0) {
    set_warningpriority(from.warningpriority());
  }
  if (from.warningname().size() > 0) {

    warningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningname_);
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.targetmmsi().size() > 0) {

    targetmmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetmmsi_);
  }
  if (from.warningtime() != 0) {
    set_warningtime(from.warningtime());
  }
  if (from.shipname().size() > 0) {

    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  if (from.callsign().size() > 0) {

    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  if (from.shiptype().size() > 0) {

    shiptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shiptype_);
  }
  if (from.sog() != 0) {
    set_sog(from.sog());
  }
  if (from.cpa() != 0) {
    set_cpa(from.cpa());
  }
  if (from.tcpa() != 0) {
    set_tcpa(from.tcpa());
  }
  if (from.relativebear() != 0) {
    set_relativebear(from.relativebear());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.reciprocalbear() != 0) {
    set_reciprocalbear(from.reciprocalbear());
  }
  if (from.warningtype() != 0) {
    set_warningtype(from.warningtype());
  }
}

void hgCPAWarning::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgCPAWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgCPAWarning::CopyFrom(const hgCPAWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgCPAWarning)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgCPAWarning::IsInitialized() const {

  return true;
}

void hgCPAWarning::Swap(hgCPAWarning* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgCPAWarning::InternalSwap(hgCPAWarning* other) {
  warningid_.Swap(&other->warningid_);
  warningguid_.Swap(&other->warningguid_);
  std::swap(warningpriority_, other->warningpriority_);
  warningname_.Swap(&other->warningname_);
  mmsi_.Swap(&other->mmsi_);
  targetmmsi_.Swap(&other->targetmmsi_);
  std::swap(warningtime_, other->warningtime_);
  shipname_.Swap(&other->shipname_);
  callsign_.Swap(&other->callsign_);
  shiptype_.Swap(&other->shiptype_);
  std::swap(sog_, other->sog_);
  std::swap(cpa_, other->cpa_);
  std::swap(tcpa_, other->tcpa_);
  std::swap(relativebear_, other->relativebear_);
  std::swap(distance_, other->distance_);
  std::swap(reciprocalbear_, other->reciprocalbear_);
  std::swap(warningtype_, other->warningtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgCPAWarning::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgCPAWarning_descriptor_;
  metadata.reflection = hgCPAWarning_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgCPAWarning

// optional string WarningID = 1;
void hgCPAWarning::clear_warningid() {
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::warningid() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningID)
  return warningid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_warningid(const ::std::string& value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningID)
}
void hgCPAWarning::set_warningid(const char* value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.WarningID)
}
void hgCPAWarning::set_warningid(const char* value, size_t size) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.WarningID)
}
::std::string* hgCPAWarning::mutable_warningid() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.WarningID)
  return warningid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_warningid() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.WarningID)
  
  return warningid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_warningid(::std::string* warningid) {
  if (warningid != NULL) {
    
  } else {
    
  }
  warningid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningid);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.WarningID)
}

// optional string WarningGUID = 2;
void hgCPAWarning::clear_warningguid() {
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::warningguid() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningGUID)
  return warningguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_warningguid(const ::std::string& value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningGUID)
}
void hgCPAWarning::set_warningguid(const char* value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.WarningGUID)
}
void hgCPAWarning::set_warningguid(const char* value, size_t size) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.WarningGUID)
}
::std::string* hgCPAWarning::mutable_warningguid() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.WarningGUID)
  return warningguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_warningguid() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.WarningGUID)
  
  return warningguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_warningguid(::std::string* warningguid) {
  if (warningguid != NULL) {
    
  } else {
    
  }
  warningguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningguid);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.WarningGUID)
}

// optional int32 WarningPriority = 3;
void hgCPAWarning::clear_warningpriority() {
  warningpriority_ = 0;
}
::google::protobuf::int32 hgCPAWarning::warningpriority() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningPriority)
  return warningpriority_;
}
void hgCPAWarning::set_warningpriority(::google::protobuf::int32 value) {
  
  warningpriority_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningPriority)
}

// optional string WarningName = 4;
void hgCPAWarning::clear_warningname() {
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::warningname() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningName)
  return warningname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_warningname(const ::std::string& value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningName)
}
void hgCPAWarning::set_warningname(const char* value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.WarningName)
}
void hgCPAWarning::set_warningname(const char* value, size_t size) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.WarningName)
}
::std::string* hgCPAWarning::mutable_warningname() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.WarningName)
  return warningname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_warningname() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.WarningName)
  
  return warningname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_warningname(::std::string* warningname) {
  if (warningname != NULL) {
    
  } else {
    
  }
  warningname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningname);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.WarningName)
}

// optional string MMSI = 5;
void hgCPAWarning::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::mmsi() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.MMSI)
}
void hgCPAWarning::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.MMSI)
}
void hgCPAWarning::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.MMSI)
}
::std::string* hgCPAWarning::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.MMSI)
}

// optional string TargetMMSI = 6;
void hgCPAWarning::clear_targetmmsi() {
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::targetmmsi() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.TargetMMSI)
  return targetmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_targetmmsi(const ::std::string& value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.TargetMMSI)
}
void hgCPAWarning::set_targetmmsi(const char* value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.TargetMMSI)
}
void hgCPAWarning::set_targetmmsi(const char* value, size_t size) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.TargetMMSI)
}
::std::string* hgCPAWarning::mutable_targetmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.TargetMMSI)
  return targetmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_targetmmsi() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.TargetMMSI)
  
  return targetmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_targetmmsi(::std::string* targetmmsi) {
  if (targetmmsi != NULL) {
    
  } else {
    
  }
  targetmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.TargetMMSI)
}

// optional int64 WarningTime = 7;
void hgCPAWarning::clear_warningtime() {
  warningtime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgCPAWarning::warningtime() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningTime)
  return warningtime_;
}
void hgCPAWarning::set_warningtime(::google::protobuf::int64 value) {
  
  warningtime_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningTime)
}

// optional string ShipName = 8;
void hgCPAWarning::clear_shipname() {
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::shipname() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.ShipName)
  return shipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_shipname(const ::std::string& value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.ShipName)
}
void hgCPAWarning::set_shipname(const char* value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.ShipName)
}
void hgCPAWarning::set_shipname(const char* value, size_t size) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.ShipName)
}
::std::string* hgCPAWarning::mutable_shipname() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.ShipName)
  return shipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_shipname() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.ShipName)
  
  return shipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_shipname(::std::string* shipname) {
  if (shipname != NULL) {
    
  } else {
    
  }
  shipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipname);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.ShipName)
}

// optional string CallSign = 9;
void hgCPAWarning::clear_callsign() {
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::callsign() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.CallSign)
  return callsign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_callsign(const ::std::string& value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.CallSign)
}
void hgCPAWarning::set_callsign(const char* value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.CallSign)
}
void hgCPAWarning::set_callsign(const char* value, size_t size) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.CallSign)
}
::std::string* hgCPAWarning::mutable_callsign() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.CallSign)
  return callsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_callsign() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.CallSign)
  
  return callsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_callsign(::std::string* callsign) {
  if (callsign != NULL) {
    
  } else {
    
  }
  callsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callsign);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.CallSign)
}

// optional string ShipType = 10;
void hgCPAWarning::clear_shiptype() {
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgCPAWarning::shiptype() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.ShipType)
  return shiptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_shiptype(const ::std::string& value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgCPAWarning.ShipType)
}
void hgCPAWarning::set_shiptype(const char* value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgCPAWarning.ShipType)
}
void hgCPAWarning::set_shiptype(const char* value, size_t size) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgCPAWarning.ShipType)
}
::std::string* hgCPAWarning::mutable_shiptype() {
  
  // @@protoc_insertion_point(field_mutable:hgCPAWarning.ShipType)
  return shiptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgCPAWarning::release_shiptype() {
  // @@protoc_insertion_point(field_release:hgCPAWarning.ShipType)
  
  return shiptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgCPAWarning::set_allocated_shiptype(::std::string* shiptype) {
  if (shiptype != NULL) {
    
  } else {
    
  }
  shiptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shiptype);
  // @@protoc_insertion_point(field_set_allocated:hgCPAWarning.ShipType)
}

// optional double SOG = 11;
void hgCPAWarning::clear_sog() {
  sog_ = 0;
}
double hgCPAWarning::sog() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.SOG)
  return sog_;
}
void hgCPAWarning::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.SOG)
}

// optional double CPA = 12;
void hgCPAWarning::clear_cpa() {
  cpa_ = 0;
}
double hgCPAWarning::cpa() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.CPA)
  return cpa_;
}
void hgCPAWarning::set_cpa(double value) {
  
  cpa_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.CPA)
}

// optional double TCPA = 13;
void hgCPAWarning::clear_tcpa() {
  tcpa_ = 0;
}
double hgCPAWarning::tcpa() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.TCPA)
  return tcpa_;
}
void hgCPAWarning::set_tcpa(double value) {
  
  tcpa_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.TCPA)
}

// optional double RelativeBear = 14;
void hgCPAWarning::clear_relativebear() {
  relativebear_ = 0;
}
double hgCPAWarning::relativebear() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.RelativeBear)
  return relativebear_;
}
void hgCPAWarning::set_relativebear(double value) {
  
  relativebear_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.RelativeBear)
}

// optional double Distance = 15;
void hgCPAWarning::clear_distance() {
  distance_ = 0;
}
double hgCPAWarning::distance() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.Distance)
  return distance_;
}
void hgCPAWarning::set_distance(double value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.Distance)
}

// optional double ReciprocalBear = 16;
void hgCPAWarning::clear_reciprocalbear() {
  reciprocalbear_ = 0;
}
double hgCPAWarning::reciprocalbear() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.ReciprocalBear)
  return reciprocalbear_;
}
void hgCPAWarning::set_reciprocalbear(double value) {
  
  reciprocalbear_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.ReciprocalBear)
}

// optional .hgWarningType WarningType = 17;
void hgCPAWarning::clear_warningtype() {
  warningtype_ = 0;
}
::hgWarningType hgCPAWarning::warningtype() const {
  // @@protoc_insertion_point(field_get:hgCPAWarning.WarningType)
  return static_cast< ::hgWarningType >(warningtype_);
}
void hgCPAWarning::set_warningtype(::hgWarningType value) {
  
  warningtype_ = value;
  // @@protoc_insertion_point(field_set:hgCPAWarning.WarningType)
}

inline const hgCPAWarning* hgCPAWarning::internal_default_instance() {
  return &hgCPAWarning_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
