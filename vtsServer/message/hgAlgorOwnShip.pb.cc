// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlgorOwnShip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgAlgorOwnShip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgAlgorOwnShip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAlgorOwnShip_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgAlgorOwnShip_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgAlgorOwnShip_2eproto() {
  protobuf_AddDesc_hgAlgorOwnShip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgAlgorOwnShip.proto");
  GOOGLE_CHECK(file != NULL);
  hgAlgorOwnShip_descriptor_ = file->message_type(0);
  static const int hgAlgorOwnShip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorOwnShip, mmsi_),
  };
  hgAlgorOwnShip_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAlgorOwnShip_descriptor_,
      hgAlgorOwnShip::internal_default_instance(),
      hgAlgorOwnShip_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAlgorOwnShip),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlgorOwnShip, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgAlgorOwnShip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAlgorOwnShip_descriptor_, hgAlgorOwnShip::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgAlgorOwnShip_2eproto() {
  hgAlgorOwnShip_default_instance_.Shutdown();
  delete hgAlgorOwnShip_reflection_;
}

void protobuf_InitDefaults_hgAlgorOwnShip_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgAlgorOwnShip_default_instance_.DefaultConstruct();
  hgAlgorOwnShip_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgAlgorOwnShip_2eproto_once_);
void protobuf_InitDefaults_hgAlgorOwnShip_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgAlgorOwnShip_2eproto_once_,
                 &protobuf_InitDefaults_hgAlgorOwnShip_2eproto_impl);
}
void protobuf_AddDesc_hgAlgorOwnShip_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgAlgorOwnShip_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024hgAlgorOwnShip.proto\"\036\n\016hgAlgorOwnShip"
    "\022\014\n\004MMSI\030\002 \003(\tb\006proto3", 62);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgAlgorOwnShip.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgAlgorOwnShip_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgAlgorOwnShip_2eproto_once_);
void protobuf_AddDesc_hgAlgorOwnShip_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgAlgorOwnShip_2eproto_once_,
                 &protobuf_AddDesc_hgAlgorOwnShip_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgAlgorOwnShip_2eproto {
  StaticDescriptorInitializer_hgAlgorOwnShip_2eproto() {
    protobuf_AddDesc_hgAlgorOwnShip_2eproto();
  }
} static_descriptor_initializer_hgAlgorOwnShip_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAlgorOwnShip::kMMSIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAlgorOwnShip::hgAlgorOwnShip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAlgorOwnShip_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAlgorOwnShip)
}

void hgAlgorOwnShip::InitAsDefaultInstance() {
}

hgAlgorOwnShip::hgAlgorOwnShip(const hgAlgorOwnShip& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAlgorOwnShip)
}

void hgAlgorOwnShip::SharedCtor() {
  _cached_size_ = 0;
}

hgAlgorOwnShip::~hgAlgorOwnShip() {
  // @@protoc_insertion_point(destructor:hgAlgorOwnShip)
  SharedDtor();
}

void hgAlgorOwnShip::SharedDtor() {
}

void hgAlgorOwnShip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAlgorOwnShip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlgorOwnShip_descriptor_;
}

const hgAlgorOwnShip& hgAlgorOwnShip::default_instance() {
  protobuf_InitDefaults_hgAlgorOwnShip_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAlgorOwnShip> hgAlgorOwnShip_default_instance_;

hgAlgorOwnShip* hgAlgorOwnShip::New(::google::protobuf::Arena* arena) const {
  hgAlgorOwnShip* n = new hgAlgorOwnShip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAlgorOwnShip::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAlgorOwnShip)
  mmsi_.Clear();
}

bool hgAlgorOwnShip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAlgorOwnShip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string MMSI = 2;
      case 2: {
        if (tag == 18) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi(this->mmsi_size() - 1).data(),
            this->mmsi(this->mmsi_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlgorOwnShip.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MMSI;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAlgorOwnShip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAlgorOwnShip)
  return false;
#undef DO_
}

void hgAlgorOwnShip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAlgorOwnShip)
  // repeated string MMSI = 2;
  for (int i = 0; i < this->mmsi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi(i).data(), this->mmsi(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorOwnShip.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mmsi(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAlgorOwnShip)
}

::google::protobuf::uint8* hgAlgorOwnShip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAlgorOwnShip)
  // repeated string MMSI = 2;
  for (int i = 0; i < this->mmsi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi(i).data(), this->mmsi(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlgorOwnShip.MMSI");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->mmsi(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAlgorOwnShip)
  return target;
}

size_t hgAlgorOwnShip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAlgorOwnShip)
  size_t total_size = 0;

  // repeated string MMSI = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mmsi_size());
  for (int i = 0; i < this->mmsi_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mmsi(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAlgorOwnShip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAlgorOwnShip)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAlgorOwnShip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAlgorOwnShip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAlgorOwnShip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAlgorOwnShip)
    UnsafeMergeFrom(*source);
  }
}

void hgAlgorOwnShip::MergeFrom(const hgAlgorOwnShip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAlgorOwnShip)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAlgorOwnShip::UnsafeMergeFrom(const hgAlgorOwnShip& from) {
  GOOGLE_DCHECK(&from != this);
  mmsi_.UnsafeMergeFrom(from.mmsi_);
}

void hgAlgorOwnShip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAlgorOwnShip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAlgorOwnShip::CopyFrom(const hgAlgorOwnShip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAlgorOwnShip)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAlgorOwnShip::IsInitialized() const {

  return true;
}

void hgAlgorOwnShip::Swap(hgAlgorOwnShip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAlgorOwnShip::InternalSwap(hgAlgorOwnShip* other) {
  mmsi_.UnsafeArenaSwap(&other->mmsi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAlgorOwnShip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAlgorOwnShip_descriptor_;
  metadata.reflection = hgAlgorOwnShip_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlgorOwnShip

// repeated string MMSI = 2;
int hgAlgorOwnShip::mmsi_size() const {
  return mmsi_.size();
}
void hgAlgorOwnShip::clear_mmsi() {
  mmsi_.Clear();
}
const ::std::string& hgAlgorOwnShip::mmsi(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorOwnShip.MMSI)
  return mmsi_.Get(index);
}
::std::string* hgAlgorOwnShip::mutable_mmsi(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlgorOwnShip.MMSI)
  return mmsi_.Mutable(index);
}
void hgAlgorOwnShip::set_mmsi(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hgAlgorOwnShip.MMSI)
  mmsi_.Mutable(index)->assign(value);
}
void hgAlgorOwnShip::set_mmsi(int index, const char* value) {
  mmsi_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hgAlgorOwnShip.MMSI)
}
void hgAlgorOwnShip::set_mmsi(int index, const char* value, size_t size) {
  mmsi_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hgAlgorOwnShip.MMSI)
}
::std::string* hgAlgorOwnShip::add_mmsi() {
  // @@protoc_insertion_point(field_add_mutable:hgAlgorOwnShip.MMSI)
  return mmsi_.Add();
}
void hgAlgorOwnShip::add_mmsi(const ::std::string& value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hgAlgorOwnShip.MMSI)
}
void hgAlgorOwnShip::add_mmsi(const char* value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hgAlgorOwnShip.MMSI)
}
void hgAlgorOwnShip::add_mmsi(const char* value, size_t size) {
  mmsi_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hgAlgorOwnShip.MMSI)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
hgAlgorOwnShip::mmsi() const {
  // @@protoc_insertion_point(field_list:hgAlgorOwnShip.MMSI)
  return mmsi_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
hgAlgorOwnShip::mutable_mmsi() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorOwnShip.MMSI)
  return &mmsi_;
}

inline const hgAlgorOwnShip* hgAlgorOwnShip::internal_default_instance() {
  return &hgAlgorOwnShip_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
