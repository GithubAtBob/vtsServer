// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlarmArea.proto

#ifndef PROTOBUF_hgAlarmArea_2eproto__INCLUDED
#define PROTOBUF_hgAlarmArea_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "hgPolygonMes.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAlarmArea_2eproto();
void protobuf_InitDefaults_hgAlarmArea_2eproto();
void protobuf_AssignDesc_hgAlarmArea_2eproto();
void protobuf_ShutdownFile_hgAlarmArea_2eproto();

class hgAlarmArea;

// ===================================================================

class hgAlarmArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAlarmArea) */ {
 public:
  hgAlarmArea();
  virtual ~hgAlarmArea();

  hgAlarmArea(const hgAlarmArea& from);

  inline hgAlarmArea& operator=(const hgAlarmArea& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAlarmArea& default_instance();

  static const hgAlarmArea* internal_default_instance();

  void Swap(hgAlarmArea* other);

  // implements Message ----------------------------------------------

  inline hgAlarmArea* New() const { return New(NULL); }

  hgAlarmArea* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAlarmArea& from);
  void MergeFrom(const hgAlarmArea& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAlarmArea* other);
  void UnsafeMergeFrom(const hgAlarmArea& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // repeated string mmsi = 2;
  int mmsi_size() const;
  void clear_mmsi();
  static const int kMmsiFieldNumber = 2;
  const ::std::string& mmsi(int index) const;
  ::std::string* mutable_mmsi(int index);
  void set_mmsi(int index, const ::std::string& value);
  void set_mmsi(int index, const char* value);
  void set_mmsi(int index, const char* value, size_t size);
  ::std::string* add_mmsi();
  void add_mmsi(const ::std::string& value);
  void add_mmsi(const char* value);
  void add_mmsi(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& mmsi() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mmsi();

  // repeated .hgPolygonMes polygon = 3;
  int polygon_size() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 3;
  const ::hgPolygonMes& polygon(int index) const;
  ::hgPolygonMes* mutable_polygon(int index);
  ::hgPolygonMes* add_polygon();
  ::google::protobuf::RepeatedPtrField< ::hgPolygonMes >*
      mutable_polygon();
  const ::google::protobuf::RepeatedPtrField< ::hgPolygonMes >&
      polygon() const;

  // @@protoc_insertion_point(class_scope:hgAlarmArea)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mmsi_;
  ::google::protobuf::RepeatedPtrField< ::hgPolygonMes > polygon_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAlarmArea_2eproto_impl();
  friend void  protobuf_AddDesc_hgAlarmArea_2eproto_impl();
  friend void protobuf_AssignDesc_hgAlarmArea_2eproto();
  friend void protobuf_ShutdownFile_hgAlarmArea_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAlarmArea> hgAlarmArea_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlarmArea

// optional int32 type = 1;
inline void hgAlarmArea::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 hgAlarmArea::type() const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.type)
  return type_;
}
inline void hgAlarmArea::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hgAlarmArea.type)
}

// repeated string mmsi = 2;
inline int hgAlarmArea::mmsi_size() const {
  return mmsi_.size();
}
inline void hgAlarmArea::clear_mmsi() {
  mmsi_.Clear();
}
inline const ::std::string& hgAlarmArea::mmsi(int index) const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.mmsi)
  return mmsi_.Get(index);
}
inline ::std::string* hgAlarmArea::mutable_mmsi(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlarmArea.mmsi)
  return mmsi_.Mutable(index);
}
inline void hgAlarmArea::set_mmsi(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hgAlarmArea.mmsi)
  mmsi_.Mutable(index)->assign(value);
}
inline void hgAlarmArea::set_mmsi(int index, const char* value) {
  mmsi_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hgAlarmArea.mmsi)
}
inline void hgAlarmArea::set_mmsi(int index, const char* value, size_t size) {
  mmsi_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hgAlarmArea.mmsi)
}
inline ::std::string* hgAlarmArea::add_mmsi() {
  // @@protoc_insertion_point(field_add_mutable:hgAlarmArea.mmsi)
  return mmsi_.Add();
}
inline void hgAlarmArea::add_mmsi(const ::std::string& value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hgAlarmArea.mmsi)
}
inline void hgAlarmArea::add_mmsi(const char* value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hgAlarmArea.mmsi)
}
inline void hgAlarmArea::add_mmsi(const char* value, size_t size) {
  mmsi_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hgAlarmArea.mmsi)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
hgAlarmArea::mmsi() const {
  // @@protoc_insertion_point(field_list:hgAlarmArea.mmsi)
  return mmsi_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
hgAlarmArea::mutable_mmsi() {
  // @@protoc_insertion_point(field_mutable_list:hgAlarmArea.mmsi)
  return &mmsi_;
}

// repeated .hgPolygonMes polygon = 3;
inline int hgAlarmArea::polygon_size() const {
  return polygon_.size();
}
inline void hgAlarmArea::clear_polygon() {
  polygon_.Clear();
}
inline const ::hgPolygonMes& hgAlarmArea::polygon(int index) const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.polygon)
  return polygon_.Get(index);
}
inline ::hgPolygonMes* hgAlarmArea::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlarmArea.polygon)
  return polygon_.Mutable(index);
}
inline ::hgPolygonMes* hgAlarmArea::add_polygon() {
  // @@protoc_insertion_point(field_add:hgAlarmArea.polygon)
  return polygon_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hgPolygonMes >*
hgAlarmArea::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:hgAlarmArea.polygon)
  return &polygon_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hgPolygonMes >&
hgAlarmArea::polygon() const {
  // @@protoc_insertion_point(field_list:hgAlarmArea.polygon)
  return polygon_;
}

inline const hgAlarmArea* hgAlarmArea::internal_default_instance() {
  return &hgAlarmArea_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAlarmArea_2eproto__INCLUDED
