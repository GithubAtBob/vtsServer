// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlgorText.proto

#ifndef PROTOBUF_hgAlgorText_2eproto__INCLUDED
#define PROTOBUF_hgAlgorText_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAlgorText_2eproto();
void protobuf_InitDefaults_hgAlgorText_2eproto();
void protobuf_AssignDesc_hgAlgorText_2eproto();
void protobuf_ShutdownFile_hgAlgorText_2eproto();

class hgAlgorText;

// ===================================================================

class hgAlgorText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAlgorText) */ {
 public:
  hgAlgorText();
  virtual ~hgAlgorText();

  hgAlgorText(const hgAlgorText& from);

  inline hgAlgorText& operator=(const hgAlgorText& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAlgorText& default_instance();

  static const hgAlgorText* internal_default_instance();

  void Swap(hgAlgorText* other);

  // implements Message ----------------------------------------------

  inline hgAlgorText* New() const { return New(NULL); }

  hgAlgorText* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAlgorText& from);
  void MergeFrom(const hgAlgorText& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAlgorText* other);
  void UnsafeMergeFrom(const hgAlgorText& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double RV = 1;
  void clear_rv();
  static const int kRVFieldNumber = 1;
  double rv() const;
  void set_rv(double value);

  // optional double Rc = 2;
  void clear_rc();
  static const int kRcFieldNumber = 2;
  double rc() const;
  void set_rc(double value);

  // optional double Dis = 3;
  void clear_dis();
  static const int kDisFieldNumber = 3;
  double dis() const;
  void set_dis(double value);

  // optional double TCPA = 4;
  void clear_tcpa();
  static const int kTCPAFieldNumber = 4;
  double tcpa() const;
  void set_tcpa(double value);

  // optional double DCPA = 5;
  void clear_dcpa();
  static const int kDCPAFieldNumber = 5;
  double dcpa() const;
  void set_dcpa(double value);

  // optional double SDA = 6;
  void clear_sda();
  static const int kSDAFieldNumber = 6;
  double sda() const;
  void set_sda(double value);

  // optional double SDAm = 7;
  void clear_sdam();
  static const int kSDAmFieldNumber = 7;
  double sdam() const;
  void set_sdam(double value);

  // optional double TarLat = 8;
  void clear_tarlat();
  static const int kTarLatFieldNumber = 8;
  double tarlat() const;
  void set_tarlat(double value);

  // optional double TarLon = 9;
  void clear_tarlon();
  static const int kTarLonFieldNumber = 9;
  double tarlon() const;
  void set_tarlon(double value);

  // optional double TarCoure = 10;
  void clear_tarcoure();
  static const int kTarCoureFieldNumber = 10;
  double tarcoure() const;
  void set_tarcoure(double value);

  // optional double TarSpd = 11;
  void clear_tarspd();
  static const int kTarSpdFieldNumber = 11;
  double tarspd() const;
  void set_tarspd(double value);

  // optional string TarMMSI = 12;
  void clear_tarmmsi();
  static const int kTarMMSIFieldNumber = 12;
  const ::std::string& tarmmsi() const;
  void set_tarmmsi(const ::std::string& value);
  void set_tarmmsi(const char* value);
  void set_tarmmsi(const char* value, size_t size);
  ::std::string* mutable_tarmmsi();
  ::std::string* release_tarmmsi();
  void set_allocated_tarmmsi(::std::string* tarmmsi);

  // optional int32 BOwn = 13;
  void clear_bown();
  static const int kBOwnFieldNumber = 13;
  ::google::protobuf::int32 bown() const;
  void set_bown(::google::protobuf::int32 value);

  // optional string OwnMMSI = 14;
  void clear_ownmmsi();
  static const int kOwnMMSIFieldNumber = 14;
  const ::std::string& ownmmsi() const;
  void set_ownmmsi(const ::std::string& value);
  void set_ownmmsi(const char* value);
  void set_ownmmsi(const char* value, size_t size);
  ::std::string* mutable_ownmmsi();
  ::std::string* release_ownmmsi();
  void set_allocated_ownmmsi(::std::string* ownmmsi);

  // @@protoc_insertion_point(class_scope:hgAlgorText)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tarmmsi_;
  ::google::protobuf::internal::ArenaStringPtr ownmmsi_;
  double rv_;
  double rc_;
  double dis_;
  double tcpa_;
  double dcpa_;
  double sda_;
  double sdam_;
  double tarlat_;
  double tarlon_;
  double tarcoure_;
  double tarspd_;
  ::google::protobuf::int32 bown_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAlgorText_2eproto_impl();
  friend void  protobuf_AddDesc_hgAlgorText_2eproto_impl();
  friend void protobuf_AssignDesc_hgAlgorText_2eproto();
  friend void protobuf_ShutdownFile_hgAlgorText_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAlgorText> hgAlgorText_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlgorText

// optional double RV = 1;
inline void hgAlgorText::clear_rv() {
  rv_ = 0;
}
inline double hgAlgorText::rv() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.RV)
  return rv_;
}
inline void hgAlgorText::set_rv(double value) {
  
  rv_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.RV)
}

// optional double Rc = 2;
inline void hgAlgorText::clear_rc() {
  rc_ = 0;
}
inline double hgAlgorText::rc() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.Rc)
  return rc_;
}
inline void hgAlgorText::set_rc(double value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.Rc)
}

// optional double Dis = 3;
inline void hgAlgorText::clear_dis() {
  dis_ = 0;
}
inline double hgAlgorText::dis() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.Dis)
  return dis_;
}
inline void hgAlgorText::set_dis(double value) {
  
  dis_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.Dis)
}

// optional double TCPA = 4;
inline void hgAlgorText::clear_tcpa() {
  tcpa_ = 0;
}
inline double hgAlgorText::tcpa() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TCPA)
  return tcpa_;
}
inline void hgAlgorText::set_tcpa(double value) {
  
  tcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TCPA)
}

// optional double DCPA = 5;
inline void hgAlgorText::clear_dcpa() {
  dcpa_ = 0;
}
inline double hgAlgorText::dcpa() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.DCPA)
  return dcpa_;
}
inline void hgAlgorText::set_dcpa(double value) {
  
  dcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.DCPA)
}

// optional double SDA = 6;
inline void hgAlgorText::clear_sda() {
  sda_ = 0;
}
inline double hgAlgorText::sda() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.SDA)
  return sda_;
}
inline void hgAlgorText::set_sda(double value) {
  
  sda_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.SDA)
}

// optional double SDAm = 7;
inline void hgAlgorText::clear_sdam() {
  sdam_ = 0;
}
inline double hgAlgorText::sdam() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.SDAm)
  return sdam_;
}
inline void hgAlgorText::set_sdam(double value) {
  
  sdam_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.SDAm)
}

// optional double TarLat = 8;
inline void hgAlgorText::clear_tarlat() {
  tarlat_ = 0;
}
inline double hgAlgorText::tarlat() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarLat)
  return tarlat_;
}
inline void hgAlgorText::set_tarlat(double value) {
  
  tarlat_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarLat)
}

// optional double TarLon = 9;
inline void hgAlgorText::clear_tarlon() {
  tarlon_ = 0;
}
inline double hgAlgorText::tarlon() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarLon)
  return tarlon_;
}
inline void hgAlgorText::set_tarlon(double value) {
  
  tarlon_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarLon)
}

// optional double TarCoure = 10;
inline void hgAlgorText::clear_tarcoure() {
  tarcoure_ = 0;
}
inline double hgAlgorText::tarcoure() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarCoure)
  return tarcoure_;
}
inline void hgAlgorText::set_tarcoure(double value) {
  
  tarcoure_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarCoure)
}

// optional double TarSpd = 11;
inline void hgAlgorText::clear_tarspd() {
  tarspd_ = 0;
}
inline double hgAlgorText::tarspd() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarSpd)
  return tarspd_;
}
inline void hgAlgorText::set_tarspd(double value) {
  
  tarspd_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.TarSpd)
}

// optional string TarMMSI = 12;
inline void hgAlgorText::clear_tarmmsi() {
  tarmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorText::tarmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.TarMMSI)
  return tarmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorText::set_tarmmsi(const ::std::string& value) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorText.TarMMSI)
}
inline void hgAlgorText::set_tarmmsi(const char* value) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorText.TarMMSI)
}
inline void hgAlgorText::set_tarmmsi(const char* value, size_t size) {
  
  tarmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorText.TarMMSI)
}
inline ::std::string* hgAlgorText::mutable_tarmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorText.TarMMSI)
  return tarmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorText::release_tarmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorText.TarMMSI)
  
  return tarmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorText::set_allocated_tarmmsi(::std::string* tarmmsi) {
  if (tarmmsi != NULL) {
    
  } else {
    
  }
  tarmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tarmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorText.TarMMSI)
}

// optional int32 BOwn = 13;
inline void hgAlgorText::clear_bown() {
  bown_ = 0;
}
inline ::google::protobuf::int32 hgAlgorText::bown() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.BOwn)
  return bown_;
}
inline void hgAlgorText::set_bown(::google::protobuf::int32 value) {
  
  bown_ = value;
  // @@protoc_insertion_point(field_set:hgAlgorText.BOwn)
}

// optional string OwnMMSI = 14;
inline void hgAlgorText::clear_ownmmsi() {
  ownmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorText::ownmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorText.OwnMMSI)
  return ownmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorText::set_ownmmsi(const ::std::string& value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorText.OwnMMSI)
}
inline void hgAlgorText::set_ownmmsi(const char* value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorText.OwnMMSI)
}
inline void hgAlgorText::set_ownmmsi(const char* value, size_t size) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorText.OwnMMSI)
}
inline ::std::string* hgAlgorText::mutable_ownmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorText.OwnMMSI)
  return ownmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorText::release_ownmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorText.OwnMMSI)
  
  return ownmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorText::set_allocated_ownmmsi(::std::string* ownmmsi) {
  if (ownmmsi != NULL) {
    
  } else {
    
  }
  ownmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorText.OwnMMSI)
}

inline const hgAlgorText* hgAlgorText::internal_default_instance() {
  return &hgAlgorText_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAlgorText_2eproto__INCLUDED
