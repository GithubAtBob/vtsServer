// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waring.proto

#ifndef PROTOBUF_waring_2eproto__INCLUDED
#define PROTOBUF_waring_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_waring_2eproto();
void protobuf_InitDefaults_waring_2eproto();
void protobuf_AssignDesc_waring_2eproto();
void protobuf_ShutdownFile_waring_2eproto();

class WaringRepsone;
class WaringRequest;

// ===================================================================

class WaringRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WaringRequest) */ {
 public:
  WaringRequest();
  virtual ~WaringRequest();

  WaringRequest(const WaringRequest& from);

  inline WaringRequest& operator=(const WaringRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WaringRequest& default_instance();

  static const WaringRequest* internal_default_instance();

  void Swap(WaringRequest* other);

  // implements Message ----------------------------------------------

  inline WaringRequest* New() const { return New(NULL); }

  WaringRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WaringRequest& from);
  void MergeFrom(const WaringRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WaringRequest* other);
  void UnsafeMergeFrom(const WaringRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 waringtype = 4;
  void clear_waringtype();
  static const int kWaringtypeFieldNumber = 4;
  ::google::protobuf::int32 waringtype() const;
  void set_waringtype(::google::protobuf::int32 value);

  // optional string time = 5;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // @@protoc_insertion_point(class_scope:WaringRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 waringtype_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_waring_2eproto_impl();
  friend void  protobuf_AddDesc_waring_2eproto_impl();
  friend void protobuf_AssignDesc_waring_2eproto();
  friend void protobuf_ShutdownFile_waring_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WaringRequest> WaringRequest_default_instance_;

// -------------------------------------------------------------------

class WaringRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WaringRepsone) */ {
 public:
  WaringRepsone();
  virtual ~WaringRepsone();

  WaringRepsone(const WaringRepsone& from);

  inline WaringRepsone& operator=(const WaringRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WaringRepsone& default_instance();

  static const WaringRepsone* internal_default_instance();

  void Swap(WaringRepsone* other);

  // implements Message ----------------------------------------------

  inline WaringRepsone* New() const { return New(NULL); }

  WaringRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WaringRepsone& from);
  void MergeFrom(const WaringRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WaringRepsone* other);
  void UnsafeMergeFrom(const WaringRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // repeated .WaringRequest waring = 3;
  int waring_size() const;
  void clear_waring();
  static const int kWaringFieldNumber = 3;
  const ::WaringRequest& waring(int index) const;
  ::WaringRequest* mutable_waring(int index);
  ::WaringRequest* add_waring();
  ::google::protobuf::RepeatedPtrField< ::WaringRequest >*
      mutable_waring();
  const ::google::protobuf::RepeatedPtrField< ::WaringRequest >&
      waring() const;

  // @@protoc_insertion_point(class_scope:WaringRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::WaringRequest > waring_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_waring_2eproto_impl();
  friend void  protobuf_AddDesc_waring_2eproto_impl();
  friend void protobuf_AssignDesc_waring_2eproto();
  friend void protobuf_ShutdownFile_waring_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WaringRepsone> WaringRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WaringRequest

// optional int32 type = 1;
inline void WaringRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 WaringRequest::type() const {
  // @@protoc_insertion_point(field_get:WaringRequest.type)
  return type_;
}
inline void WaringRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:WaringRequest.type)
}

// optional string ID = 2;
inline void WaringRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WaringRequest::id() const {
  // @@protoc_insertion_point(field_get:WaringRequest.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.ID)
}
inline void WaringRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.ID)
}
inline void WaringRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.ID)
}
inline ::std::string* WaringRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WaringRequest::release_id() {
  // @@protoc_insertion_point(field_release:WaringRequest.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.ID)
}

// optional string name = 3;
inline void WaringRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WaringRequest::name() const {
  // @@protoc_insertion_point(field_get:WaringRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.name)
}
inline void WaringRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.name)
}
inline void WaringRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.name)
}
inline ::std::string* WaringRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WaringRequest::release_name() {
  // @@protoc_insertion_point(field_release:WaringRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.name)
}

// optional int32 waringtype = 4;
inline void WaringRequest::clear_waringtype() {
  waringtype_ = 0;
}
inline ::google::protobuf::int32 WaringRequest::waringtype() const {
  // @@protoc_insertion_point(field_get:WaringRequest.waringtype)
  return waringtype_;
}
inline void WaringRequest::set_waringtype(::google::protobuf::int32 value) {
  
  waringtype_ = value;
  // @@protoc_insertion_point(field_set:WaringRequest.waringtype)
}

// optional string time = 5;
inline void WaringRequest::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WaringRequest::time() const {
  // @@protoc_insertion_point(field_get:WaringRequest.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.time)
}
inline void WaringRequest::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.time)
}
inline void WaringRequest::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.time)
}
inline ::std::string* WaringRequest::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WaringRequest::release_time() {
  // @@protoc_insertion_point(field_release:WaringRequest.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRequest::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.time)
}

inline const WaringRequest* WaringRequest::internal_default_instance() {
  return &WaringRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// WaringRepsone

// optional int32 type = 1;
inline void WaringRepsone::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 WaringRepsone::type() const {
  // @@protoc_insertion_point(field_get:WaringRepsone.type)
  return type_;
}
inline void WaringRepsone::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:WaringRepsone.type)
}

// optional string result = 2;
inline void WaringRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WaringRepsone::result() const {
  // @@protoc_insertion_point(field_get:WaringRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRepsone.result)
}
inline void WaringRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRepsone.result)
}
inline void WaringRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRepsone.result)
}
inline ::std::string* WaringRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:WaringRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WaringRepsone::release_result() {
  // @@protoc_insertion_point(field_release:WaringRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WaringRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:WaringRepsone.result)
}

// repeated .WaringRequest waring = 3;
inline int WaringRepsone::waring_size() const {
  return waring_.size();
}
inline void WaringRepsone::clear_waring() {
  waring_.Clear();
}
inline const ::WaringRequest& WaringRepsone::waring(int index) const {
  // @@protoc_insertion_point(field_get:WaringRepsone.waring)
  return waring_.Get(index);
}
inline ::WaringRequest* WaringRepsone::mutable_waring(int index) {
  // @@protoc_insertion_point(field_mutable:WaringRepsone.waring)
  return waring_.Mutable(index);
}
inline ::WaringRequest* WaringRepsone::add_waring() {
  // @@protoc_insertion_point(field_add:WaringRepsone.waring)
  return waring_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WaringRequest >*
WaringRepsone::mutable_waring() {
  // @@protoc_insertion_point(field_mutable_list:WaringRepsone.waring)
  return &waring_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WaringRequest >&
WaringRepsone::waring() const {
  // @@protoc_insertion_point(field_list:WaringRepsone.waring)
  return waring_;
}

inline const WaringRepsone* WaringRepsone::internal_default_instance() {
  return &WaringRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_waring_2eproto__INCLUDED
