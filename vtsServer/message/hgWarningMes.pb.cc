// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgWarningMes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgWarningMes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgWarningMes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgWarningMes_reflection_ = NULL;
const ::google::protobuf::Descriptor* WarningMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WarningMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UserLayerType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgWarningMes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgWarningMes_2eproto() {
  protobuf_AddDesc_hgWarningMes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgWarningMes.proto");
  GOOGLE_CHECK(file != NULL);
  hgWarningMes_descriptor_ = file->message_type(0);
  static const int hgWarningMes_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningpriority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, userlayguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, userlayid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, warningtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, targetmmsi_),
  };
  hgWarningMes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgWarningMes_descriptor_,
      hgWarningMes::internal_default_instance(),
      hgWarningMes_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgWarningMes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgWarningMes, _internal_metadata_));
  WarningMessage_descriptor_ = file->message_type(1);
  static const int WarningMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarningMessage, str_),
  };
  WarningMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WarningMessage_descriptor_,
      WarningMessage::internal_default_instance(),
      WarningMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(WarningMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WarningMessage, _internal_metadata_));
  UserLayerType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgWarningMes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgWarningMes_descriptor_, hgWarningMes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WarningMessage_descriptor_, WarningMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgWarningMes_2eproto() {
  hgWarningMes_default_instance_.Shutdown();
  delete hgWarningMes_reflection_;
  WarningMessage_default_instance_.Shutdown();
  delete WarningMessage_reflection_;
}

void protobuf_InitDefaults_hgWarningMes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_hgWarningType_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  hgWarningMes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WarningMessage_default_instance_.DefaultConstruct();
  hgWarningMes_default_instance_.get_mutable()->InitAsDefaultInstance();
  WarningMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgWarningMes_2eproto_once_);
void protobuf_InitDefaults_hgWarningMes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgWarningMes_2eproto_once_,
                 &protobuf_InitDefaults_hgWarningMes_2eproto_impl);
}
void protobuf_AddDesc_hgWarningMes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgWarningMes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022hgWarningMes.proto\032\023hgWarningType.prot"
    "o\"\272\002\n\014hgWarningMes\022\021\n\tWarningID\030\001 \001(\t\022\023\n"
    "\013WarningGUID\030\002 \001(\t\022+\n\017WarningPriority\030\003 "
    "\001(\0162\022.hgWarningPriority\022\023\n\013WarningName\030\004"
    " \001(\t\022 \n\007Message\030\005 \001(\0132\017.WarningMessage\022\014"
    "\n\004MMSI\030\006 \001(\t\022\023\n\013UserLayGUID\030\007 \001(\t\022!\n\tUse"
    "rLayID\030\010 \001(\0162\016.UserLayerType\022\n\n\002ID\030\t \001(\t"
    "\022\023\n\013WarningTime\030\n \001(\003\022#\n\013WarningType\030\013 \001"
    "(\0162\016.hgWarningType\022\022\n\nTargetMMSI\030\014 \001(\t\"\035"
    "\n\016WarningMessage\022\013\n\003str\030\001 \001(\t*b\n\rUserLay"
    "erType\022\014\n\010UPolygon\020\000\022\013\n\007UCricle\020\001\022\013\n\007USe"
    "ctor\020\002\022\017\n\013UReprotLine\020\003\022\014\n\010UChannel\020\004\022\n\n"
    "\006UNotes\020\005b\006proto3", 497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgWarningMes.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_hgWarningType_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgWarningMes_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgWarningMes_2eproto_once_);
void protobuf_AddDesc_hgWarningMes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgWarningMes_2eproto_once_,
                 &protobuf_AddDesc_hgWarningMes_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgWarningMes_2eproto {
  StaticDescriptorInitializer_hgWarningMes_2eproto() {
    protobuf_AddDesc_hgWarningMes_2eproto();
  }
} static_descriptor_initializer_hgWarningMes_2eproto_;
const ::google::protobuf::EnumDescriptor* UserLayerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLayerType_descriptor_;
}
bool UserLayerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgWarningMes::kWarningIDFieldNumber;
const int hgWarningMes::kWarningGUIDFieldNumber;
const int hgWarningMes::kWarningPriorityFieldNumber;
const int hgWarningMes::kWarningNameFieldNumber;
const int hgWarningMes::kMessageFieldNumber;
const int hgWarningMes::kMMSIFieldNumber;
const int hgWarningMes::kUserLayGUIDFieldNumber;
const int hgWarningMes::kUserLayIDFieldNumber;
const int hgWarningMes::kIDFieldNumber;
const int hgWarningMes::kWarningTimeFieldNumber;
const int hgWarningMes::kWarningTypeFieldNumber;
const int hgWarningMes::kTargetMMSIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgWarningMes::hgWarningMes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgWarningMes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgWarningMes)
}

void hgWarningMes::InitAsDefaultInstance() {
  message_ = const_cast< ::WarningMessage*>(
      ::WarningMessage::internal_default_instance());
}

hgWarningMes::hgWarningMes(const hgWarningMes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgWarningMes)
}

void hgWarningMes::SharedCtor() {
  warningid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userlayguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
  ::memset(&warningpriority_, 0, reinterpret_cast<char*>(&warningtype_) -
    reinterpret_cast<char*>(&warningpriority_) + sizeof(warningtype_));
  _cached_size_ = 0;
}

hgWarningMes::~hgWarningMes() {
  // @@protoc_insertion_point(destructor:hgWarningMes)
  SharedDtor();
}

void hgWarningMes::SharedDtor() {
  warningid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userlayguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &hgWarningMes_default_instance_.get()) {
    delete message_;
  }
}

void hgWarningMes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgWarningMes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgWarningMes_descriptor_;
}

const hgWarningMes& hgWarningMes::default_instance() {
  protobuf_InitDefaults_hgWarningMes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgWarningMes> hgWarningMes_default_instance_;

hgWarningMes* hgWarningMes::New(::google::protobuf::Arena* arena) const {
  hgWarningMes* n = new hgWarningMes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgWarningMes::Clear() {
// @@protoc_insertion_point(message_clear_start:hgWarningMes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgWarningMes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgWarningMes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(warningpriority_, userlayid_);
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userlayguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(warningtime_, warningtype_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool hgWarningMes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgWarningMes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WarningID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningid().data(), this->warningid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.WarningID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WarningGUID;
        break;
      }

      // optional string WarningGUID = 2;
      case 2: {
        if (tag == 18) {
         parse_WarningGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningguid().data(), this->warningguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.WarningGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WarningPriority;
        break;
      }

      // optional .hgWarningPriority WarningPriority = 3;
      case 3: {
        if (tag == 24) {
         parse_WarningPriority:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warningpriority(static_cast< ::hgWarningPriority >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_WarningName;
        break;
      }

      // optional string WarningName = 4;
      case 4: {
        if (tag == 34) {
         parse_WarningName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warningname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warningname().data(), this->warningname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.WarningName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Message;
        break;
      }

      // optional .WarningMessage Message = 5;
      case 5: {
        if (tag == 42) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_MMSI;
        break;
      }

      // optional string MMSI = 6;
      case 6: {
        if (tag == 50) {
         parse_MMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_UserLayGUID;
        break;
      }

      // optional string UserLayGUID = 7;
      case 7: {
        if (tag == 58) {
         parse_UserLayGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userlayguid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userlayguid().data(), this->userlayguid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.UserLayGUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_UserLayID;
        break;
      }

      // optional .UserLayerType UserLayID = 8;
      case 8: {
        if (tag == 64) {
         parse_UserLayID:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_userlayid(static_cast< ::UserLayerType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ID;
        break;
      }

      // optional string ID = 9;
      case 9: {
        if (tag == 74) {
         parse_ID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_WarningTime;
        break;
      }

      // optional int64 WarningTime = 10;
      case 10: {
        if (tag == 80) {
         parse_WarningTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &warningtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_WarningType;
        break;
      }

      // optional .hgWarningType WarningType = 11;
      case 11: {
        if (tag == 88) {
         parse_WarningType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_warningtype(static_cast< ::hgWarningType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_TargetMMSI;
        break;
      }

      // optional string TargetMMSI = 12;
      case 12: {
        if (tag == 98) {
         parse_TargetMMSI:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetmmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetmmsi().data(), this->targetmmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgWarningMes.TargetMMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgWarningMes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgWarningMes)
  return false;
#undef DO_
}

void hgWarningMes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgWarningMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->warningid(), output);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->warningguid(), output);
  }

  // optional .hgWarningPriority WarningPriority = 3;
  if (this->warningpriority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->warningpriority(), output);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->warningname(), output);
  }

  // optional .WarningMessage Message = 5;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->message_, output);
  }

  // optional string MMSI = 6;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mmsi(), output);
  }

  // optional string UserLayGUID = 7;
  if (this->userlayguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userlayguid().data(), this->userlayguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.UserLayGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->userlayguid(), output);
  }

  // optional .UserLayerType UserLayID = 8;
  if (this->userlayid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->userlayid(), output);
  }

  // optional string ID = 9;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->id(), output);
  }

  // optional int64 WarningTime = 10;
  if (this->warningtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->warningtime(), output);
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->warningtype(), output);
  }

  // optional string TargetMMSI = 12;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.TargetMMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->targetmmsi(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgWarningMes)
}

::google::protobuf::uint8* hgWarningMes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgWarningMes)
  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningid().data(), this->warningid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->warningid(), target);
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningguid().data(), this->warningguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->warningguid(), target);
  }

  // optional .hgWarningPriority WarningPriority = 3;
  if (this->warningpriority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->warningpriority(), target);
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warningname().data(), this->warningname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.WarningName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->warningname(), target);
  }

  // optional .WarningMessage Message = 5;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->message_, false, target);
  }

  // optional string MMSI = 6;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mmsi(), target);
  }

  // optional string UserLayGUID = 7;
  if (this->userlayguid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userlayguid().data(), this->userlayguid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.UserLayGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->userlayguid(), target);
  }

  // optional .UserLayerType UserLayID = 8;
  if (this->userlayid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->userlayid(), target);
  }

  // optional string ID = 9;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->id(), target);
  }

  // optional int64 WarningTime = 10;
  if (this->warningtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->warningtime(), target);
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->warningtype(), target);
  }

  // optional string TargetMMSI = 12;
  if (this->targetmmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetmmsi().data(), this->targetmmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgWarningMes.TargetMMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->targetmmsi(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgWarningMes)
  return target;
}

size_t hgWarningMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgWarningMes)
  size_t total_size = 0;

  // optional string WarningID = 1;
  if (this->warningid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningid());
  }

  // optional string WarningGUID = 2;
  if (this->warningguid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningguid());
  }

  // optional .hgWarningPriority WarningPriority = 3;
  if (this->warningpriority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warningpriority());
  }

  // optional string WarningName = 4;
  if (this->warningname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warningname());
  }

  // optional .WarningMessage Message = 5;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  // optional string MMSI = 6;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional string UserLayGUID = 7;
  if (this->userlayguid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userlayguid());
  }

  // optional .UserLayerType UserLayID = 8;
  if (this->userlayid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->userlayid());
  }

  // optional string ID = 9;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional int64 WarningTime = 10;
  if (this->warningtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->warningtime());
  }

  // optional .hgWarningType WarningType = 11;
  if (this->warningtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->warningtype());
  }

  // optional string TargetMMSI = 12;
  if (this->targetmmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetmmsi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgWarningMes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgWarningMes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgWarningMes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgWarningMes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgWarningMes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgWarningMes)
    UnsafeMergeFrom(*source);
  }
}

void hgWarningMes::MergeFrom(const hgWarningMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgWarningMes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgWarningMes::UnsafeMergeFrom(const hgWarningMes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.warningid().size() > 0) {

    warningid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningid_);
  }
  if (from.warningguid().size() > 0) {

    warningguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningguid_);
  }
  if (from.warningpriority() != 0) {
    set_warningpriority(from.warningpriority());
  }
  if (from.warningname().size() > 0) {

    warningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warningname_);
  }
  if (from.has_message()) {
    mutable_message()->::WarningMessage::MergeFrom(from.message());
  }
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.userlayguid().size() > 0) {

    userlayguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userlayguid_);
  }
  if (from.userlayid() != 0) {
    set_userlayid(from.userlayid());
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.warningtime() != 0) {
    set_warningtime(from.warningtime());
  }
  if (from.warningtype() != 0) {
    set_warningtype(from.warningtype());
  }
  if (from.targetmmsi().size() > 0) {

    targetmmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetmmsi_);
  }
}

void hgWarningMes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgWarningMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgWarningMes::CopyFrom(const hgWarningMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgWarningMes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgWarningMes::IsInitialized() const {

  return true;
}

void hgWarningMes::Swap(hgWarningMes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgWarningMes::InternalSwap(hgWarningMes* other) {
  warningid_.Swap(&other->warningid_);
  warningguid_.Swap(&other->warningguid_);
  std::swap(warningpriority_, other->warningpriority_);
  warningname_.Swap(&other->warningname_);
  std::swap(message_, other->message_);
  mmsi_.Swap(&other->mmsi_);
  userlayguid_.Swap(&other->userlayguid_);
  std::swap(userlayid_, other->userlayid_);
  id_.Swap(&other->id_);
  std::swap(warningtime_, other->warningtime_);
  std::swap(warningtype_, other->warningtype_);
  targetmmsi_.Swap(&other->targetmmsi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgWarningMes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgWarningMes_descriptor_;
  metadata.reflection = hgWarningMes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgWarningMes

// optional string WarningID = 1;
void hgWarningMes::clear_warningid() {
  warningid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::warningid() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningID)
  return warningid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_warningid(const ::std::string& value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningID)
}
void hgWarningMes::set_warningid(const char* value) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.WarningID)
}
void hgWarningMes::set_warningid(const char* value, size_t size) {
  
  warningid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.WarningID)
}
::std::string* hgWarningMes::mutable_warningid() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.WarningID)
  return warningid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_warningid() {
  // @@protoc_insertion_point(field_release:hgWarningMes.WarningID)
  
  return warningid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_warningid(::std::string* warningid) {
  if (warningid != NULL) {
    
  } else {
    
  }
  warningid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningid);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.WarningID)
}

// optional string WarningGUID = 2;
void hgWarningMes::clear_warningguid() {
  warningguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::warningguid() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningGUID)
  return warningguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_warningguid(const ::std::string& value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningGUID)
}
void hgWarningMes::set_warningguid(const char* value) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.WarningGUID)
}
void hgWarningMes::set_warningguid(const char* value, size_t size) {
  
  warningguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.WarningGUID)
}
::std::string* hgWarningMes::mutable_warningguid() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.WarningGUID)
  return warningguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_warningguid() {
  // @@protoc_insertion_point(field_release:hgWarningMes.WarningGUID)
  
  return warningguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_warningguid(::std::string* warningguid) {
  if (warningguid != NULL) {
    
  } else {
    
  }
  warningguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningguid);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.WarningGUID)
}

// optional .hgWarningPriority WarningPriority = 3;
void hgWarningMes::clear_warningpriority() {
  warningpriority_ = 0;
}
::hgWarningPriority hgWarningMes::warningpriority() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningPriority)
  return static_cast< ::hgWarningPriority >(warningpriority_);
}
void hgWarningMes::set_warningpriority(::hgWarningPriority value) {
  
  warningpriority_ = value;
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningPriority)
}

// optional string WarningName = 4;
void hgWarningMes::clear_warningname() {
  warningname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::warningname() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningName)
  return warningname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_warningname(const ::std::string& value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningName)
}
void hgWarningMes::set_warningname(const char* value) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.WarningName)
}
void hgWarningMes::set_warningname(const char* value, size_t size) {
  
  warningname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.WarningName)
}
::std::string* hgWarningMes::mutable_warningname() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.WarningName)
  return warningname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_warningname() {
  // @@protoc_insertion_point(field_release:hgWarningMes.WarningName)
  
  return warningname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_warningname(::std::string* warningname) {
  if (warningname != NULL) {
    
  } else {
    
  }
  warningname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warningname);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.WarningName)
}

// optional .WarningMessage Message = 5;
bool hgWarningMes::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
void hgWarningMes::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::WarningMessage& hgWarningMes::message() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.Message)
  return message_ != NULL ? *message_
                         : *::WarningMessage::internal_default_instance();
}
::WarningMessage* hgWarningMes::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::WarningMessage;
  }
  // @@protoc_insertion_point(field_mutable:hgWarningMes.Message)
  return message_;
}
::WarningMessage* hgWarningMes::release_message() {
  // @@protoc_insertion_point(field_release:hgWarningMes.Message)
  
  ::WarningMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void hgWarningMes::set_allocated_message(::WarningMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.Message)
}

// optional string MMSI = 6;
void hgWarningMes::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::mmsi() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.MMSI)
}
void hgWarningMes::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.MMSI)
}
void hgWarningMes::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.MMSI)
}
::std::string* hgWarningMes::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgWarningMes.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.MMSI)
}

// optional string UserLayGUID = 7;
void hgWarningMes::clear_userlayguid() {
  userlayguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::userlayguid() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.UserLayGUID)
  return userlayguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_userlayguid(const ::std::string& value) {
  
  userlayguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.UserLayGUID)
}
void hgWarningMes::set_userlayguid(const char* value) {
  
  userlayguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.UserLayGUID)
}
void hgWarningMes::set_userlayguid(const char* value, size_t size) {
  
  userlayguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.UserLayGUID)
}
::std::string* hgWarningMes::mutable_userlayguid() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.UserLayGUID)
  return userlayguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_userlayguid() {
  // @@protoc_insertion_point(field_release:hgWarningMes.UserLayGUID)
  
  return userlayguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_userlayguid(::std::string* userlayguid) {
  if (userlayguid != NULL) {
    
  } else {
    
  }
  userlayguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userlayguid);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.UserLayGUID)
}

// optional .UserLayerType UserLayID = 8;
void hgWarningMes::clear_userlayid() {
  userlayid_ = 0;
}
::UserLayerType hgWarningMes::userlayid() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.UserLayID)
  return static_cast< ::UserLayerType >(userlayid_);
}
void hgWarningMes::set_userlayid(::UserLayerType value) {
  
  userlayid_ = value;
  // @@protoc_insertion_point(field_set:hgWarningMes.UserLayID)
}

// optional string ID = 9;
void hgWarningMes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::id() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.ID)
}
void hgWarningMes::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.ID)
}
void hgWarningMes::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.ID)
}
::std::string* hgWarningMes::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_id() {
  // @@protoc_insertion_point(field_release:hgWarningMes.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.ID)
}

// optional int64 WarningTime = 10;
void hgWarningMes::clear_warningtime() {
  warningtime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 hgWarningMes::warningtime() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningTime)
  return warningtime_;
}
void hgWarningMes::set_warningtime(::google::protobuf::int64 value) {
  
  warningtime_ = value;
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningTime)
}

// optional .hgWarningType WarningType = 11;
void hgWarningMes::clear_warningtype() {
  warningtype_ = 0;
}
::hgWarningType hgWarningMes::warningtype() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.WarningType)
  return static_cast< ::hgWarningType >(warningtype_);
}
void hgWarningMes::set_warningtype(::hgWarningType value) {
  
  warningtype_ = value;
  // @@protoc_insertion_point(field_set:hgWarningMes.WarningType)
}

// optional string TargetMMSI = 12;
void hgWarningMes::clear_targetmmsi() {
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgWarningMes::targetmmsi() const {
  // @@protoc_insertion_point(field_get:hgWarningMes.TargetMMSI)
  return targetmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_targetmmsi(const ::std::string& value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgWarningMes.TargetMMSI)
}
void hgWarningMes::set_targetmmsi(const char* value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgWarningMes.TargetMMSI)
}
void hgWarningMes::set_targetmmsi(const char* value, size_t size) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgWarningMes.TargetMMSI)
}
::std::string* hgWarningMes::mutable_targetmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgWarningMes.TargetMMSI)
  return targetmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgWarningMes::release_targetmmsi() {
  // @@protoc_insertion_point(field_release:hgWarningMes.TargetMMSI)
  
  return targetmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgWarningMes::set_allocated_targetmmsi(::std::string* targetmmsi) {
  if (targetmmsi != NULL) {
    
  } else {
    
  }
  targetmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgWarningMes.TargetMMSI)
}

inline const hgWarningMes* hgWarningMes::internal_default_instance() {
  return &hgWarningMes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarningMessage::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarningMessage::WarningMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgWarningMes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:WarningMessage)
}

void WarningMessage::InitAsDefaultInstance() {
}

WarningMessage::WarningMessage(const WarningMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WarningMessage)
}

void WarningMessage::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WarningMessage::~WarningMessage() {
  // @@protoc_insertion_point(destructor:WarningMessage)
  SharedDtor();
}

void WarningMessage::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WarningMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarningMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WarningMessage_descriptor_;
}

const WarningMessage& WarningMessage::default_instance() {
  protobuf_InitDefaults_hgWarningMes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WarningMessage> WarningMessage_default_instance_;

WarningMessage* WarningMessage::New(::google::protobuf::Arena* arena) const {
  WarningMessage* n = new WarningMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarningMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:WarningMessage)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WarningMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WarningMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WarningMessage.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WarningMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WarningMessage)
  return false;
#undef DO_
}

void WarningMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WarningMessage)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WarningMessage.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // @@protoc_insertion_point(serialize_end:WarningMessage)
}

::google::protobuf::uint8* WarningMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WarningMessage)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WarningMessage.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WarningMessage)
  return target;
}

size_t WarningMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WarningMessage)
  size_t total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarningMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WarningMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WarningMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarningMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WarningMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WarningMessage)
    UnsafeMergeFrom(*source);
  }
}

void WarningMessage::MergeFrom(const WarningMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WarningMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WarningMessage::UnsafeMergeFrom(const WarningMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void WarningMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WarningMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarningMessage::CopyFrom(const WarningMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WarningMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WarningMessage::IsInitialized() const {

  return true;
}

void WarningMessage::Swap(WarningMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarningMessage::InternalSwap(WarningMessage* other) {
  str_.Swap(&other->str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarningMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WarningMessage_descriptor_;
  metadata.reflection = WarningMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WarningMessage

// optional string str = 1;
void WarningMessage::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WarningMessage::str() const {
  // @@protoc_insertion_point(field_get:WarningMessage.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WarningMessage::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WarningMessage.str)
}
void WarningMessage::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WarningMessage.str)
}
void WarningMessage::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WarningMessage.str)
}
::std::string* WarningMessage::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:WarningMessage.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WarningMessage::release_str() {
  // @@protoc_insertion_point(field_release:WarningMessage.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WarningMessage::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:WarningMessage.str)
}

inline const WarningMessage* WarningMessage::internal_default_instance() {
  return &WarningMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
