// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waring.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "waring.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* WaringRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WaringRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WaringRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WaringRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_waring_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_waring_2eproto() {
  protobuf_AddDesc_waring_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "waring.proto");
  GOOGLE_CHECK(file != NULL);
  WaringRequest_descriptor_ = file->message_type(0);
  static const int WaringRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, waringtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, time_),
  };
  WaringRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WaringRequest_descriptor_,
      WaringRequest::internal_default_instance(),
      WaringRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WaringRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRequest, _internal_metadata_));
  WaringRepsone_descriptor_ = file->message_type(1);
  static const int WaringRepsone_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRepsone, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRepsone, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRepsone, waring_),
  };
  WaringRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WaringRepsone_descriptor_,
      WaringRepsone::internal_default_instance(),
      WaringRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(WaringRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WaringRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_waring_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WaringRequest_descriptor_, WaringRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WaringRepsone_descriptor_, WaringRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_waring_2eproto() {
  WaringRequest_default_instance_.Shutdown();
  delete WaringRequest_reflection_;
  WaringRepsone_default_instance_.Shutdown();
  delete WaringRepsone_reflection_;
}

void protobuf_InitDefaults_waring_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  WaringRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WaringRepsone_default_instance_.DefaultConstruct();
  WaringRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  WaringRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_waring_2eproto_once_);
void protobuf_InitDefaults_waring_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_waring_2eproto_once_,
                 &protobuf_InitDefaults_waring_2eproto_impl);
}
void protobuf_AddDesc_waring_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_waring_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014waring.proto\"Y\n\rWaringRequest\022\014\n\004type\030"
    "\001 \001(\005\022\n\n\002ID\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\022\n\nwarin"
    "gtype\030\004 \001(\005\022\014\n\004time\030\005 \001(\t\"M\n\rWaringRepso"
    "ne\022\014\n\004type\030\001 \001(\005\022\016\n\006result\030\002 \001(\t\022\036\n\006wari"
    "ng\030\003 \003(\0132\016.WaringRequestb\006proto3", 192);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "waring.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_waring_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_waring_2eproto_once_);
void protobuf_AddDesc_waring_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_waring_2eproto_once_,
                 &protobuf_AddDesc_waring_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_waring_2eproto {
  StaticDescriptorInitializer_waring_2eproto() {
    protobuf_AddDesc_waring_2eproto();
  }
} static_descriptor_initializer_waring_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaringRequest::kTypeFieldNumber;
const int WaringRequest::kIDFieldNumber;
const int WaringRequest::kNameFieldNumber;
const int WaringRequest::kWaringtypeFieldNumber;
const int WaringRequest::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaringRequest::WaringRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_waring_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:WaringRequest)
}

void WaringRequest::InitAsDefaultInstance() {
}

WaringRequest::WaringRequest(const WaringRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WaringRequest)
}

void WaringRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&waringtype_) -
    reinterpret_cast<char*>(&type_) + sizeof(waringtype_));
  _cached_size_ = 0;
}

WaringRequest::~WaringRequest() {
  // @@protoc_insertion_point(destructor:WaringRequest)
  SharedDtor();
}

void WaringRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WaringRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WaringRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WaringRequest_descriptor_;
}

const WaringRequest& WaringRequest::default_instance() {
  protobuf_InitDefaults_waring_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WaringRequest> WaringRequest_default_instance_;

WaringRequest* WaringRequest::New(::google::protobuf::Arena* arena) const {
  WaringRequest* n = new WaringRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WaringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WaringRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WaringRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WaringRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, waringtype_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool WaringRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WaringRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ID;
        break;
      }

      // optional string ID = 2;
      case 2: {
        if (tag == 18) {
         parse_ID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WaringRequest.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WaringRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_waringtype;
        break;
      }

      // optional int32 waringtype = 4;
      case 4: {
        if (tag == 32) {
         parse_waringtype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &waringtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_time;
        break;
      }

      // optional string time = 5;
      case 5: {
        if (tag == 42) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WaringRequest.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WaringRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WaringRequest)
  return false;
#undef DO_
}

void WaringRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WaringRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 waringtype = 4;
  if (this->waringtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->waringtype(), output);
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:WaringRequest)
}

::google::protobuf::uint8* WaringRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WaringRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 waringtype = 4;
  if (this->waringtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->waringtype(), target);
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRequest.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WaringRequest)
  return target;
}

size_t WaringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WaringRequest)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 waringtype = 4;
  if (this->waringtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->waringtype());
  }

  // optional string time = 5;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WaringRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WaringRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WaringRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaringRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WaringRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WaringRequest)
    UnsafeMergeFrom(*source);
  }
}

void WaringRequest::MergeFrom(const WaringRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WaringRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WaringRequest::UnsafeMergeFrom(const WaringRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.waringtype() != 0) {
    set_waringtype(from.waringtype());
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void WaringRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WaringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaringRequest::CopyFrom(const WaringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WaringRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WaringRequest::IsInitialized() const {

  return true;
}

void WaringRequest::Swap(WaringRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaringRequest::InternalSwap(WaringRequest* other) {
  std::swap(type_, other->type_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(waringtype_, other->waringtype_);
  time_.Swap(&other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WaringRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WaringRequest_descriptor_;
  metadata.reflection = WaringRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WaringRequest

// optional int32 type = 1;
void WaringRequest::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 WaringRequest::type() const {
  // @@protoc_insertion_point(field_get:WaringRequest.type)
  return type_;
}
void WaringRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:WaringRequest.type)
}

// optional string ID = 2;
void WaringRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WaringRequest::id() const {
  // @@protoc_insertion_point(field_get:WaringRequest.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.ID)
}
void WaringRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.ID)
}
void WaringRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.ID)
}
::std::string* WaringRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WaringRequest::release_id() {
  // @@protoc_insertion_point(field_release:WaringRequest.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.ID)
}

// optional string name = 3;
void WaringRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WaringRequest::name() const {
  // @@protoc_insertion_point(field_get:WaringRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.name)
}
void WaringRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.name)
}
void WaringRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.name)
}
::std::string* WaringRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WaringRequest::release_name() {
  // @@protoc_insertion_point(field_release:WaringRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.name)
}

// optional int32 waringtype = 4;
void WaringRequest::clear_waringtype() {
  waringtype_ = 0;
}
::google::protobuf::int32 WaringRequest::waringtype() const {
  // @@protoc_insertion_point(field_get:WaringRequest.waringtype)
  return waringtype_;
}
void WaringRequest::set_waringtype(::google::protobuf::int32 value) {
  
  waringtype_ = value;
  // @@protoc_insertion_point(field_set:WaringRequest.waringtype)
}

// optional string time = 5;
void WaringRequest::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WaringRequest::time() const {
  // @@protoc_insertion_point(field_get:WaringRequest.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRequest.time)
}
void WaringRequest::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRequest.time)
}
void WaringRequest::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRequest.time)
}
::std::string* WaringRequest::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:WaringRequest.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WaringRequest::release_time() {
  // @@protoc_insertion_point(field_release:WaringRequest.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRequest::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:WaringRequest.time)
}

inline const WaringRequest* WaringRequest::internal_default_instance() {
  return &WaringRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaringRepsone::kTypeFieldNumber;
const int WaringRepsone::kResultFieldNumber;
const int WaringRepsone::kWaringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaringRepsone::WaringRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_waring_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:WaringRepsone)
}

void WaringRepsone::InitAsDefaultInstance() {
}

WaringRepsone::WaringRepsone(const WaringRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WaringRepsone)
}

void WaringRepsone::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

WaringRepsone::~WaringRepsone() {
  // @@protoc_insertion_point(destructor:WaringRepsone)
  SharedDtor();
}

void WaringRepsone::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WaringRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WaringRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WaringRepsone_descriptor_;
}

const WaringRepsone& WaringRepsone::default_instance() {
  protobuf_InitDefaults_waring_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WaringRepsone> WaringRepsone_default_instance_;

WaringRepsone* WaringRepsone::New(::google::protobuf::Arena* arena) const {
  WaringRepsone* n = new WaringRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WaringRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:WaringRepsone)
  type_ = 0;
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waring_.Clear();
}

bool WaringRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WaringRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result;
        break;
      }

      // optional string result = 2;
      case 2: {
        if (tag == 18) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WaringRepsone.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_waring;
        break;
      }

      // repeated .WaringRequest waring = 3;
      case 3: {
        if (tag == 26) {
         parse_waring:
          DO_(input->IncrementRecursionDepth());
         parse_loop_waring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_waring()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_waring;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WaringRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WaringRepsone)
  return false;
#undef DO_
}

void WaringRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WaringRepsone)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRepsone.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  // repeated .WaringRequest waring = 3;
  for (unsigned int i = 0, n = this->waring_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->waring(i), output);
  }

  // @@protoc_insertion_point(serialize_end:WaringRepsone)
}

::google::protobuf::uint8* WaringRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WaringRepsone)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WaringRepsone.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  // repeated .WaringRequest waring = 3;
  for (unsigned int i = 0, n = this->waring_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->waring(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WaringRepsone)
  return target;
}

size_t WaringRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WaringRepsone)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // repeated .WaringRequest waring = 3;
  {
    unsigned int count = this->waring_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->waring(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WaringRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WaringRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WaringRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaringRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WaringRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WaringRepsone)
    UnsafeMergeFrom(*source);
  }
}

void WaringRepsone::MergeFrom(const WaringRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WaringRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WaringRepsone::UnsafeMergeFrom(const WaringRepsone& from) {
  GOOGLE_DCHECK(&from != this);
  waring_.MergeFrom(from.waring_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void WaringRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WaringRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaringRepsone::CopyFrom(const WaringRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WaringRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WaringRepsone::IsInitialized() const {

  return true;
}

void WaringRepsone::Swap(WaringRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaringRepsone::InternalSwap(WaringRepsone* other) {
  std::swap(type_, other->type_);
  result_.Swap(&other->result_);
  waring_.UnsafeArenaSwap(&other->waring_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WaringRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WaringRepsone_descriptor_;
  metadata.reflection = WaringRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WaringRepsone

// optional int32 type = 1;
void WaringRepsone::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 WaringRepsone::type() const {
  // @@protoc_insertion_point(field_get:WaringRepsone.type)
  return type_;
}
void WaringRepsone::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:WaringRepsone.type)
}

// optional string result = 2;
void WaringRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WaringRepsone::result() const {
  // @@protoc_insertion_point(field_get:WaringRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WaringRepsone.result)
}
void WaringRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WaringRepsone.result)
}
void WaringRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WaringRepsone.result)
}
::std::string* WaringRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:WaringRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WaringRepsone::release_result() {
  // @@protoc_insertion_point(field_release:WaringRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WaringRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:WaringRepsone.result)
}

// repeated .WaringRequest waring = 3;
int WaringRepsone::waring_size() const {
  return waring_.size();
}
void WaringRepsone::clear_waring() {
  waring_.Clear();
}
const ::WaringRequest& WaringRepsone::waring(int index) const {
  // @@protoc_insertion_point(field_get:WaringRepsone.waring)
  return waring_.Get(index);
}
::WaringRequest* WaringRepsone::mutable_waring(int index) {
  // @@protoc_insertion_point(field_mutable:WaringRepsone.waring)
  return waring_.Mutable(index);
}
::WaringRequest* WaringRepsone::add_waring() {
  // @@protoc_insertion_point(field_add:WaringRepsone.waring)
  return waring_.Add();
}
::google::protobuf::RepeatedPtrField< ::WaringRequest >*
WaringRepsone::mutable_waring() {
  // @@protoc_insertion_point(field_mutable_list:WaringRepsone.waring)
  return &waring_;
}
const ::google::protobuf::RepeatedPtrField< ::WaringRequest >&
WaringRepsone::waring() const {
  // @@protoc_insertion_point(field_list:WaringRepsone.waring)
  return waring_;
}

inline const WaringRepsone* WaringRepsone::internal_default_instance() {
  return &WaringRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
