// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAnchorReserv.proto

#ifndef PROTOBUF_hgAnchorReserv_2eproto__INCLUDED
#define PROTOBUF_hgAnchorReserv_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAnchorReserv_2eproto();
void protobuf_InitDefaults_hgAnchorReserv_2eproto();
void protobuf_AssignDesc_hgAnchorReserv_2eproto();
void protobuf_ShutdownFile_hgAnchorReserv_2eproto();

class hgAnchorReserv;
class hgAnchorReservRepsone;

// ===================================================================

class hgAnchorReserv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAnchorReserv) */ {
 public:
  hgAnchorReserv();
  virtual ~hgAnchorReserv();

  hgAnchorReserv(const hgAnchorReserv& from);

  inline hgAnchorReserv& operator=(const hgAnchorReserv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAnchorReserv& default_instance();

  static const hgAnchorReserv* internal_default_instance();

  void Swap(hgAnchorReserv* other);

  // implements Message ----------------------------------------------

  inline hgAnchorReserv* New() const { return New(NULL); }

  hgAnchorReserv* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAnchorReserv& from);
  void MergeFrom(const hgAnchorReserv& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAnchorReserv* other);
  void UnsafeMergeFrom(const hgAnchorReserv& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MMSI = 1;
  void clear_mmsi();
  static const int kMMSIFieldNumber = 1;
  const ::std::string& mmsi() const;
  void set_mmsi(const ::std::string& value);
  void set_mmsi(const char* value);
  void set_mmsi(const char* value, size_t size);
  ::std::string* mutable_mmsi();
  ::std::string* release_mmsi();
  void set_allocated_mmsi(::std::string* mmsi);

  // optional string ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int32 Type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional bool AnchorReserv = 4;
  void clear_anchorreserv();
  static const int kAnchorReservFieldNumber = 4;
  bool anchorreserv() const;
  void set_anchorreserv(bool value);

  // optional int64 ETA = 5;
  void clear_eta();
  static const int kETAFieldNumber = 5;
  ::google::protobuf::int64 eta() const;
  void set_eta(::google::protobuf::int64 value);

  // optional int64 ETD = 6;
  void clear_etd();
  static const int kETDFieldNumber = 6;
  ::google::protobuf::int64 etd() const;
  void set_etd(::google::protobuf::int64 value);

  // optional int32 Tracks = 7;
  void clear_tracks();
  static const int kTracksFieldNumber = 7;
  ::google::protobuf::int32 tracks() const;
  void set_tracks(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hgAnchorReserv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mmsi_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  bool anchorreserv_;
  ::google::protobuf::int64 eta_;
  ::google::protobuf::int64 etd_;
  ::google::protobuf::int32 tracks_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAnchorReserv_2eproto_impl();
  friend void  protobuf_AddDesc_hgAnchorReserv_2eproto_impl();
  friend void protobuf_AssignDesc_hgAnchorReserv_2eproto();
  friend void protobuf_ShutdownFile_hgAnchorReserv_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAnchorReserv> hgAnchorReserv_default_instance_;

// -------------------------------------------------------------------

class hgAnchorReservRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAnchorReservRepsone) */ {
 public:
  hgAnchorReservRepsone();
  virtual ~hgAnchorReservRepsone();

  hgAnchorReservRepsone(const hgAnchorReservRepsone& from);

  inline hgAnchorReservRepsone& operator=(const hgAnchorReservRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAnchorReservRepsone& default_instance();

  static const hgAnchorReservRepsone* internal_default_instance();

  void Swap(hgAnchorReservRepsone* other);

  // implements Message ----------------------------------------------

  inline hgAnchorReservRepsone* New() const { return New(NULL); }

  hgAnchorReservRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAnchorReservRepsone& from);
  void MergeFrom(const hgAnchorReservRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAnchorReservRepsone* other);
  void UnsafeMergeFrom(const hgAnchorReservRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hgAnchorReservRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAnchorReserv_2eproto_impl();
  friend void  protobuf_AddDesc_hgAnchorReserv_2eproto_impl();
  friend void protobuf_AssignDesc_hgAnchorReserv_2eproto();
  friend void protobuf_ShutdownFile_hgAnchorReserv_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAnchorReservRepsone> hgAnchorReservRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAnchorReserv

// optional string MMSI = 1;
inline void hgAnchorReserv::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAnchorReserv::mmsi() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorReserv::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAnchorReserv.MMSI)
}
inline void hgAnchorReserv::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAnchorReserv.MMSI)
}
inline void hgAnchorReserv::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAnchorReserv.MMSI)
}
inline ::std::string* hgAnchorReserv::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAnchorReserv.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAnchorReserv::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgAnchorReserv.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorReserv::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAnchorReserv.MMSI)
}

// optional string ID = 2;
inline void hgAnchorReserv::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAnchorReserv::id() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorReserv::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAnchorReserv.ID)
}
inline void hgAnchorReserv::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAnchorReserv.ID)
}
inline void hgAnchorReserv::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAnchorReserv.ID)
}
inline ::std::string* hgAnchorReserv::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgAnchorReserv.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAnchorReserv::release_id() {
  // @@protoc_insertion_point(field_release:hgAnchorReserv.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorReserv::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgAnchorReserv.ID)
}

// optional int32 Type = 3;
inline void hgAnchorReserv::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 hgAnchorReserv::type() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.Type)
  return type_;
}
inline void hgAnchorReserv::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorReserv.Type)
}

// optional bool AnchorReserv = 4;
inline void hgAnchorReserv::clear_anchorreserv() {
  anchorreserv_ = false;
}
inline bool hgAnchorReserv::anchorreserv() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.AnchorReserv)
  return anchorreserv_;
}
inline void hgAnchorReserv::set_anchorreserv(bool value) {
  
  anchorreserv_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorReserv.AnchorReserv)
}

// optional int64 ETA = 5;
inline void hgAnchorReserv::clear_eta() {
  eta_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgAnchorReserv::eta() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.ETA)
  return eta_;
}
inline void hgAnchorReserv::set_eta(::google::protobuf::int64 value) {
  
  eta_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorReserv.ETA)
}

// optional int64 ETD = 6;
inline void hgAnchorReserv::clear_etd() {
  etd_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgAnchorReserv::etd() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.ETD)
  return etd_;
}
inline void hgAnchorReserv::set_etd(::google::protobuf::int64 value) {
  
  etd_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorReserv.ETD)
}

// optional int32 Tracks = 7;
inline void hgAnchorReserv::clear_tracks() {
  tracks_ = 0;
}
inline ::google::protobuf::int32 hgAnchorReserv::tracks() const {
  // @@protoc_insertion_point(field_get:hgAnchorReserv.Tracks)
  return tracks_;
}
inline void hgAnchorReserv::set_tracks(::google::protobuf::int32 value) {
  
  tracks_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorReserv.Tracks)
}

inline const hgAnchorReserv* hgAnchorReserv::internal_default_instance() {
  return &hgAnchorReserv_default_instance_.get();
}
// -------------------------------------------------------------------

// hgAnchorReservRepsone

inline const hgAnchorReservRepsone* hgAnchorReservRepsone::internal_default_instance() {
  return &hgAnchorReservRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAnchorReserv_2eproto__INCLUDED
