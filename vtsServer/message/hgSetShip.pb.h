// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgSetShip.proto

#ifndef PROTOBUF_hgSetShip_2eproto__INCLUDED
#define PROTOBUF_hgSetShip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgSetShip_2eproto();
void protobuf_InitDefaults_hgSetShip_2eproto();
void protobuf_AssignDesc_hgSetShip_2eproto();
void protobuf_ShutdownFile_hgSetShip_2eproto();

class hgSetShip;
class hgSetShipRepsone;

// ===================================================================

class hgSetShip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgSetShip) */ {
 public:
  hgSetShip();
  virtual ~hgSetShip();

  hgSetShip(const hgSetShip& from);

  inline hgSetShip& operator=(const hgSetShip& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgSetShip& default_instance();

  static const hgSetShip* internal_default_instance();

  void Swap(hgSetShip* other);

  // implements Message ----------------------------------------------

  inline hgSetShip* New() const { return New(NULL); }

  hgSetShip* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgSetShip& from);
  void MergeFrom(const hgSetShip& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgSetShip* other);
  void UnsafeMergeFrom(const hgSetShip& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MMSI = 1;
  void clear_mmsi();
  static const int kMMSIFieldNumber = 1;
  const ::std::string& mmsi() const;
  void set_mmsi(const ::std::string& value);
  void set_mmsi(const char* value);
  void set_mmsi(const char* value, size_t size);
  ::std::string* mutable_mmsi();
  ::std::string* release_mmsi();
  void set_allocated_mmsi(::std::string* mmsi);

  // optional bool SetShip = 2;
  void clear_setship();
  static const int kSetShipFieldNumber = 2;
  bool setship() const;
  void set_setship(bool value);

  // optional string ShipType = 3;
  void clear_shiptype();
  static const int kShipTypeFieldNumber = 3;
  const ::std::string& shiptype() const;
  void set_shiptype(const ::std::string& value);
  void set_shiptype(const char* value);
  void set_shiptype(const char* value, size_t size);
  ::std::string* mutable_shiptype();
  ::std::string* release_shiptype();
  void set_allocated_shiptype(::std::string* shiptype);

  // optional double ShipLength = 4;
  void clear_shiplength();
  static const int kShipLengthFieldNumber = 4;
  double shiplength() const;
  void set_shiplength(double value);

  // optional double ShipWidth = 5;
  void clear_shipwidth();
  static const int kShipWidthFieldNumber = 5;
  double shipwidth() const;
  void set_shipwidth(double value);

  // @@protoc_insertion_point(class_scope:hgSetShip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mmsi_;
  ::google::protobuf::internal::ArenaStringPtr shiptype_;
  double shiplength_;
  double shipwidth_;
  bool setship_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgSetShip_2eproto_impl();
  friend void  protobuf_AddDesc_hgSetShip_2eproto_impl();
  friend void protobuf_AssignDesc_hgSetShip_2eproto();
  friend void protobuf_ShutdownFile_hgSetShip_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgSetShip> hgSetShip_default_instance_;

// -------------------------------------------------------------------

class hgSetShipRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgSetShipRepsone) */ {
 public:
  hgSetShipRepsone();
  virtual ~hgSetShipRepsone();

  hgSetShipRepsone(const hgSetShipRepsone& from);

  inline hgSetShipRepsone& operator=(const hgSetShipRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgSetShipRepsone& default_instance();

  static const hgSetShipRepsone* internal_default_instance();

  void Swap(hgSetShipRepsone* other);

  // implements Message ----------------------------------------------

  inline hgSetShipRepsone* New() const { return New(NULL); }

  hgSetShipRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgSetShipRepsone& from);
  void MergeFrom(const hgSetShipRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgSetShipRepsone* other);
  void UnsafeMergeFrom(const hgSetShipRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hgSetShipRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgSetShip_2eproto_impl();
  friend void  protobuf_AddDesc_hgSetShip_2eproto_impl();
  friend void protobuf_AssignDesc_hgSetShip_2eproto();
  friend void protobuf_ShutdownFile_hgSetShip_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgSetShipRepsone> hgSetShipRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgSetShip

// optional string MMSI = 1;
inline void hgSetShip::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgSetShip::mmsi() const {
  // @@protoc_insertion_point(field_get:hgSetShip.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgSetShip::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgSetShip.MMSI)
}
inline void hgSetShip::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgSetShip.MMSI)
}
inline void hgSetShip::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgSetShip.MMSI)
}
inline ::std::string* hgSetShip::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgSetShip.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgSetShip::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgSetShip.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgSetShip::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgSetShip.MMSI)
}

// optional bool SetShip = 2;
inline void hgSetShip::clear_setship() {
  setship_ = false;
}
inline bool hgSetShip::setship() const {
  // @@protoc_insertion_point(field_get:hgSetShip.SetShip)
  return setship_;
}
inline void hgSetShip::set_setship(bool value) {
  
  setship_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.SetShip)
}

// optional string ShipType = 3;
inline void hgSetShip::clear_shiptype() {
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgSetShip::shiptype() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipType)
  return shiptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgSetShip::set_shiptype(const ::std::string& value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgSetShip.ShipType)
}
inline void hgSetShip::set_shiptype(const char* value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgSetShip.ShipType)
}
inline void hgSetShip::set_shiptype(const char* value, size_t size) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgSetShip.ShipType)
}
inline ::std::string* hgSetShip::mutable_shiptype() {
  
  // @@protoc_insertion_point(field_mutable:hgSetShip.ShipType)
  return shiptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgSetShip::release_shiptype() {
  // @@protoc_insertion_point(field_release:hgSetShip.ShipType)
  
  return shiptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgSetShip::set_allocated_shiptype(::std::string* shiptype) {
  if (shiptype != NULL) {
    
  } else {
    
  }
  shiptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shiptype);
  // @@protoc_insertion_point(field_set_allocated:hgSetShip.ShipType)
}

// optional double ShipLength = 4;
inline void hgSetShip::clear_shiplength() {
  shiplength_ = 0;
}
inline double hgSetShip::shiplength() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipLength)
  return shiplength_;
}
inline void hgSetShip::set_shiplength(double value) {
  
  shiplength_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.ShipLength)
}

// optional double ShipWidth = 5;
inline void hgSetShip::clear_shipwidth() {
  shipwidth_ = 0;
}
inline double hgSetShip::shipwidth() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipWidth)
  return shipwidth_;
}
inline void hgSetShip::set_shipwidth(double value) {
  
  shipwidth_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.ShipWidth)
}

inline const hgSetShip* hgSetShip::internal_default_instance() {
  return &hgSetShip_default_instance_.get();
}
// -------------------------------------------------------------------

// hgSetShipRepsone

inline const hgSetShipRepsone* hgSetShipRepsone::internal_default_instance() {
  return &hgSetShipRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgSetShip_2eproto__INCLUDED
