// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgSetShip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgSetShip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgSetShip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgSetShip_reflection_ = NULL;
const ::google::protobuf::Descriptor* hgSetShipRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgSetShipRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgSetShip_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgSetShip_2eproto() {
  protobuf_AddDesc_hgSetShip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgSetShip.proto");
  GOOGLE_CHECK(file != NULL);
  hgSetShip_descriptor_ = file->message_type(0);
  static const int hgSetShip_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, setship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, shiptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, shiplength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, shipwidth_),
  };
  hgSetShip_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgSetShip_descriptor_,
      hgSetShip::internal_default_instance(),
      hgSetShip_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgSetShip),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShip, _internal_metadata_));
  hgSetShipRepsone_descriptor_ = file->message_type(1);
  static const int hgSetShipRepsone_offsets_[1] = {
  };
  hgSetShipRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgSetShipRepsone_descriptor_,
      hgSetShipRepsone::internal_default_instance(),
      hgSetShipRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgSetShipRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgSetShipRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgSetShip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgSetShip_descriptor_, hgSetShip::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgSetShipRepsone_descriptor_, hgSetShipRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgSetShip_2eproto() {
  hgSetShip_default_instance_.Shutdown();
  delete hgSetShip_reflection_;
  hgSetShipRepsone_default_instance_.Shutdown();
  delete hgSetShipRepsone_reflection_;
}

void protobuf_InitDefaults_hgSetShip_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  hgSetShip_default_instance_.DefaultConstruct();
  hgSetShipRepsone_default_instance_.DefaultConstruct();
  hgSetShip_default_instance_.get_mutable()->InitAsDefaultInstance();
  hgSetShipRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgSetShip_2eproto_once_);
void protobuf_InitDefaults_hgSetShip_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgSetShip_2eproto_once_,
                 &protobuf_InitDefaults_hgSetShip_2eproto_impl);
}
void protobuf_AddDesc_hgSetShip_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgSetShip_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017hgSetShip.proto\"c\n\thgSetShip\022\014\n\004MMSI\030\001"
    " \001(\t\022\017\n\007SetShip\030\002 \001(\010\022\020\n\010ShipType\030\003 \001(\t\022"
    "\022\n\nShipLength\030\004 \001(\001\022\021\n\tShipWidth\030\005 \001(\001\"\022"
    "\n\020hgSetShipRepsoneb\006proto3", 146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgSetShip.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgSetShip_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgSetShip_2eproto_once_);
void protobuf_AddDesc_hgSetShip_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgSetShip_2eproto_once_,
                 &protobuf_AddDesc_hgSetShip_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgSetShip_2eproto {
  StaticDescriptorInitializer_hgSetShip_2eproto() {
    protobuf_AddDesc_hgSetShip_2eproto();
  }
} static_descriptor_initializer_hgSetShip_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgSetShip::kMMSIFieldNumber;
const int hgSetShip::kSetShipFieldNumber;
const int hgSetShip::kShipTypeFieldNumber;
const int hgSetShip::kShipLengthFieldNumber;
const int hgSetShip::kShipWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgSetShip::hgSetShip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgSetShip_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgSetShip)
}

void hgSetShip::InitAsDefaultInstance() {
}

hgSetShip::hgSetShip(const hgSetShip& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgSetShip)
}

void hgSetShip::SharedCtor() {
  mmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shiplength_, 0, reinterpret_cast<char*>(&setship_) -
    reinterpret_cast<char*>(&shiplength_) + sizeof(setship_));
  _cached_size_ = 0;
}

hgSetShip::~hgSetShip() {
  // @@protoc_insertion_point(destructor:hgSetShip)
  SharedDtor();
}

void hgSetShip::SharedDtor() {
  mmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void hgSetShip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgSetShip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgSetShip_descriptor_;
}

const hgSetShip& hgSetShip::default_instance() {
  protobuf_InitDefaults_hgSetShip_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgSetShip> hgSetShip_default_instance_;

hgSetShip* hgSetShip::New(::google::protobuf::Arena* arena) const {
  hgSetShip* n = new hgSetShip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgSetShip::Clear() {
// @@protoc_insertion_point(message_clear_start:hgSetShip)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgSetShip, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgSetShip*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shiplength_, setship_);
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool hgSetShip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgSetShip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string MMSI = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi().data(), this->mmsi().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgSetShip.MMSI"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SetShip;
        break;
      }

      // optional bool SetShip = 2;
      case 2: {
        if (tag == 16) {
         parse_SetShip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setship_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ShipType;
        break;
      }

      // optional string ShipType = 3;
      case 3: {
        if (tag == 26) {
         parse_ShipType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shiptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shiptype().data(), this->shiptype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgSetShip.ShipType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_ShipLength;
        break;
      }

      // optional double ShipLength = 4;
      case 4: {
        if (tag == 33) {
         parse_ShipLength:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shiplength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_ShipWidth;
        break;
      }

      // optional double ShipWidth = 5;
      case 5: {
        if (tag == 41) {
         parse_ShipWidth:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shipwidth_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgSetShip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgSetShip)
  return false;
#undef DO_
}

void hgSetShip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgSetShip)
  // optional string MMSI = 1;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgSetShip.MMSI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mmsi(), output);
  }

  // optional bool SetShip = 2;
  if (this->setship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->setship(), output);
  }

  // optional string ShipType = 3;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgSetShip.ShipType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->shiptype(), output);
  }

  // optional double ShipLength = 4;
  if (this->shiplength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->shiplength(), output);
  }

  // optional double ShipWidth = 5;
  if (this->shipwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->shipwidth(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgSetShip)
}

::google::protobuf::uint8* hgSetShip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgSetShip)
  // optional string MMSI = 1;
  if (this->mmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi().data(), this->mmsi().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgSetShip.MMSI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mmsi(), target);
  }

  // optional bool SetShip = 2;
  if (this->setship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->setship(), target);
  }

  // optional string ShipType = 3;
  if (this->shiptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shiptype().data(), this->shiptype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgSetShip.ShipType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->shiptype(), target);
  }

  // optional double ShipLength = 4;
  if (this->shiplength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->shiplength(), target);
  }

  // optional double ShipWidth = 5;
  if (this->shipwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->shipwidth(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgSetShip)
  return target;
}

size_t hgSetShip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgSetShip)
  size_t total_size = 0;

  // optional string MMSI = 1;
  if (this->mmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mmsi());
  }

  // optional bool SetShip = 2;
  if (this->setship() != 0) {
    total_size += 1 + 1;
  }

  // optional string ShipType = 3;
  if (this->shiptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shiptype());
  }

  // optional double ShipLength = 4;
  if (this->shiplength() != 0) {
    total_size += 1 + 8;
  }

  // optional double ShipWidth = 5;
  if (this->shipwidth() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgSetShip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgSetShip)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgSetShip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgSetShip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgSetShip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgSetShip)
    UnsafeMergeFrom(*source);
  }
}

void hgSetShip::MergeFrom(const hgSetShip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgSetShip)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgSetShip::UnsafeMergeFrom(const hgSetShip& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mmsi().size() > 0) {

    mmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mmsi_);
  }
  if (from.setship() != 0) {
    set_setship(from.setship());
  }
  if (from.shiptype().size() > 0) {

    shiptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shiptype_);
  }
  if (from.shiplength() != 0) {
    set_shiplength(from.shiplength());
  }
  if (from.shipwidth() != 0) {
    set_shipwidth(from.shipwidth());
  }
}

void hgSetShip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgSetShip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgSetShip::CopyFrom(const hgSetShip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgSetShip)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgSetShip::IsInitialized() const {

  return true;
}

void hgSetShip::Swap(hgSetShip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgSetShip::InternalSwap(hgSetShip* other) {
  mmsi_.Swap(&other->mmsi_);
  std::swap(setship_, other->setship_);
  shiptype_.Swap(&other->shiptype_);
  std::swap(shiplength_, other->shiplength_);
  std::swap(shipwidth_, other->shipwidth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgSetShip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgSetShip_descriptor_;
  metadata.reflection = hgSetShip_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgSetShip

// optional string MMSI = 1;
void hgSetShip::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgSetShip::mmsi() const {
  // @@protoc_insertion_point(field_get:hgSetShip.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgSetShip::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgSetShip.MMSI)
}
void hgSetShip::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgSetShip.MMSI)
}
void hgSetShip::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgSetShip.MMSI)
}
::std::string* hgSetShip::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgSetShip.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgSetShip::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgSetShip.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgSetShip::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgSetShip.MMSI)
}

// optional bool SetShip = 2;
void hgSetShip::clear_setship() {
  setship_ = false;
}
bool hgSetShip::setship() const {
  // @@protoc_insertion_point(field_get:hgSetShip.SetShip)
  return setship_;
}
void hgSetShip::set_setship(bool value) {
  
  setship_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.SetShip)
}

// optional string ShipType = 3;
void hgSetShip::clear_shiptype() {
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& hgSetShip::shiptype() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipType)
  return shiptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgSetShip::set_shiptype(const ::std::string& value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgSetShip.ShipType)
}
void hgSetShip::set_shiptype(const char* value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgSetShip.ShipType)
}
void hgSetShip::set_shiptype(const char* value, size_t size) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgSetShip.ShipType)
}
::std::string* hgSetShip::mutable_shiptype() {
  
  // @@protoc_insertion_point(field_mutable:hgSetShip.ShipType)
  return shiptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* hgSetShip::release_shiptype() {
  // @@protoc_insertion_point(field_release:hgSetShip.ShipType)
  
  return shiptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void hgSetShip::set_allocated_shiptype(::std::string* shiptype) {
  if (shiptype != NULL) {
    
  } else {
    
  }
  shiptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shiptype);
  // @@protoc_insertion_point(field_set_allocated:hgSetShip.ShipType)
}

// optional double ShipLength = 4;
void hgSetShip::clear_shiplength() {
  shiplength_ = 0;
}
double hgSetShip::shiplength() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipLength)
  return shiplength_;
}
void hgSetShip::set_shiplength(double value) {
  
  shiplength_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.ShipLength)
}

// optional double ShipWidth = 5;
void hgSetShip::clear_shipwidth() {
  shipwidth_ = 0;
}
double hgSetShip::shipwidth() const {
  // @@protoc_insertion_point(field_get:hgSetShip.ShipWidth)
  return shipwidth_;
}
void hgSetShip::set_shipwidth(double value) {
  
  shipwidth_ = value;
  // @@protoc_insertion_point(field_set:hgSetShip.ShipWidth)
}

inline const hgSetShip* hgSetShip::internal_default_instance() {
  return &hgSetShip_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgSetShipRepsone::hgSetShipRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgSetShip_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgSetShipRepsone)
}

void hgSetShipRepsone::InitAsDefaultInstance() {
}

hgSetShipRepsone::hgSetShipRepsone(const hgSetShipRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgSetShipRepsone)
}

void hgSetShipRepsone::SharedCtor() {
  _cached_size_ = 0;
}

hgSetShipRepsone::~hgSetShipRepsone() {
  // @@protoc_insertion_point(destructor:hgSetShipRepsone)
  SharedDtor();
}

void hgSetShipRepsone::SharedDtor() {
}

void hgSetShipRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgSetShipRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgSetShipRepsone_descriptor_;
}

const hgSetShipRepsone& hgSetShipRepsone::default_instance() {
  protobuf_InitDefaults_hgSetShip_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgSetShipRepsone> hgSetShipRepsone_default_instance_;

hgSetShipRepsone* hgSetShipRepsone::New(::google::protobuf::Arena* arena) const {
  hgSetShipRepsone* n = new hgSetShipRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgSetShipRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:hgSetShipRepsone)
}

bool hgSetShipRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgSetShipRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:hgSetShipRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgSetShipRepsone)
  return false;
#undef DO_
}

void hgSetShipRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgSetShipRepsone)
  // @@protoc_insertion_point(serialize_end:hgSetShipRepsone)
}

::google::protobuf::uint8* hgSetShipRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgSetShipRepsone)
  // @@protoc_insertion_point(serialize_to_array_end:hgSetShipRepsone)
  return target;
}

size_t hgSetShipRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgSetShipRepsone)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgSetShipRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgSetShipRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgSetShipRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgSetShipRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgSetShipRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgSetShipRepsone)
    UnsafeMergeFrom(*source);
  }
}

void hgSetShipRepsone::MergeFrom(const hgSetShipRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgSetShipRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgSetShipRepsone::UnsafeMergeFrom(const hgSetShipRepsone& from) {
  GOOGLE_DCHECK(&from != this);
}

void hgSetShipRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgSetShipRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgSetShipRepsone::CopyFrom(const hgSetShipRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgSetShipRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgSetShipRepsone::IsInitialized() const {

  return true;
}

void hgSetShipRepsone::Swap(hgSetShipRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgSetShipRepsone::InternalSwap(hgSetShipRepsone* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgSetShipRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgSetShipRepsone_descriptor_;
  metadata.reflection = hgSetShipRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgSetShipRepsone

inline const hgSetShipRepsone* hgSetShipRepsone::internal_default_instance() {
  return &hgSetShipRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
