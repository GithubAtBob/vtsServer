// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgFuseSet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgFuseSet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgFuseSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgFuseSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgFuseSet_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgFuseSet_2eproto() {
  protobuf_AddDesc_hgFuseSet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgFuseSet.proto");
  GOOGLE_CHECK(file != NULL);
  hgFuseSet_descriptor_ = file->message_type(0);
  static const int hgFuseSet_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, hdg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, sog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, fusecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, fusedis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, fusesog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, fusecog_),
  };
  hgFuseSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgFuseSet_descriptor_,
      hgFuseSet::internal_default_instance(),
      hgFuseSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgFuseSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgFuseSet, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgFuseSet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgFuseSet_descriptor_, hgFuseSet::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgFuseSet_2eproto() {
  hgFuseSet_default_instance_.Shutdown();
  delete hgFuseSet_reflection_;
}

void protobuf_InitDefaults_hgFuseSet_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  hgFuseSet_default_instance_.DefaultConstruct();
  hgFuseSet_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgFuseSet_2eproto_once_);
void protobuf_InitDefaults_hgFuseSet_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgFuseSet_2eproto_once_,
                 &protobuf_InitDefaults_hgFuseSet_2eproto_impl);
}
void protobuf_AddDesc_hgFuseSet_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgFuseSet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017hgFuseSet.proto\"x\n\thgFuseSet\022\013\n\003HDG\030\001 "
    "\001(\001\022\013\n\003SOG\030\002 \001(\001\022\013\n\003Dis\030\003 \001(\001\022\021\n\tFuseCou"
    "nt\030\004 \001(\005\022\017\n\007FuseDis\030\005 \001(\005\022\017\n\007FuseSog\030\006 \001"
    "(\005\022\017\n\007FuseCog\030\007 \001(\005b\006proto3", 147);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgFuseSet.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgFuseSet_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgFuseSet_2eproto_once_);
void protobuf_AddDesc_hgFuseSet_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgFuseSet_2eproto_once_,
                 &protobuf_AddDesc_hgFuseSet_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgFuseSet_2eproto {
  StaticDescriptorInitializer_hgFuseSet_2eproto() {
    protobuf_AddDesc_hgFuseSet_2eproto();
  }
} static_descriptor_initializer_hgFuseSet_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgFuseSet::kHDGFieldNumber;
const int hgFuseSet::kSOGFieldNumber;
const int hgFuseSet::kDisFieldNumber;
const int hgFuseSet::kFuseCountFieldNumber;
const int hgFuseSet::kFuseDisFieldNumber;
const int hgFuseSet::kFuseSogFieldNumber;
const int hgFuseSet::kFuseCogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgFuseSet::hgFuseSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgFuseSet_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgFuseSet)
}

void hgFuseSet::InitAsDefaultInstance() {
}

hgFuseSet::hgFuseSet(const hgFuseSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgFuseSet)
}

void hgFuseSet::SharedCtor() {
  ::memset(&hdg_, 0, reinterpret_cast<char*>(&fusecog_) -
    reinterpret_cast<char*>(&hdg_) + sizeof(fusecog_));
  _cached_size_ = 0;
}

hgFuseSet::~hgFuseSet() {
  // @@protoc_insertion_point(destructor:hgFuseSet)
  SharedDtor();
}

void hgFuseSet::SharedDtor() {
}

void hgFuseSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgFuseSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgFuseSet_descriptor_;
}

const hgFuseSet& hgFuseSet::default_instance() {
  protobuf_InitDefaults_hgFuseSet_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgFuseSet> hgFuseSet_default_instance_;

hgFuseSet* hgFuseSet::New(::google::protobuf::Arena* arena) const {
  hgFuseSet* n = new hgFuseSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgFuseSet::Clear() {
// @@protoc_insertion_point(message_clear_start:hgFuseSet)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(hgFuseSet, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<hgFuseSet*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(hdg_, fusecog_);

#undef ZR_HELPER_
#undef ZR_

}

bool hgFuseSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgFuseSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double HDG = 1;
      case 1: {
        if (tag == 9) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_SOG;
        break;
      }

      // optional double SOG = 2;
      case 2: {
        if (tag == 17) {
         parse_SOG:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_Dis;
        break;
      }

      // optional double Dis = 3;
      case 3: {
        if (tag == 25) {
         parse_Dis:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dis_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FuseCount;
        break;
      }

      // optional int32 FuseCount = 4;
      case 4: {
        if (tag == 32) {
         parse_FuseCount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fusecount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_FuseDis;
        break;
      }

      // optional int32 FuseDis = 5;
      case 5: {
        if (tag == 40) {
         parse_FuseDis:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fusedis_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_FuseSog;
        break;
      }

      // optional int32 FuseSog = 6;
      case 6: {
        if (tag == 48) {
         parse_FuseSog:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fusesog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_FuseCog;
        break;
      }

      // optional int32 FuseCog = 7;
      case 7: {
        if (tag == 56) {
         parse_FuseCog:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fusecog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgFuseSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgFuseSet)
  return false;
#undef DO_
}

void hgFuseSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgFuseSet)
  // optional double HDG = 1;
  if (this->hdg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->hdg(), output);
  }

  // optional double SOG = 2;
  if (this->sog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->sog(), output);
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dis(), output);
  }

  // optional int32 FuseCount = 4;
  if (this->fusecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fusecount(), output);
  }

  // optional int32 FuseDis = 5;
  if (this->fusedis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fusedis(), output);
  }

  // optional int32 FuseSog = 6;
  if (this->fusesog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fusesog(), output);
  }

  // optional int32 FuseCog = 7;
  if (this->fusecog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fusecog(), output);
  }

  // @@protoc_insertion_point(serialize_end:hgFuseSet)
}

::google::protobuf::uint8* hgFuseSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgFuseSet)
  // optional double HDG = 1;
  if (this->hdg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->hdg(), target);
  }

  // optional double SOG = 2;
  if (this->sog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->sog(), target);
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dis(), target);
  }

  // optional int32 FuseCount = 4;
  if (this->fusecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fusecount(), target);
  }

  // optional int32 FuseDis = 5;
  if (this->fusedis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fusedis(), target);
  }

  // optional int32 FuseSog = 6;
  if (this->fusesog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fusesog(), target);
  }

  // optional int32 FuseCog = 7;
  if (this->fusecog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fusecog(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgFuseSet)
  return target;
}

size_t hgFuseSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgFuseSet)
  size_t total_size = 0;

  // optional double HDG = 1;
  if (this->hdg() != 0) {
    total_size += 1 + 8;
  }

  // optional double SOG = 2;
  if (this->sog() != 0) {
    total_size += 1 + 8;
  }

  // optional double Dis = 3;
  if (this->dis() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 FuseCount = 4;
  if (this->fusecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fusecount());
  }

  // optional int32 FuseDis = 5;
  if (this->fusedis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fusedis());
  }

  // optional int32 FuseSog = 6;
  if (this->fusesog() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fusesog());
  }

  // optional int32 FuseCog = 7;
  if (this->fusecog() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fusecog());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgFuseSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgFuseSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgFuseSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgFuseSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgFuseSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgFuseSet)
    UnsafeMergeFrom(*source);
  }
}

void hgFuseSet::MergeFrom(const hgFuseSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgFuseSet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgFuseSet::UnsafeMergeFrom(const hgFuseSet& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.hdg() != 0) {
    set_hdg(from.hdg());
  }
  if (from.sog() != 0) {
    set_sog(from.sog());
  }
  if (from.dis() != 0) {
    set_dis(from.dis());
  }
  if (from.fusecount() != 0) {
    set_fusecount(from.fusecount());
  }
  if (from.fusedis() != 0) {
    set_fusedis(from.fusedis());
  }
  if (from.fusesog() != 0) {
    set_fusesog(from.fusesog());
  }
  if (from.fusecog() != 0) {
    set_fusecog(from.fusecog());
  }
}

void hgFuseSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgFuseSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgFuseSet::CopyFrom(const hgFuseSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgFuseSet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgFuseSet::IsInitialized() const {

  return true;
}

void hgFuseSet::Swap(hgFuseSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgFuseSet::InternalSwap(hgFuseSet* other) {
  std::swap(hdg_, other->hdg_);
  std::swap(sog_, other->sog_);
  std::swap(dis_, other->dis_);
  std::swap(fusecount_, other->fusecount_);
  std::swap(fusedis_, other->fusedis_);
  std::swap(fusesog_, other->fusesog_);
  std::swap(fusecog_, other->fusecog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgFuseSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgFuseSet_descriptor_;
  metadata.reflection = hgFuseSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgFuseSet

// optional double HDG = 1;
void hgFuseSet::clear_hdg() {
  hdg_ = 0;
}
double hgFuseSet::hdg() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.HDG)
  return hdg_;
}
void hgFuseSet::set_hdg(double value) {
  
  hdg_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.HDG)
}

// optional double SOG = 2;
void hgFuseSet::clear_sog() {
  sog_ = 0;
}
double hgFuseSet::sog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.SOG)
  return sog_;
}
void hgFuseSet::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.SOG)
}

// optional double Dis = 3;
void hgFuseSet::clear_dis() {
  dis_ = 0;
}
double hgFuseSet::dis() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.Dis)
  return dis_;
}
void hgFuseSet::set_dis(double value) {
  
  dis_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.Dis)
}

// optional int32 FuseCount = 4;
void hgFuseSet::clear_fusecount() {
  fusecount_ = 0;
}
::google::protobuf::int32 hgFuseSet::fusecount() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseCount)
  return fusecount_;
}
void hgFuseSet::set_fusecount(::google::protobuf::int32 value) {
  
  fusecount_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseCount)
}

// optional int32 FuseDis = 5;
void hgFuseSet::clear_fusedis() {
  fusedis_ = 0;
}
::google::protobuf::int32 hgFuseSet::fusedis() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseDis)
  return fusedis_;
}
void hgFuseSet::set_fusedis(::google::protobuf::int32 value) {
  
  fusedis_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseDis)
}

// optional int32 FuseSog = 6;
void hgFuseSet::clear_fusesog() {
  fusesog_ = 0;
}
::google::protobuf::int32 hgFuseSet::fusesog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseSog)
  return fusesog_;
}
void hgFuseSet::set_fusesog(::google::protobuf::int32 value) {
  
  fusesog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseSog)
}

// optional int32 FuseCog = 7;
void hgFuseSet::clear_fusecog() {
  fusecog_ = 0;
}
::google::protobuf::int32 hgFuseSet::fusecog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseCog)
  return fusecog_;
}
void hgFuseSet::set_fusecog(::google::protobuf::int32 value) {
  
  fusecog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseCog)
}

inline const hgFuseSet* hgFuseSet::internal_default_instance() {
  return &hgFuseSet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
