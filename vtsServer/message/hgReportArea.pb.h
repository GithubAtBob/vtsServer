// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgReportArea.proto

#ifndef PROTOBUF_hgReportArea_2eproto__INCLUDED
#define PROTOBUF_hgReportArea_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgReportArea_2eproto();
void protobuf_InitDefaults_hgReportArea_2eproto();
void protobuf_AssignDesc_hgReportArea_2eproto();
void protobuf_ShutdownFile_hgReportArea_2eproto();

class hgAreaData;
class hgReportArea;
class hgReportAreaRepsone;

// ===================================================================

class hgAreaData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAreaData) */ {
 public:
  hgAreaData();
  virtual ~hgAreaData();

  hgAreaData(const hgAreaData& from);

  inline hgAreaData& operator=(const hgAreaData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAreaData& default_instance();

  static const hgAreaData* internal_default_instance();

  void Swap(hgAreaData* other);

  // implements Message ----------------------------------------------

  inline hgAreaData* New() const { return New(NULL); }

  hgAreaData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAreaData& from);
  void MergeFrom(const hgAreaData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAreaData* other);
  void UnsafeMergeFrom(const hgAreaData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hgAreaData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgReportArea_2eproto_impl();
  friend void  protobuf_AddDesc_hgReportArea_2eproto_impl();
  friend void protobuf_AssignDesc_hgReportArea_2eproto();
  friend void protobuf_ShutdownFile_hgReportArea_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAreaData> hgAreaData_default_instance_;

// -------------------------------------------------------------------

class hgReportArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgReportArea) */ {
 public:
  hgReportArea();
  virtual ~hgReportArea();

  hgReportArea(const hgReportArea& from);

  inline hgReportArea& operator=(const hgReportArea& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgReportArea& default_instance();

  static const hgReportArea* internal_default_instance();

  void Swap(hgReportArea* other);

  // implements Message ----------------------------------------------

  inline hgReportArea* New() const { return New(NULL); }

  hgReportArea* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgReportArea& from);
  void MergeFrom(const hgReportArea& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgReportArea* other);
  void UnsafeMergeFrom(const hgReportArea& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MMSI = 1;
  void clear_mmsi();
  static const int kMMSIFieldNumber = 1;
  const ::std::string& mmsi() const;
  void set_mmsi(const ::std::string& value);
  void set_mmsi(const char* value);
  void set_mmsi(const char* value, size_t size);
  ::std::string* mutable_mmsi();
  ::std::string* release_mmsi();
  void set_allocated_mmsi(::std::string* mmsi);

  // optional bool ReportArea = 2;
  void clear_reportarea();
  static const int kReportAreaFieldNumber = 2;
  bool reportarea() const;
  void set_reportarea(bool value);

  // optional bool Pattern = 3;
  void clear_pattern();
  static const int kPatternFieldNumber = 3;
  bool pattern() const;
  void set_pattern(bool value);

  // optional bool AllChecked = 4;
  void clear_allchecked();
  static const int kAllCheckedFieldNumber = 4;
  bool allchecked() const;
  void set_allchecked(bool value);

  // repeated .hgAreaData AreaData = 5;
  int areadata_size() const;
  void clear_areadata();
  static const int kAreaDataFieldNumber = 5;
  const ::hgAreaData& areadata(int index) const;
  ::hgAreaData* mutable_areadata(int index);
  ::hgAreaData* add_areadata();
  ::google::protobuf::RepeatedPtrField< ::hgAreaData >*
      mutable_areadata();
  const ::google::protobuf::RepeatedPtrField< ::hgAreaData >&
      areadata() const;

  // optional int64 EarlistTime = 6;
  void clear_earlisttime();
  static const int kEarlistTimeFieldNumber = 6;
  ::google::protobuf::int64 earlisttime() const;
  void set_earlisttime(::google::protobuf::int64 value);

  // optional int64 LatestTime = 7;
  void clear_latesttime();
  static const int kLatestTimeFieldNumber = 7;
  ::google::protobuf::int64 latesttime() const;
  void set_latesttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hgReportArea)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hgAreaData > areadata_;
  ::google::protobuf::internal::ArenaStringPtr mmsi_;
  ::google::protobuf::int64 earlisttime_;
  ::google::protobuf::int64 latesttime_;
  bool reportarea_;
  bool pattern_;
  bool allchecked_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgReportArea_2eproto_impl();
  friend void  protobuf_AddDesc_hgReportArea_2eproto_impl();
  friend void protobuf_AssignDesc_hgReportArea_2eproto();
  friend void protobuf_ShutdownFile_hgReportArea_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgReportArea> hgReportArea_default_instance_;

// -------------------------------------------------------------------

class hgReportAreaRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgReportAreaRepsone) */ {
 public:
  hgReportAreaRepsone();
  virtual ~hgReportAreaRepsone();

  hgReportAreaRepsone(const hgReportAreaRepsone& from);

  inline hgReportAreaRepsone& operator=(const hgReportAreaRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgReportAreaRepsone& default_instance();

  static const hgReportAreaRepsone* internal_default_instance();

  void Swap(hgReportAreaRepsone* other);

  // implements Message ----------------------------------------------

  inline hgReportAreaRepsone* New() const { return New(NULL); }

  hgReportAreaRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgReportAreaRepsone& from);
  void MergeFrom(const hgReportAreaRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgReportAreaRepsone* other);
  void UnsafeMergeFrom(const hgReportAreaRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hgReportAreaRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgReportArea_2eproto_impl();
  friend void  protobuf_AddDesc_hgReportArea_2eproto_impl();
  friend void protobuf_AssignDesc_hgReportArea_2eproto();
  friend void protobuf_ShutdownFile_hgReportArea_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgReportAreaRepsone> hgReportAreaRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAreaData

// optional string ID = 1;
inline void hgAreaData::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAreaData::id() const {
  // @@protoc_insertion_point(field_get:hgAreaData.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAreaData::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAreaData.ID)
}
inline void hgAreaData::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAreaData.ID)
}
inline void hgAreaData::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAreaData.ID)
}
inline ::std::string* hgAreaData::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgAreaData.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAreaData::release_id() {
  // @@protoc_insertion_point(field_release:hgAreaData.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAreaData::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgAreaData.ID)
}

// optional int32 type = 2;
inline void hgAreaData::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 hgAreaData::type() const {
  // @@protoc_insertion_point(field_get:hgAreaData.type)
  return type_;
}
inline void hgAreaData::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hgAreaData.type)
}

inline const hgAreaData* hgAreaData::internal_default_instance() {
  return &hgAreaData_default_instance_.get();
}
// -------------------------------------------------------------------

// hgReportArea

// optional string MMSI = 1;
inline void hgReportArea::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgReportArea::mmsi() const {
  // @@protoc_insertion_point(field_get:hgReportArea.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgReportArea::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgReportArea.MMSI)
}
inline void hgReportArea::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgReportArea.MMSI)
}
inline void hgReportArea::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgReportArea.MMSI)
}
inline ::std::string* hgReportArea::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgReportArea.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgReportArea::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgReportArea.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgReportArea::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgReportArea.MMSI)
}

// optional bool ReportArea = 2;
inline void hgReportArea::clear_reportarea() {
  reportarea_ = false;
}
inline bool hgReportArea::reportarea() const {
  // @@protoc_insertion_point(field_get:hgReportArea.ReportArea)
  return reportarea_;
}
inline void hgReportArea::set_reportarea(bool value) {
  
  reportarea_ = value;
  // @@protoc_insertion_point(field_set:hgReportArea.ReportArea)
}

// optional bool Pattern = 3;
inline void hgReportArea::clear_pattern() {
  pattern_ = false;
}
inline bool hgReportArea::pattern() const {
  // @@protoc_insertion_point(field_get:hgReportArea.Pattern)
  return pattern_;
}
inline void hgReportArea::set_pattern(bool value) {
  
  pattern_ = value;
  // @@protoc_insertion_point(field_set:hgReportArea.Pattern)
}

// optional bool AllChecked = 4;
inline void hgReportArea::clear_allchecked() {
  allchecked_ = false;
}
inline bool hgReportArea::allchecked() const {
  // @@protoc_insertion_point(field_get:hgReportArea.AllChecked)
  return allchecked_;
}
inline void hgReportArea::set_allchecked(bool value) {
  
  allchecked_ = value;
  // @@protoc_insertion_point(field_set:hgReportArea.AllChecked)
}

// repeated .hgAreaData AreaData = 5;
inline int hgReportArea::areadata_size() const {
  return areadata_.size();
}
inline void hgReportArea::clear_areadata() {
  areadata_.Clear();
}
inline const ::hgAreaData& hgReportArea::areadata(int index) const {
  // @@protoc_insertion_point(field_get:hgReportArea.AreaData)
  return areadata_.Get(index);
}
inline ::hgAreaData* hgReportArea::mutable_areadata(int index) {
  // @@protoc_insertion_point(field_mutable:hgReportArea.AreaData)
  return areadata_.Mutable(index);
}
inline ::hgAreaData* hgReportArea::add_areadata() {
  // @@protoc_insertion_point(field_add:hgReportArea.AreaData)
  return areadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hgAreaData >*
hgReportArea::mutable_areadata() {
  // @@protoc_insertion_point(field_mutable_list:hgReportArea.AreaData)
  return &areadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hgAreaData >&
hgReportArea::areadata() const {
  // @@protoc_insertion_point(field_list:hgReportArea.AreaData)
  return areadata_;
}

// optional int64 EarlistTime = 6;
inline void hgReportArea::clear_earlisttime() {
  earlisttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgReportArea::earlisttime() const {
  // @@protoc_insertion_point(field_get:hgReportArea.EarlistTime)
  return earlisttime_;
}
inline void hgReportArea::set_earlisttime(::google::protobuf::int64 value) {
  
  earlisttime_ = value;
  // @@protoc_insertion_point(field_set:hgReportArea.EarlistTime)
}

// optional int64 LatestTime = 7;
inline void hgReportArea::clear_latesttime() {
  latesttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgReportArea::latesttime() const {
  // @@protoc_insertion_point(field_get:hgReportArea.LatestTime)
  return latesttime_;
}
inline void hgReportArea::set_latesttime(::google::protobuf::int64 value) {
  
  latesttime_ = value;
  // @@protoc_insertion_point(field_set:hgReportArea.LatestTime)
}

inline const hgReportArea* hgReportArea::internal_default_instance() {
  return &hgReportArea_default_instance_.get();
}
// -------------------------------------------------------------------

// hgReportAreaRepsone

inline const hgReportAreaRepsone* hgReportAreaRepsone::internal_default_instance() {
  return &hgReportAreaRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgReportArea_2eproto__INCLUDED
