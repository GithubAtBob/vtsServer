// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgWarningType.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgWarningType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* hgWarningType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* hgWarningPriority_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgWarningType_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgWarningType_2eproto() {
  protobuf_AddDesc_hgWarningType_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgWarningType.proto");
  GOOGLE_CHECK(file != NULL);
  hgWarningType_descriptor_ = file->enum_type(0);
  hgWarningPriority_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgWarningType_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_hgWarningType_2eproto() {
}

void protobuf_InitDefaults_hgWarningType_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgWarningType_2eproto_once_);
void protobuf_InitDefaults_hgWarningType_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgWarningType_2eproto_once_,
                 &protobuf_InitDefaults_hgWarningType_2eproto_impl);
}
void protobuf_AddDesc_hgWarningType_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgWarningType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023hgWarningType.proto*\323\003\n\rhgWarningType\022"
    "\017\n\013Meaningless\020\000\022\024\n\020OverallCollision\020\001\022\024"
    "\n\020PolygonCollision\020\002\022\023\n\017SectorCollision\020"
    "\003\022\023\n\017CircleCollision\020\004\022\022\n\016AnchorAreaWarn"
    "\020\005\022\020\n\014ClubbingWarn\020\006\022\020\n\014DraggingWarn\020\007\022\024"
    "\n\020AnchorReservWarn\020\010\022\022\n\016BerthWatchWarn\020\t"
    "\022\026\n\022CollisionWatchWarn\020\n\022\023\n\017DomainWatchW"
    "arn\020\013\022\023\n\017GroundWatchWarn\020\014\022\017\n\013ChannelWar"
    "n\020\r\022\022\n\016ReportAreaWarn\020\016\022\022\n\016ReportTimeWar"
    "n\020\017\022\017\n\013EarlistWarn\020\020\022\016\n\nLatestWarn\020\021\022\020\n\014"
    "MinSpeedWarn\020\022\022\020\n\014MaxSpeedWarn\020\023\022\022\n\016Turn"
    "CircleWarn\020\024\022\023\n\017MovementEndWarn\020\025\022\020\n\014Ear"
    "lyWarning\020\026*0\n\021hgWarningPriority\022\n\n\006NoRi"
    "sk\020\000\022\017\n\013PriorityRed\020\001b\006proto3", 549);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgWarningType.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgWarningType_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgWarningType_2eproto_once_);
void protobuf_AddDesc_hgWarningType_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgWarningType_2eproto_once_,
                 &protobuf_AddDesc_hgWarningType_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgWarningType_2eproto {
  StaticDescriptorInitializer_hgWarningType_2eproto() {
    protobuf_AddDesc_hgWarningType_2eproto();
  }
} static_descriptor_initializer_hgWarningType_2eproto_;
const ::google::protobuf::EnumDescriptor* hgWarningType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgWarningType_descriptor_;
}
bool hgWarningType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* hgWarningPriority_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgWarningPriority_descriptor_;
}
bool hgWarningPriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
