// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgFuseSet.proto

#ifndef PROTOBUF_hgFuseSet_2eproto__INCLUDED
#define PROTOBUF_hgFuseSet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgFuseSet_2eproto();
void protobuf_InitDefaults_hgFuseSet_2eproto();
void protobuf_AssignDesc_hgFuseSet_2eproto();
void protobuf_ShutdownFile_hgFuseSet_2eproto();

class hgFuseSet;

// ===================================================================

class hgFuseSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgFuseSet) */ {
 public:
  hgFuseSet();
  virtual ~hgFuseSet();

  hgFuseSet(const hgFuseSet& from);

  inline hgFuseSet& operator=(const hgFuseSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgFuseSet& default_instance();

  static const hgFuseSet* internal_default_instance();

  void Swap(hgFuseSet* other);

  // implements Message ----------------------------------------------

  inline hgFuseSet* New() const { return New(NULL); }

  hgFuseSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgFuseSet& from);
  void MergeFrom(const hgFuseSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgFuseSet* other);
  void UnsafeMergeFrom(const hgFuseSet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double HDG = 1;
  void clear_hdg();
  static const int kHDGFieldNumber = 1;
  double hdg() const;
  void set_hdg(double value);

  // optional double SOG = 2;
  void clear_sog();
  static const int kSOGFieldNumber = 2;
  double sog() const;
  void set_sog(double value);

  // optional double Dis = 3;
  void clear_dis();
  static const int kDisFieldNumber = 3;
  double dis() const;
  void set_dis(double value);

  // optional int32 FuseCount = 4;
  void clear_fusecount();
  static const int kFuseCountFieldNumber = 4;
  ::google::protobuf::int32 fusecount() const;
  void set_fusecount(::google::protobuf::int32 value);

  // optional int32 FuseDis = 5;
  void clear_fusedis();
  static const int kFuseDisFieldNumber = 5;
  ::google::protobuf::int32 fusedis() const;
  void set_fusedis(::google::protobuf::int32 value);

  // optional int32 FuseSog = 6;
  void clear_fusesog();
  static const int kFuseSogFieldNumber = 6;
  ::google::protobuf::int32 fusesog() const;
  void set_fusesog(::google::protobuf::int32 value);

  // optional int32 FuseCog = 7;
  void clear_fusecog();
  static const int kFuseCogFieldNumber = 7;
  ::google::protobuf::int32 fusecog() const;
  void set_fusecog(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hgFuseSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double hdg_;
  double sog_;
  double dis_;
  ::google::protobuf::int32 fusecount_;
  ::google::protobuf::int32 fusedis_;
  ::google::protobuf::int32 fusesog_;
  ::google::protobuf::int32 fusecog_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgFuseSet_2eproto_impl();
  friend void  protobuf_AddDesc_hgFuseSet_2eproto_impl();
  friend void protobuf_AssignDesc_hgFuseSet_2eproto();
  friend void protobuf_ShutdownFile_hgFuseSet_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgFuseSet> hgFuseSet_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgFuseSet

// optional double HDG = 1;
inline void hgFuseSet::clear_hdg() {
  hdg_ = 0;
}
inline double hgFuseSet::hdg() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.HDG)
  return hdg_;
}
inline void hgFuseSet::set_hdg(double value) {
  
  hdg_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.HDG)
}

// optional double SOG = 2;
inline void hgFuseSet::clear_sog() {
  sog_ = 0;
}
inline double hgFuseSet::sog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.SOG)
  return sog_;
}
inline void hgFuseSet::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.SOG)
}

// optional double Dis = 3;
inline void hgFuseSet::clear_dis() {
  dis_ = 0;
}
inline double hgFuseSet::dis() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.Dis)
  return dis_;
}
inline void hgFuseSet::set_dis(double value) {
  
  dis_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.Dis)
}

// optional int32 FuseCount = 4;
inline void hgFuseSet::clear_fusecount() {
  fusecount_ = 0;
}
inline ::google::protobuf::int32 hgFuseSet::fusecount() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseCount)
  return fusecount_;
}
inline void hgFuseSet::set_fusecount(::google::protobuf::int32 value) {
  
  fusecount_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseCount)
}

// optional int32 FuseDis = 5;
inline void hgFuseSet::clear_fusedis() {
  fusedis_ = 0;
}
inline ::google::protobuf::int32 hgFuseSet::fusedis() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseDis)
  return fusedis_;
}
inline void hgFuseSet::set_fusedis(::google::protobuf::int32 value) {
  
  fusedis_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseDis)
}

// optional int32 FuseSog = 6;
inline void hgFuseSet::clear_fusesog() {
  fusesog_ = 0;
}
inline ::google::protobuf::int32 hgFuseSet::fusesog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseSog)
  return fusesog_;
}
inline void hgFuseSet::set_fusesog(::google::protobuf::int32 value) {
  
  fusesog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseSog)
}

// optional int32 FuseCog = 7;
inline void hgFuseSet::clear_fusecog() {
  fusecog_ = 0;
}
inline ::google::protobuf::int32 hgFuseSet::fusecog() const {
  // @@protoc_insertion_point(field_get:hgFuseSet.FuseCog)
  return fusecog_;
}
inline void hgFuseSet::set_fusecog(::google::protobuf::int32 value) {
  
  fusecog_ = value;
  // @@protoc_insertion_point(field_set:hgFuseSet.FuseCog)
}

inline const hgFuseSet* hgFuseSet::internal_default_instance() {
  return &hgFuseSet_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgFuseSet_2eproto__INCLUDED
