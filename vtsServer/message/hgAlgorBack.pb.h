// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlgorBack.proto

#ifndef PROTOBUF_hgAlgorBack_2eproto__INCLUDED
#define PROTOBUF_hgAlgorBack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "hgAisMessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAlgorBack_2eproto();
void protobuf_InitDefaults_hgAlgorBack_2eproto();
void protobuf_AssignDesc_hgAlgorBack_2eproto();
void protobuf_ShutdownFile_hgAlgorBack_2eproto();

class hgAlgorBackRepsone;
class hgAlgorBackRequest;

// ===================================================================

class hgAlgorBackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAlgorBackRequest) */ {
 public:
  hgAlgorBackRequest();
  virtual ~hgAlgorBackRequest();

  hgAlgorBackRequest(const hgAlgorBackRequest& from);

  inline hgAlgorBackRequest& operator=(const hgAlgorBackRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAlgorBackRequest& default_instance();

  static const hgAlgorBackRequest* internal_default_instance();

  void Swap(hgAlgorBackRequest* other);

  // implements Message ----------------------------------------------

  inline hgAlgorBackRequest* New() const { return New(NULL); }

  hgAlgorBackRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAlgorBackRequest& from);
  void MergeFrom(const hgAlgorBackRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAlgorBackRequest* other);
  void UnsafeMergeFrom(const hgAlgorBackRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // repeated int64 begintime = 2;
  int begintime_size() const;
  void clear_begintime();
  static const int kBegintimeFieldNumber = 2;
  ::google::protobuf::int64 begintime(int index) const;
  void set_begintime(int index, ::google::protobuf::int64 value);
  void add_begintime(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      begintime() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_begintime();

  // repeated int64 endtime = 3;
  int endtime_size() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 3;
  ::google::protobuf::int64 endtime(int index) const;
  void set_endtime(int index, ::google::protobuf::int64 value);
  void add_endtime(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      endtime() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_endtime();

  // optional string ownMMSI = 4;
  void clear_ownmmsi();
  static const int kOwnMMSIFieldNumber = 4;
  const ::std::string& ownmmsi() const;
  void set_ownmmsi(const ::std::string& value);
  void set_ownmmsi(const char* value);
  void set_ownmmsi(const char* value, size_t size);
  ::std::string* mutable_ownmmsi();
  ::std::string* release_ownmmsi();
  void set_allocated_ownmmsi(::std::string* ownmmsi);

  // optional string ownRadarID = 5;
  void clear_ownradarid();
  static const int kOwnRadarIDFieldNumber = 5;
  const ::std::string& ownradarid() const;
  void set_ownradarid(const ::std::string& value);
  void set_ownradarid(const char* value);
  void set_ownradarid(const char* value, size_t size);
  ::std::string* mutable_ownradarid();
  ::std::string* release_ownradarid();
  void set_allocated_ownradarid(::std::string* ownradarid);

  // optional string targetMMSI = 6;
  void clear_targetmmsi();
  static const int kTargetMMSIFieldNumber = 6;
  const ::std::string& targetmmsi() const;
  void set_targetmmsi(const ::std::string& value);
  void set_targetmmsi(const char* value);
  void set_targetmmsi(const char* value, size_t size);
  ::std::string* mutable_targetmmsi();
  ::std::string* release_targetmmsi();
  void set_allocated_targetmmsi(::std::string* targetmmsi);

  // optional string targetRadarID = 7;
  void clear_targetradarid();
  static const int kTargetRadarIDFieldNumber = 7;
  const ::std::string& targetradarid() const;
  void set_targetradarid(const ::std::string& value);
  void set_targetradarid(const char* value);
  void set_targetradarid(const char* value, size_t size);
  ::std::string* mutable_targetradarid();
  ::std::string* release_targetradarid();
  void set_allocated_targetradarid(::std::string* targetradarid);

  // @@protoc_insertion_point(class_scope:hgAlgorBackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > begintime_;
  mutable int _begintime_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > endtime_;
  mutable int _endtime_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr ownmmsi_;
  ::google::protobuf::internal::ArenaStringPtr ownradarid_;
  ::google::protobuf::internal::ArenaStringPtr targetmmsi_;
  ::google::protobuf::internal::ArenaStringPtr targetradarid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAlgorBack_2eproto_impl();
  friend void  protobuf_AddDesc_hgAlgorBack_2eproto_impl();
  friend void protobuf_AssignDesc_hgAlgorBack_2eproto();
  friend void protobuf_ShutdownFile_hgAlgorBack_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAlgorBackRequest> hgAlgorBackRequest_default_instance_;

// -------------------------------------------------------------------

class hgAlgorBackRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAlgorBackRepsone) */ {
 public:
  hgAlgorBackRepsone();
  virtual ~hgAlgorBackRepsone();

  hgAlgorBackRepsone(const hgAlgorBackRepsone& from);

  inline hgAlgorBackRepsone& operator=(const hgAlgorBackRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAlgorBackRepsone& default_instance();

  static const hgAlgorBackRepsone* internal_default_instance();

  void Swap(hgAlgorBackRepsone* other);

  // implements Message ----------------------------------------------

  inline hgAlgorBackRepsone* New() const { return New(NULL); }

  hgAlgorBackRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAlgorBackRepsone& from);
  void MergeFrom(const hgAlgorBackRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAlgorBackRepsone* other);
  void UnsafeMergeFrom(const hgAlgorBackRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // repeated .hgAisMessage own = 2;
  int own_size() const;
  void clear_own();
  static const int kOwnFieldNumber = 2;
  const ::hgAisMessage& own(int index) const;
  ::hgAisMessage* mutable_own(int index);
  ::hgAisMessage* add_own();
  ::google::protobuf::RepeatedPtrField< ::hgAisMessage >*
      mutable_own();
  const ::google::protobuf::RepeatedPtrField< ::hgAisMessage >&
      own() const;

  // repeated .hgAisMessage target = 3;
  int target_size() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::hgAisMessage& target(int index) const;
  ::hgAisMessage* mutable_target(int index);
  ::hgAisMessage* add_target();
  ::google::protobuf::RepeatedPtrField< ::hgAisMessage >*
      mutable_target();
  const ::google::protobuf::RepeatedPtrField< ::hgAisMessage >&
      target() const;

  // repeated int64 time = 4;
  int time_size() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int64 time(int index) const;
  void set_time(int index, ::google::protobuf::int64 value);
  void add_time(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_time();

  // @@protoc_insertion_point(class_scope:hgAlgorBackRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hgAisMessage > own_;
  ::google::protobuf::RepeatedPtrField< ::hgAisMessage > target_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > time_;
  mutable int _time_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAlgorBack_2eproto_impl();
  friend void  protobuf_AddDesc_hgAlgorBack_2eproto_impl();
  friend void protobuf_AssignDesc_hgAlgorBack_2eproto();
  friend void protobuf_ShutdownFile_hgAlgorBack_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAlgorBackRepsone> hgAlgorBackRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlgorBackRequest

// optional string guid = 1;
inline void hgAlgorBackRequest::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRequest::guid() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.guid)
  return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.guid)
}
inline void hgAlgorBackRequest::set_guid(const char* value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRequest.guid)
}
inline void hgAlgorBackRequest::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRequest.guid)
}
inline ::std::string* hgAlgorBackRequest::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRequest.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRequest::release_guid() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRequest.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRequest.guid)
}

// repeated int64 begintime = 2;
inline int hgAlgorBackRequest::begintime_size() const {
  return begintime_.size();
}
inline void hgAlgorBackRequest::clear_begintime() {
  begintime_.Clear();
}
inline ::google::protobuf::int64 hgAlgorBackRequest::begintime(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.begintime)
  return begintime_.Get(index);
}
inline void hgAlgorBackRequest::set_begintime(int index, ::google::protobuf::int64 value) {
  begintime_.Set(index, value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.begintime)
}
inline void hgAlgorBackRequest::add_begintime(::google::protobuf::int64 value) {
  begintime_.Add(value);
  // @@protoc_insertion_point(field_add:hgAlgorBackRequest.begintime)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
hgAlgorBackRequest::begintime() const {
  // @@protoc_insertion_point(field_list:hgAlgorBackRequest.begintime)
  return begintime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
hgAlgorBackRequest::mutable_begintime() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorBackRequest.begintime)
  return &begintime_;
}

// repeated int64 endtime = 3;
inline int hgAlgorBackRequest::endtime_size() const {
  return endtime_.size();
}
inline void hgAlgorBackRequest::clear_endtime() {
  endtime_.Clear();
}
inline ::google::protobuf::int64 hgAlgorBackRequest::endtime(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.endtime)
  return endtime_.Get(index);
}
inline void hgAlgorBackRequest::set_endtime(int index, ::google::protobuf::int64 value) {
  endtime_.Set(index, value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.endtime)
}
inline void hgAlgorBackRequest::add_endtime(::google::protobuf::int64 value) {
  endtime_.Add(value);
  // @@protoc_insertion_point(field_add:hgAlgorBackRequest.endtime)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
hgAlgorBackRequest::endtime() const {
  // @@protoc_insertion_point(field_list:hgAlgorBackRequest.endtime)
  return endtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
hgAlgorBackRequest::mutable_endtime() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorBackRequest.endtime)
  return &endtime_;
}

// optional string ownMMSI = 4;
inline void hgAlgorBackRequest::clear_ownmmsi() {
  ownmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRequest::ownmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.ownMMSI)
  return ownmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_ownmmsi(const ::std::string& value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.ownMMSI)
}
inline void hgAlgorBackRequest::set_ownmmsi(const char* value) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRequest.ownMMSI)
}
inline void hgAlgorBackRequest::set_ownmmsi(const char* value, size_t size) {
  
  ownmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRequest.ownMMSI)
}
inline ::std::string* hgAlgorBackRequest::mutable_ownmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRequest.ownMMSI)
  return ownmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRequest::release_ownmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRequest.ownMMSI)
  
  return ownmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_allocated_ownmmsi(::std::string* ownmmsi) {
  if (ownmmsi != NULL) {
    
  } else {
    
  }
  ownmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRequest.ownMMSI)
}

// optional string ownRadarID = 5;
inline void hgAlgorBackRequest::clear_ownradarid() {
  ownradarid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRequest::ownradarid() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.ownRadarID)
  return ownradarid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_ownradarid(const ::std::string& value) {
  
  ownradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.ownRadarID)
}
inline void hgAlgorBackRequest::set_ownradarid(const char* value) {
  
  ownradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRequest.ownRadarID)
}
inline void hgAlgorBackRequest::set_ownradarid(const char* value, size_t size) {
  
  ownradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRequest.ownRadarID)
}
inline ::std::string* hgAlgorBackRequest::mutable_ownradarid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRequest.ownRadarID)
  return ownradarid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRequest::release_ownradarid() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRequest.ownRadarID)
  
  return ownradarid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_allocated_ownradarid(::std::string* ownradarid) {
  if (ownradarid != NULL) {
    
  } else {
    
  }
  ownradarid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownradarid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRequest.ownRadarID)
}

// optional string targetMMSI = 6;
inline void hgAlgorBackRequest::clear_targetmmsi() {
  targetmmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRequest::targetmmsi() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.targetMMSI)
  return targetmmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_targetmmsi(const ::std::string& value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.targetMMSI)
}
inline void hgAlgorBackRequest::set_targetmmsi(const char* value) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRequest.targetMMSI)
}
inline void hgAlgorBackRequest::set_targetmmsi(const char* value, size_t size) {
  
  targetmmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRequest.targetMMSI)
}
inline ::std::string* hgAlgorBackRequest::mutable_targetmmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRequest.targetMMSI)
  return targetmmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRequest::release_targetmmsi() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRequest.targetMMSI)
  
  return targetmmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_allocated_targetmmsi(::std::string* targetmmsi) {
  if (targetmmsi != NULL) {
    
  } else {
    
  }
  targetmmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetmmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRequest.targetMMSI)
}

// optional string targetRadarID = 7;
inline void hgAlgorBackRequest::clear_targetradarid() {
  targetradarid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRequest::targetradarid() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRequest.targetRadarID)
  return targetradarid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_targetradarid(const ::std::string& value) {
  
  targetradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRequest.targetRadarID)
}
inline void hgAlgorBackRequest::set_targetradarid(const char* value) {
  
  targetradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRequest.targetRadarID)
}
inline void hgAlgorBackRequest::set_targetradarid(const char* value, size_t size) {
  
  targetradarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRequest.targetRadarID)
}
inline ::std::string* hgAlgorBackRequest::mutable_targetradarid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRequest.targetRadarID)
  return targetradarid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRequest::release_targetradarid() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRequest.targetRadarID)
  
  return targetradarid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRequest::set_allocated_targetradarid(::std::string* targetradarid) {
  if (targetradarid != NULL) {
    
  } else {
    
  }
  targetradarid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetradarid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRequest.targetRadarID)
}

inline const hgAlgorBackRequest* hgAlgorBackRequest::internal_default_instance() {
  return &hgAlgorBackRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// hgAlgorBackRepsone

// optional string guid = 1;
inline void hgAlgorBackRepsone::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAlgorBackRepsone::guid() const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRepsone.guid)
  return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRepsone::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRepsone.guid)
}
inline void hgAlgorBackRepsone::set_guid(const char* value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAlgorBackRepsone.guid)
}
inline void hgAlgorBackRepsone::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAlgorBackRepsone.guid)
}
inline ::std::string* hgAlgorBackRepsone::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRepsone.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAlgorBackRepsone::release_guid() {
  // @@protoc_insertion_point(field_release:hgAlgorBackRepsone.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAlgorBackRepsone::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:hgAlgorBackRepsone.guid)
}

// repeated .hgAisMessage own = 2;
inline int hgAlgorBackRepsone::own_size() const {
  return own_.size();
}
inline void hgAlgorBackRepsone::clear_own() {
  own_.Clear();
}
inline const ::hgAisMessage& hgAlgorBackRepsone::own(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRepsone.own)
  return own_.Get(index);
}
inline ::hgAisMessage* hgAlgorBackRepsone::mutable_own(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRepsone.own)
  return own_.Mutable(index);
}
inline ::hgAisMessage* hgAlgorBackRepsone::add_own() {
  // @@protoc_insertion_point(field_add:hgAlgorBackRepsone.own)
  return own_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hgAisMessage >*
hgAlgorBackRepsone::mutable_own() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorBackRepsone.own)
  return &own_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hgAisMessage >&
hgAlgorBackRepsone::own() const {
  // @@protoc_insertion_point(field_list:hgAlgorBackRepsone.own)
  return own_;
}

// repeated .hgAisMessage target = 3;
inline int hgAlgorBackRepsone::target_size() const {
  return target_.size();
}
inline void hgAlgorBackRepsone::clear_target() {
  target_.Clear();
}
inline const ::hgAisMessage& hgAlgorBackRepsone::target(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRepsone.target)
  return target_.Get(index);
}
inline ::hgAisMessage* hgAlgorBackRepsone::mutable_target(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlgorBackRepsone.target)
  return target_.Mutable(index);
}
inline ::hgAisMessage* hgAlgorBackRepsone::add_target() {
  // @@protoc_insertion_point(field_add:hgAlgorBackRepsone.target)
  return target_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hgAisMessage >*
hgAlgorBackRepsone::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorBackRepsone.target)
  return &target_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hgAisMessage >&
hgAlgorBackRepsone::target() const {
  // @@protoc_insertion_point(field_list:hgAlgorBackRepsone.target)
  return target_;
}

// repeated int64 time = 4;
inline int hgAlgorBackRepsone::time_size() const {
  return time_.size();
}
inline void hgAlgorBackRepsone::clear_time() {
  time_.Clear();
}
inline ::google::protobuf::int64 hgAlgorBackRepsone::time(int index) const {
  // @@protoc_insertion_point(field_get:hgAlgorBackRepsone.time)
  return time_.Get(index);
}
inline void hgAlgorBackRepsone::set_time(int index, ::google::protobuf::int64 value) {
  time_.Set(index, value);
  // @@protoc_insertion_point(field_set:hgAlgorBackRepsone.time)
}
inline void hgAlgorBackRepsone::add_time(::google::protobuf::int64 value) {
  time_.Add(value);
  // @@protoc_insertion_point(field_add:hgAlgorBackRepsone.time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
hgAlgorBackRepsone::time() const {
  // @@protoc_insertion_point(field_list:hgAlgorBackRepsone.time)
  return time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
hgAlgorBackRepsone::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:hgAlgorBackRepsone.time)
  return &time_;
}

inline const hgAlgorBackRepsone* hgAlgorBackRepsone::internal_default_instance() {
  return &hgAlgorBackRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAlgorBack_2eproto__INCLUDED
