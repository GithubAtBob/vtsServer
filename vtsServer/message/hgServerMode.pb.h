// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgServerMode.proto

#ifndef PROTOBUF_hgServerMode_2eproto__INCLUDED
#define PROTOBUF_hgServerMode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgServerMode_2eproto();
void protobuf_InitDefaults_hgServerMode_2eproto();
void protobuf_AssignDesc_hgServerMode_2eproto();
void protobuf_ShutdownFile_hgServerMode_2eproto();

class hgServerMode;

// ===================================================================

class hgServerMode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgServerMode) */ {
 public:
  hgServerMode();
  virtual ~hgServerMode();

  hgServerMode(const hgServerMode& from);

  inline hgServerMode& operator=(const hgServerMode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgServerMode& default_instance();

  static const hgServerMode* internal_default_instance();

  void Swap(hgServerMode* other);

  // implements Message ----------------------------------------------

  inline hgServerMode* New() const { return New(NULL); }

  hgServerMode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgServerMode& from);
  void MergeFrom(const hgServerMode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgServerMode* other);
  void UnsafeMergeFrom(const hgServerMode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 playback = 1;
  void clear_playback();
  static const int kPlaybackFieldNumber = 1;
  ::google::protobuf::int32 playback() const;
  void set_playback(::google::protobuf::int32 value);

  // optional int32 freshMode = 2;
  void clear_freshmode();
  static const int kFreshModeFieldNumber = 2;
  ::google::protobuf::int32 freshmode() const;
  void set_freshmode(::google::protobuf::int32 value);

  // optional int32 aisData = 3;
  void clear_aisdata();
  static const int kAisDataFieldNumber = 3;
  ::google::protobuf::int32 aisdata() const;
  void set_aisdata(::google::protobuf::int32 value);

  // optional int32 radarData = 4;
  void clear_radardata();
  static const int kRadarDataFieldNumber = 4;
  ::google::protobuf::int32 radardata() const;
  void set_radardata(::google::protobuf::int32 value);

  // optional int32 radarImage = 5;
  void clear_radarimage();
  static const int kRadarImageFieldNumber = 5;
  ::google::protobuf::int32 radarimage() const;
  void set_radarimage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hgServerMode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playback_;
  ::google::protobuf::int32 freshmode_;
  ::google::protobuf::int32 aisdata_;
  ::google::protobuf::int32 radardata_;
  ::google::protobuf::int32 radarimage_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgServerMode_2eproto_impl();
  friend void  protobuf_AddDesc_hgServerMode_2eproto_impl();
  friend void protobuf_AssignDesc_hgServerMode_2eproto();
  friend void protobuf_ShutdownFile_hgServerMode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgServerMode> hgServerMode_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgServerMode

// optional int32 playback = 1;
inline void hgServerMode::clear_playback() {
  playback_ = 0;
}
inline ::google::protobuf::int32 hgServerMode::playback() const {
  // @@protoc_insertion_point(field_get:hgServerMode.playback)
  return playback_;
}
inline void hgServerMode::set_playback(::google::protobuf::int32 value) {
  
  playback_ = value;
  // @@protoc_insertion_point(field_set:hgServerMode.playback)
}

// optional int32 freshMode = 2;
inline void hgServerMode::clear_freshmode() {
  freshmode_ = 0;
}
inline ::google::protobuf::int32 hgServerMode::freshmode() const {
  // @@protoc_insertion_point(field_get:hgServerMode.freshMode)
  return freshmode_;
}
inline void hgServerMode::set_freshmode(::google::protobuf::int32 value) {
  
  freshmode_ = value;
  // @@protoc_insertion_point(field_set:hgServerMode.freshMode)
}

// optional int32 aisData = 3;
inline void hgServerMode::clear_aisdata() {
  aisdata_ = 0;
}
inline ::google::protobuf::int32 hgServerMode::aisdata() const {
  // @@protoc_insertion_point(field_get:hgServerMode.aisData)
  return aisdata_;
}
inline void hgServerMode::set_aisdata(::google::protobuf::int32 value) {
  
  aisdata_ = value;
  // @@protoc_insertion_point(field_set:hgServerMode.aisData)
}

// optional int32 radarData = 4;
inline void hgServerMode::clear_radardata() {
  radardata_ = 0;
}
inline ::google::protobuf::int32 hgServerMode::radardata() const {
  // @@protoc_insertion_point(field_get:hgServerMode.radarData)
  return radardata_;
}
inline void hgServerMode::set_radardata(::google::protobuf::int32 value) {
  
  radardata_ = value;
  // @@protoc_insertion_point(field_set:hgServerMode.radarData)
}

// optional int32 radarImage = 5;
inline void hgServerMode::clear_radarimage() {
  radarimage_ = 0;
}
inline ::google::protobuf::int32 hgServerMode::radarimage() const {
  // @@protoc_insertion_point(field_get:hgServerMode.radarImage)
  return radarimage_;
}
inline void hgServerMode::set_radarimage(::google::protobuf::int32 value) {
  
  radarimage_ = value;
  // @@protoc_insertion_point(field_set:hgServerMode.radarImage)
}

inline const hgServerMode* hgServerMode::internal_default_instance() {
  return &hgServerMode_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgServerMode_2eproto__INCLUDED
