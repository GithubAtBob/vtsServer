// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_login_2eproto() {
  protobuf_AddDesc_login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "login.proto");
  GOOGLE_CHECK(file != NULL);
  LoginRequest_descriptor_ = file->message_type(0);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::internal_default_instance(),
      LoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_));
  LoginRepsone_descriptor_ = file->message_type(1);
  static const int LoginRepsone_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, loginrole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, allgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, alluser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, allnotes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, allfixedobject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, allaidsail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, grouptype_),
  };
  LoginRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRepsone_descriptor_,
      LoginRepsone::internal_default_instance(),
      LoginRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, LoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRepsone_descriptor_, LoginRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_login_2eproto() {
  LoginRequest_default_instance_.Shutdown();
  delete LoginRequest_reflection_;
  LoginRepsone_default_instance_.Shutdown();
  delete LoginRepsone_reflection_;
}

void protobuf_InitDefaults_login_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  LoginRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginRepsone_default_instance_.DefaultConstruct();
  LoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_login_2eproto_once_);
void protobuf_InitDefaults_login_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_login_2eproto_once_,
                 &protobuf_InitDefaults_login_2eproto_impl);
}
void protobuf_AddDesc_login_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_login_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013login.proto\"2\n\014LoginRequest\022\020\n\010userNam"
    "e\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\245\001\n\014LoginRepso"
    "ne\022\016\n\006result\030\001 \001(\t\022\021\n\tloginrole\030\002 \001(\t\022\020\n"
    "\010allgroup\030\003 \001(\t\022\017\n\007alluser\030\004 \001(\t\022\020\n\010alln"
    "otes\030\005 \001(\t\022\026\n\016allfixedobject\030\006 \001(\t\022\022\n\nal"
    "laidsail\030\007 \001(\t\022\021\n\tgrouptype\030\010 \001(\005b\006proto"
    "3", 241);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_login_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_login_2eproto_once_);
void protobuf_AddDesc_login_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_login_2eproto_once_,
                 &protobuf_AddDesc_login_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_login_2eproto {
  StaticDescriptorInitializer_login_2eproto() {
    protobuf_AddDesc_login_2eproto();
  }
} static_descriptor_initializer_login_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kUserNameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_login_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LoginRequest)
}

void LoginRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_InitDefaults_login_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRequest)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginRequest)
  // optional string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginRequest)
  // optional string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRequest)
  size_t total_size = 0;

  // optional string userName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRequest::UnsafeMergeFrom(const LoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRequest::IsInitialized() const {

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// optional string userName = 1;
void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:LoginRequest.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.userName)
}
void LoginRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.userName)
}
void LoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.userName)
}
::std::string* LoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:LoginRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.userName)
}

// optional string password = 2;
void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.password)
}
void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.password)
}
void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.password)
}
::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.password)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRepsone::kResultFieldNumber;
const int LoginRepsone::kLoginroleFieldNumber;
const int LoginRepsone::kAllgroupFieldNumber;
const int LoginRepsone::kAlluserFieldNumber;
const int LoginRepsone::kAllnotesFieldNumber;
const int LoginRepsone::kAllfixedobjectFieldNumber;
const int LoginRepsone::kAllaidsailFieldNumber;
const int LoginRepsone::kGrouptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRepsone::LoginRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_login_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginRepsone)
}

void LoginRepsone::InitAsDefaultInstance() {
}

LoginRepsone::LoginRepsone(const LoginRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LoginRepsone)
}

void LoginRepsone::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginrole_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allgroup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alluser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allnotes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allfixedobject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allaidsail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouptype_ = 0;
  _cached_size_ = 0;
}

LoginRepsone::~LoginRepsone() {
  // @@protoc_insertion_point(destructor:LoginRepsone)
  SharedDtor();
}

void LoginRepsone::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginrole_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allgroup_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alluser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allnotes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allfixedobject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allaidsail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRepsone_descriptor_;
}

const LoginRepsone& LoginRepsone::default_instance() {
  protobuf_InitDefaults_login_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRepsone> LoginRepsone_default_instance_;

LoginRepsone* LoginRepsone::New(::google::protobuf::Arena* arena) const {
  LoginRepsone* n = new LoginRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginRepsone)
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allgroup_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alluser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allnotes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allfixedobject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allaidsail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouptype_ = 0;
}

bool LoginRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loginrole;
        break;
      }

      // optional string loginrole = 2;
      case 2: {
        if (tag == 18) {
         parse_loginrole:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginrole()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loginrole().data(), this->loginrole().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.loginrole"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_allgroup;
        break;
      }

      // optional string allgroup = 3;
      case 3: {
        if (tag == 26) {
         parse_allgroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allgroup()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allgroup().data(), this->allgroup().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.allgroup"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_alluser;
        break;
      }

      // optional string alluser = 4;
      case 4: {
        if (tag == 34) {
         parse_alluser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alluser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alluser().data(), this->alluser().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.alluser"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_allnotes;
        break;
      }

      // optional string allnotes = 5;
      case 5: {
        if (tag == 42) {
         parse_allnotes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allnotes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allnotes().data(), this->allnotes().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.allnotes"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_allfixedobject;
        break;
      }

      // optional string allfixedobject = 6;
      case 6: {
        if (tag == 50) {
         parse_allfixedobject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allfixedobject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allfixedobject().data(), this->allfixedobject().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.allfixedobject"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_allaidsail;
        break;
      }

      // optional string allaidsail = 7;
      case 7: {
        if (tag == 58) {
         parse_allaidsail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allaidsail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allaidsail().data(), this->allaidsail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginRepsone.allaidsail"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_grouptype;
        break;
      }

      // optional int32 grouptype = 8;
      case 8: {
        if (tag == 64) {
         parse_grouptype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grouptype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginRepsone)
  return false;
#undef DO_
}

void LoginRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // optional string loginrole = 2;
  if (this->loginrole().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginrole().data(), this->loginrole().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.loginrole");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->loginrole(), output);
  }

  // optional string allgroup = 3;
  if (this->allgroup().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allgroup().data(), this->allgroup().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allgroup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->allgroup(), output);
  }

  // optional string alluser = 4;
  if (this->alluser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alluser().data(), this->alluser().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.alluser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alluser(), output);
  }

  // optional string allnotes = 5;
  if (this->allnotes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allnotes().data(), this->allnotes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allnotes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->allnotes(), output);
  }

  // optional string allfixedobject = 6;
  if (this->allfixedobject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allfixedobject().data(), this->allfixedobject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allfixedobject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->allfixedobject(), output);
  }

  // optional string allaidsail = 7;
  if (this->allaidsail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allaidsail().data(), this->allaidsail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allaidsail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->allaidsail(), output);
  }

  // optional int32 grouptype = 8;
  if (this->grouptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->grouptype(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginRepsone)
}

::google::protobuf::uint8* LoginRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginRepsone)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // optional string loginrole = 2;
  if (this->loginrole().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginrole().data(), this->loginrole().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.loginrole");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->loginrole(), target);
  }

  // optional string allgroup = 3;
  if (this->allgroup().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allgroup().data(), this->allgroup().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allgroup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->allgroup(), target);
  }

  // optional string alluser = 4;
  if (this->alluser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alluser().data(), this->alluser().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.alluser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alluser(), target);
  }

  // optional string allnotes = 5;
  if (this->allnotes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allnotes().data(), this->allnotes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allnotes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->allnotes(), target);
  }

  // optional string allfixedobject = 6;
  if (this->allfixedobject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allfixedobject().data(), this->allfixedobject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allfixedobject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->allfixedobject(), target);
  }

  // optional string allaidsail = 7;
  if (this->allaidsail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allaidsail().data(), this->allaidsail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginRepsone.allaidsail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->allaidsail(), target);
  }

  // optional int32 grouptype = 8;
  if (this->grouptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->grouptype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginRepsone)
  return target;
}

size_t LoginRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginRepsone)
  size_t total_size = 0;

  // optional string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // optional string loginrole = 2;
  if (this->loginrole().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loginrole());
  }

  // optional string allgroup = 3;
  if (this->allgroup().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->allgroup());
  }

  // optional string alluser = 4;
  if (this->alluser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alluser());
  }

  // optional string allnotes = 5;
  if (this->allnotes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->allnotes());
  }

  // optional string allfixedobject = 6;
  if (this->allfixedobject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->allfixedobject());
  }

  // optional string allaidsail = 7;
  if (this->allaidsail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->allaidsail());
  }

  // optional int32 grouptype = 8;
  if (this->grouptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grouptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginRepsone)
    UnsafeMergeFrom(*source);
  }
}

void LoginRepsone::MergeFrom(const LoginRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRepsone::UnsafeMergeFrom(const LoginRepsone& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.loginrole().size() > 0) {

    loginrole_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginrole_);
  }
  if (from.allgroup().size() > 0) {

    allgroup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allgroup_);
  }
  if (from.alluser().size() > 0) {

    alluser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alluser_);
  }
  if (from.allnotes().size() > 0) {

    allnotes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allnotes_);
  }
  if (from.allfixedobject().size() > 0) {

    allfixedobject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allfixedobject_);
  }
  if (from.allaidsail().size() > 0) {

    allaidsail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allaidsail_);
  }
  if (from.grouptype() != 0) {
    set_grouptype(from.grouptype());
  }
}

void LoginRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRepsone::CopyFrom(const LoginRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRepsone::IsInitialized() const {

  return true;
}

void LoginRepsone::Swap(LoginRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRepsone::InternalSwap(LoginRepsone* other) {
  result_.Swap(&other->result_);
  loginrole_.Swap(&other->loginrole_);
  allgroup_.Swap(&other->allgroup_);
  alluser_.Swap(&other->alluser_);
  allnotes_.Swap(&other->allnotes_);
  allfixedobject_.Swap(&other->allfixedobject_);
  allaidsail_.Swap(&other->allaidsail_);
  std::swap(grouptype_, other->grouptype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRepsone_descriptor_;
  metadata.reflection = LoginRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRepsone

// optional string result = 1;
void LoginRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::result() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.result)
}
void LoginRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.result)
}
void LoginRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.result)
}
::std::string* LoginRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_result() {
  // @@protoc_insertion_point(field_release:LoginRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.result)
}

// optional string loginrole = 2;
void LoginRepsone::clear_loginrole() {
  loginrole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::loginrole() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.loginrole)
  return loginrole_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_loginrole(const ::std::string& value) {
  
  loginrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.loginrole)
}
void LoginRepsone::set_loginrole(const char* value) {
  
  loginrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.loginrole)
}
void LoginRepsone::set_loginrole(const char* value, size_t size) {
  
  loginrole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.loginrole)
}
::std::string* LoginRepsone::mutable_loginrole() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.loginrole)
  return loginrole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_loginrole() {
  // @@protoc_insertion_point(field_release:LoginRepsone.loginrole)
  
  return loginrole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_loginrole(::std::string* loginrole) {
  if (loginrole != NULL) {
    
  } else {
    
  }
  loginrole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginrole);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.loginrole)
}

// optional string allgroup = 3;
void LoginRepsone::clear_allgroup() {
  allgroup_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::allgroup() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.allgroup)
  return allgroup_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allgroup(const ::std::string& value) {
  
  allgroup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.allgroup)
}
void LoginRepsone::set_allgroup(const char* value) {
  
  allgroup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.allgroup)
}
void LoginRepsone::set_allgroup(const char* value, size_t size) {
  
  allgroup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.allgroup)
}
::std::string* LoginRepsone::mutable_allgroup() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.allgroup)
  return allgroup_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_allgroup() {
  // @@protoc_insertion_point(field_release:LoginRepsone.allgroup)
  
  return allgroup_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_allgroup(::std::string* allgroup) {
  if (allgroup != NULL) {
    
  } else {
    
  }
  allgroup_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allgroup);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.allgroup)
}

// optional string alluser = 4;
void LoginRepsone::clear_alluser() {
  alluser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::alluser() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.alluser)
  return alluser_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_alluser(const ::std::string& value) {
  
  alluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.alluser)
}
void LoginRepsone::set_alluser(const char* value) {
  
  alluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.alluser)
}
void LoginRepsone::set_alluser(const char* value, size_t size) {
  
  alluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.alluser)
}
::std::string* LoginRepsone::mutable_alluser() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.alluser)
  return alluser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_alluser() {
  // @@protoc_insertion_point(field_release:LoginRepsone.alluser)
  
  return alluser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_alluser(::std::string* alluser) {
  if (alluser != NULL) {
    
  } else {
    
  }
  alluser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alluser);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.alluser)
}

// optional string allnotes = 5;
void LoginRepsone::clear_allnotes() {
  allnotes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::allnotes() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.allnotes)
  return allnotes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allnotes(const ::std::string& value) {
  
  allnotes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.allnotes)
}
void LoginRepsone::set_allnotes(const char* value) {
  
  allnotes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.allnotes)
}
void LoginRepsone::set_allnotes(const char* value, size_t size) {
  
  allnotes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.allnotes)
}
::std::string* LoginRepsone::mutable_allnotes() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.allnotes)
  return allnotes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_allnotes() {
  // @@protoc_insertion_point(field_release:LoginRepsone.allnotes)
  
  return allnotes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_allnotes(::std::string* allnotes) {
  if (allnotes != NULL) {
    
  } else {
    
  }
  allnotes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allnotes);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.allnotes)
}

// optional string allfixedobject = 6;
void LoginRepsone::clear_allfixedobject() {
  allfixedobject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::allfixedobject() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.allfixedobject)
  return allfixedobject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allfixedobject(const ::std::string& value) {
  
  allfixedobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.allfixedobject)
}
void LoginRepsone::set_allfixedobject(const char* value) {
  
  allfixedobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.allfixedobject)
}
void LoginRepsone::set_allfixedobject(const char* value, size_t size) {
  
  allfixedobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.allfixedobject)
}
::std::string* LoginRepsone::mutable_allfixedobject() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.allfixedobject)
  return allfixedobject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_allfixedobject() {
  // @@protoc_insertion_point(field_release:LoginRepsone.allfixedobject)
  
  return allfixedobject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_allfixedobject(::std::string* allfixedobject) {
  if (allfixedobject != NULL) {
    
  } else {
    
  }
  allfixedobject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allfixedobject);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.allfixedobject)
}

// optional string allaidsail = 7;
void LoginRepsone::clear_allaidsail() {
  allaidsail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRepsone::allaidsail() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.allaidsail)
  return allaidsail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allaidsail(const ::std::string& value) {
  
  allaidsail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRepsone.allaidsail)
}
void LoginRepsone::set_allaidsail(const char* value) {
  
  allaidsail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRepsone.allaidsail)
}
void LoginRepsone::set_allaidsail(const char* value, size_t size) {
  
  allaidsail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRepsone.allaidsail)
}
::std::string* LoginRepsone::mutable_allaidsail() {
  
  // @@protoc_insertion_point(field_mutable:LoginRepsone.allaidsail)
  return allaidsail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRepsone::release_allaidsail() {
  // @@protoc_insertion_point(field_release:LoginRepsone.allaidsail)
  
  return allaidsail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRepsone::set_allocated_allaidsail(::std::string* allaidsail) {
  if (allaidsail != NULL) {
    
  } else {
    
  }
  allaidsail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allaidsail);
  // @@protoc_insertion_point(field_set_allocated:LoginRepsone.allaidsail)
}

// optional int32 grouptype = 8;
void LoginRepsone::clear_grouptype() {
  grouptype_ = 0;
}
::google::protobuf::int32 LoginRepsone::grouptype() const {
  // @@protoc_insertion_point(field_get:LoginRepsone.grouptype)
  return grouptype_;
}
void LoginRepsone::set_grouptype(::google::protobuf::int32 value) {
  
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:LoginRepsone.grouptype)
}

inline const LoginRepsone* LoginRepsone::internal_default_instance() {
  return &LoginRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
