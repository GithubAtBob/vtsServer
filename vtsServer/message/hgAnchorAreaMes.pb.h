// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAnchorAreaMes.proto

#ifndef PROTOBUF_hgAnchorAreaMes_2eproto__INCLUDED
#define PROTOBUF_hgAnchorAreaMes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAnchorAreaMes_2eproto();
void protobuf_InitDefaults_hgAnchorAreaMes_2eproto();
void protobuf_AssignDesc_hgAnchorAreaMes_2eproto();
void protobuf_ShutdownFile_hgAnchorAreaMes_2eproto();

class hgAnchorAreaMes;
class hgAnchorAreaRepsone;

// ===================================================================

class hgAnchorAreaMes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAnchorAreaMes) */ {
 public:
  hgAnchorAreaMes();
  virtual ~hgAnchorAreaMes();

  hgAnchorAreaMes(const hgAnchorAreaMes& from);

  inline hgAnchorAreaMes& operator=(const hgAnchorAreaMes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAnchorAreaMes& default_instance();

  static const hgAnchorAreaMes* internal_default_instance();

  void Swap(hgAnchorAreaMes* other);

  // implements Message ----------------------------------------------

  inline hgAnchorAreaMes* New() const { return New(NULL); }

  hgAnchorAreaMes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAnchorAreaMes& from);
  void MergeFrom(const hgAnchorAreaMes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAnchorAreaMes* other);
  void UnsafeMergeFrom(const hgAnchorAreaMes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MMSI = 1;
  void clear_mmsi();
  static const int kMMSIFieldNumber = 1;
  const ::std::string& mmsi() const;
  void set_mmsi(const ::std::string& value);
  void set_mmsi(const char* value);
  void set_mmsi(const char* value, size_t size);
  ::std::string* mutable_mmsi();
  ::std::string* release_mmsi();
  void set_allocated_mmsi(::std::string* mmsi);

  // optional bool AnchorArea = 2;
  void clear_anchorarea();
  static const int kAnchorAreaFieldNumber = 2;
  bool anchorarea() const;
  void set_anchorarea(bool value);

  // optional string ID = 3;
  void clear_id();
  static const int kIDFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int32 Type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hgAnchorAreaMes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mmsi_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  bool anchorarea_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAnchorAreaMes_2eproto_impl();
  friend void  protobuf_AddDesc_hgAnchorAreaMes_2eproto_impl();
  friend void protobuf_AssignDesc_hgAnchorAreaMes_2eproto();
  friend void protobuf_ShutdownFile_hgAnchorAreaMes_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAnchorAreaMes> hgAnchorAreaMes_default_instance_;

// -------------------------------------------------------------------

class hgAnchorAreaRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAnchorAreaRepsone) */ {
 public:
  hgAnchorAreaRepsone();
  virtual ~hgAnchorAreaRepsone();

  hgAnchorAreaRepsone(const hgAnchorAreaRepsone& from);

  inline hgAnchorAreaRepsone& operator=(const hgAnchorAreaRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAnchorAreaRepsone& default_instance();

  static const hgAnchorAreaRepsone* internal_default_instance();

  void Swap(hgAnchorAreaRepsone* other);

  // implements Message ----------------------------------------------

  inline hgAnchorAreaRepsone* New() const { return New(NULL); }

  hgAnchorAreaRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAnchorAreaRepsone& from);
  void MergeFrom(const hgAnchorAreaRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAnchorAreaRepsone* other);
  void UnsafeMergeFrom(const hgAnchorAreaRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hgAnchorAreaRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAnchorAreaMes_2eproto_impl();
  friend void  protobuf_AddDesc_hgAnchorAreaMes_2eproto_impl();
  friend void protobuf_AssignDesc_hgAnchorAreaMes_2eproto();
  friend void protobuf_ShutdownFile_hgAnchorAreaMes_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAnchorAreaRepsone> hgAnchorAreaRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAnchorAreaMes

// optional string MMSI = 1;
inline void hgAnchorAreaMes::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAnchorAreaMes::mmsi() const {
  // @@protoc_insertion_point(field_get:hgAnchorAreaMes.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorAreaMes::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAnchorAreaMes.MMSI)
}
inline void hgAnchorAreaMes::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAnchorAreaMes.MMSI)
}
inline void hgAnchorAreaMes::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAnchorAreaMes.MMSI)
}
inline ::std::string* hgAnchorAreaMes::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAnchorAreaMes.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAnchorAreaMes::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgAnchorAreaMes.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorAreaMes::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAnchorAreaMes.MMSI)
}

// optional bool AnchorArea = 2;
inline void hgAnchorAreaMes::clear_anchorarea() {
  anchorarea_ = false;
}
inline bool hgAnchorAreaMes::anchorarea() const {
  // @@protoc_insertion_point(field_get:hgAnchorAreaMes.AnchorArea)
  return anchorarea_;
}
inline void hgAnchorAreaMes::set_anchorarea(bool value) {
  
  anchorarea_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorAreaMes.AnchorArea)
}

// optional string ID = 3;
inline void hgAnchorAreaMes::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAnchorAreaMes::id() const {
  // @@protoc_insertion_point(field_get:hgAnchorAreaMes.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorAreaMes::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAnchorAreaMes.ID)
}
inline void hgAnchorAreaMes::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAnchorAreaMes.ID)
}
inline void hgAnchorAreaMes::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAnchorAreaMes.ID)
}
inline ::std::string* hgAnchorAreaMes::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgAnchorAreaMes.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAnchorAreaMes::release_id() {
  // @@protoc_insertion_point(field_release:hgAnchorAreaMes.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAnchorAreaMes::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgAnchorAreaMes.ID)
}

// optional int32 Type = 4;
inline void hgAnchorAreaMes::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 hgAnchorAreaMes::type() const {
  // @@protoc_insertion_point(field_get:hgAnchorAreaMes.Type)
  return type_;
}
inline void hgAnchorAreaMes::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hgAnchorAreaMes.Type)
}

inline const hgAnchorAreaMes* hgAnchorAreaMes::internal_default_instance() {
  return &hgAnchorAreaMes_default_instance_.get();
}
// -------------------------------------------------------------------

// hgAnchorAreaRepsone

inline const hgAnchorAreaRepsone* hgAnchorAreaRepsone::internal_default_instance() {
  return &hgAnchorAreaRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAnchorAreaMes_2eproto__INCLUDED
