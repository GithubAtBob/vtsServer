// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAisMessage.proto

#ifndef PROTOBUF_hgAisMessage_2eproto__INCLUDED
#define PROTOBUF_hgAisMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_hgAisMessage_2eproto();
void protobuf_InitDefaults_hgAisMessage_2eproto();
void protobuf_AssignDesc_hgAisMessage_2eproto();
void protobuf_ShutdownFile_hgAisMessage_2eproto();

class hgAisMessage;
class hgAisRepsone;

// ===================================================================

class hgAisMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAisMessage) */ {
 public:
  hgAisMessage();
  virtual ~hgAisMessage();

  hgAisMessage(const hgAisMessage& from);

  inline hgAisMessage& operator=(const hgAisMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAisMessage& default_instance();

  static const hgAisMessage* internal_default_instance();

  void Swap(hgAisMessage* other);

  // implements Message ----------------------------------------------

  inline hgAisMessage* New() const { return New(NULL); }

  hgAisMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAisMessage& from);
  void MergeFrom(const hgAisMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAisMessage* other);
  void UnsafeMergeFrom(const hgAisMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MID = 1;
  void clear_mid();
  static const int kMIDFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // optional int32 Class = 2;
  void clear_class_();
  static const int kClassFieldNumber = 2;
  ::google::protobuf::int32 class_() const;
  void set_class_(::google::protobuf::int32 value);

  // optional string MMSI = 3;
  void clear_mmsi();
  static const int kMMSIFieldNumber = 3;
  const ::std::string& mmsi() const;
  void set_mmsi(const ::std::string& value);
  void set_mmsi(const char* value);
  void set_mmsi(const char* value, size_t size);
  ::std::string* mutable_mmsi();
  ::std::string* release_mmsi();
  void set_allocated_mmsi(::std::string* mmsi);

  // optional int32 NavStatus = 4;
  void clear_navstatus();
  static const int kNavStatusFieldNumber = 4;
  ::google::protobuf::int32 navstatus() const;
  void set_navstatus(::google::protobuf::int32 value);

  // optional int32 ROTAIS = 5;
  void clear_rotais();
  static const int kROTAISFieldNumber = 5;
  ::google::protobuf::int32 rotais() const;
  void set_rotais(::google::protobuf::int32 value);

  // optional double SOG = 6;
  void clear_sog();
  static const int kSOGFieldNumber = 6;
  double sog() const;
  void set_sog(double value);

  // optional double Lon = 7;
  void clear_lon();
  static const int kLonFieldNumber = 7;
  double lon() const;
  void set_lon(double value);

  // optional double Lat = 8;
  void clear_lat();
  static const int kLatFieldNumber = 8;
  double lat() const;
  void set_lat(double value);

  // optional double COG = 9;
  void clear_cog();
  static const int kCOGFieldNumber = 9;
  double cog() const;
  void set_cog(double value);

  // optional double HDG = 10;
  void clear_hdg();
  static const int kHDGFieldNumber = 10;
  double hdg() const;
  void set_hdg(double value);

  // optional int32 IMO = 11;
  void clear_imo();
  static const int kIMOFieldNumber = 11;
  ::google::protobuf::int32 imo() const;
  void set_imo(::google::protobuf::int32 value);

  // optional string CallSign = 12;
  void clear_callsign();
  static const int kCallSignFieldNumber = 12;
  const ::std::string& callsign() const;
  void set_callsign(const ::std::string& value);
  void set_callsign(const char* value);
  void set_callsign(const char* value, size_t size);
  ::std::string* mutable_callsign();
  ::std::string* release_callsign();
  void set_allocated_callsign(::std::string* callsign);

  // optional string ShipName = 13;
  void clear_shipname();
  static const int kShipNameFieldNumber = 13;
  const ::std::string& shipname() const;
  void set_shipname(const ::std::string& value);
  void set_shipname(const char* value);
  void set_shipname(const char* value, size_t size);
  ::std::string* mutable_shipname();
  ::std::string* release_shipname();
  void set_allocated_shipname(::std::string* shipname);

  // optional string ShipType = 14;
  void clear_shiptype();
  static const int kShipTypeFieldNumber = 14;
  const ::std::string& shiptype() const;
  void set_shiptype(const ::std::string& value);
  void set_shiptype(const char* value);
  void set_shiptype(const char* value, size_t size);
  ::std::string* mutable_shiptype();
  ::std::string* release_shiptype();
  void set_allocated_shiptype(::std::string* shiptype);

  // optional int32 PosAccuracy = 15;
  void clear_posaccuracy();
  static const int kPosAccuracyFieldNumber = 15;
  ::google::protobuf::int32 posaccuracy() const;
  void set_posaccuracy(::google::protobuf::int32 value);

  // optional int32 EquipmentType = 16;
  void clear_equipmenttype();
  static const int kEquipmentTypeFieldNumber = 16;
  ::google::protobuf::int32 equipmenttype() const;
  void set_equipmenttype(::google::protobuf::int32 value);

  // optional int32 ETA_Mo = 17;
  void clear_eta_mo();
  static const int kETAMoFieldNumber = 17;
  ::google::protobuf::int32 eta_mo() const;
  void set_eta_mo(::google::protobuf::int32 value);

  // optional int32 ETA_Day = 18;
  void clear_eta_day();
  static const int kETADayFieldNumber = 18;
  ::google::protobuf::int32 eta_day() const;
  void set_eta_day(::google::protobuf::int32 value);

  // optional int32 ETA_Hr = 19;
  void clear_eta_hr();
  static const int kETAHrFieldNumber = 19;
  ::google::protobuf::int32 eta_hr() const;
  void set_eta_hr(::google::protobuf::int32 value);

  // optional int32 ETA_Min = 20;
  void clear_eta_min();
  static const int kETAMinFieldNumber = 20;
  ::google::protobuf::int32 eta_min() const;
  void set_eta_min(::google::protobuf::int32 value);

  // optional double Draft = 21;
  void clear_draft();
  static const int kDraftFieldNumber = 21;
  double draft() const;
  void set_draft(double value);

  // optional string Destination = 22;
  void clear_destination();
  static const int kDestinationFieldNumber = 22;
  const ::std::string& destination() const;
  void set_destination(const ::std::string& value);
  void set_destination(const char* value);
  void set_destination(const char* value, size_t size);
  ::std::string* mutable_destination();
  ::std::string* release_destination();
  void set_allocated_destination(::std::string* destination);

  // optional int32 SyncState = 23;
  void clear_syncstate();
  static const int kSyncStateFieldNumber = 23;
  ::google::protobuf::int32 syncstate() const;
  void set_syncstate(::google::protobuf::int32 value);

  // optional int32 SlotTO = 24;
  void clear_slotto();
  static const int kSlotTOFieldNumber = 24;
  ::google::protobuf::int32 slotto() const;
  void set_slotto(::google::protobuf::int32 value);

  // optional int32 DimA = 25;
  void clear_dima();
  static const int kDimAFieldNumber = 25;
  ::google::protobuf::int32 dima() const;
  void set_dima(::google::protobuf::int32 value);

  // optional int32 DimB = 26;
  void clear_dimb();
  static const int kDimBFieldNumber = 26;
  ::google::protobuf::int32 dimb() const;
  void set_dimb(::google::protobuf::int32 value);

  // optional int32 DimC = 27;
  void clear_dimc();
  static const int kDimCFieldNumber = 27;
  ::google::protobuf::int32 dimc() const;
  void set_dimc(::google::protobuf::int32 value);

  // optional int32 DimD = 28;
  void clear_dimd();
  static const int kDimDFieldNumber = 28;
  ::google::protobuf::int32 dimd() const;
  void set_dimd(::google::protobuf::int32 value);

  // optional int64 ReportTicks = 29;
  void clear_reportticks();
  static const int kReportTicksFieldNumber = 29;
  ::google::protobuf::int64 reportticks() const;
  void set_reportticks(::google::protobuf::int64 value);

  // optional int64 RecentPeriod = 30;
  void clear_recentperiod();
  static const int kRecentPeriodFieldNumber = 30;
  ::google::protobuf::int64 recentperiod() const;
  void set_recentperiod(::google::protobuf::int64 value);

  // optional int32 m_utc_hour = 31;
  void clear_m_utc_hour();
  static const int kMUtcHourFieldNumber = 31;
  ::google::protobuf::int32 m_utc_hour() const;
  void set_m_utc_hour(::google::protobuf::int32 value);

  // optional int32 m_utc_min = 32;
  void clear_m_utc_min();
  static const int kMUtcMinFieldNumber = 32;
  ::google::protobuf::int32 m_utc_min() const;
  void set_m_utc_min(::google::protobuf::int32 value);

  // optional int32 m_utc_sec = 33;
  void clear_m_utc_sec();
  static const int kMUtcSecFieldNumber = 33;
  ::google::protobuf::int32 m_utc_sec() const;
  void set_m_utc_sec(::google::protobuf::int32 value);

  // optional double Range_NM = 34;
  void clear_range_nm();
  static const int kRangeNMFieldNumber = 34;
  double range_nm() const;
  void set_range_nm(double value);

  // optional double Brg = 35;
  void clear_brg();
  static const int kBrgFieldNumber = 35;
  double brg() const;
  void set_brg(double value);

  // optional bool bCPA_Valid = 36;
  void clear_bcpa_valid();
  static const int kBCPAValidFieldNumber = 36;
  bool bcpa_valid() const;
  void set_bcpa_valid(bool value);

  // optional double TCPA = 37;
  void clear_tcpa();
  static const int kTCPAFieldNumber = 37;
  double tcpa() const;
  void set_tcpa(double value);

  // optional double CPA = 38;
  void clear_cpa();
  static const int kCPAFieldNumber = 38;
  double cpa() const;
  void set_cpa(double value);

  // optional bool Simulation = 39;
  void clear_simulation();
  static const int kSimulationFieldNumber = 39;
  bool simulation() const;
  void set_simulation(bool value);

  // optional bool OwnShip = 40;
  void clear_ownship();
  static const int kOwnShipFieldNumber = 40;
  bool ownship() const;
  void set_ownship(bool value);

  // optional int32 ReportInterval = 41;
  void clear_reportinterval();
  static const int kReportIntervalFieldNumber = 41;
  ::google::protobuf::int32 reportinterval() const;
  void set_reportinterval(::google::protobuf::int32 value);

  // optional double Length = 42;
  void clear_length();
  static const int kLengthFieldNumber = 42;
  double length() const;
  void set_length(double value);

  // optional double Width = 43;
  void clear_width();
  static const int kWidthFieldNumber = 43;
  double width() const;
  void set_width(double value);

  // optional bool SetShipSize = 44;
  void clear_setshipsize();
  static const int kSetShipSizeFieldNumber = 44;
  bool setshipsize() const;
  void set_setshipsize(bool value);

  // optional string ChShipName = 45;
  void clear_chshipname();
  static const int kChShipNameFieldNumber = 45;
  const ::std::string& chshipname() const;
  void set_chshipname(const ::std::string& value);
  void set_chshipname(const char* value);
  void set_chshipname(const char* value, size_t size);
  ::std::string* mutable_chshipname();
  ::std::string* release_chshipname();
  void set_allocated_chshipname(::std::string* chshipname);

  // optional string Nationality = 46;
  void clear_nationality();
  static const int kNationalityFieldNumber = 46;
  const ::std::string& nationality() const;
  void set_nationality(const ::std::string& value);
  void set_nationality(const char* value);
  void set_nationality(const char* value, size_t size);
  ::std::string* mutable_nationality();
  ::std::string* release_nationality();
  void set_allocated_nationality(::std::string* nationality);

  // optional string Note = 47;
  void clear_note();
  static const int kNoteFieldNumber = 47;
  const ::std::string& note() const;
  void set_note(const ::std::string& value);
  void set_note(const char* value);
  void set_note(const char* value, size_t size);
  ::std::string* mutable_note();
  ::std::string* release_note();
  void set_allocated_note(::std::string* note);

  // optional string ID = 48;
  void clear_id();
  static const int kIDFieldNumber = 48;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string RadarID = 49;
  void clear_radarid();
  static const int kRadarIDFieldNumber = 49;
  const ::std::string& radarid() const;
  void set_radarid(const ::std::string& value);
  void set_radarid(const char* value);
  void set_radarid(const char* value, size_t size);
  ::std::string* mutable_radarid();
  ::std::string* release_radarid();
  void set_allocated_radarid(::std::string* radarid);

  // optional int32 Source = 50;
  void clear_source();
  static const int kSourceFieldNumber = 50;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // optional int32 Reserved = 51;
  void clear_reserved();
  static const int kReservedFieldNumber = 51;
  ::google::protobuf::int32 reserved() const;
  void set_reserved(::google::protobuf::int32 value);

  // optional int32 Rng = 52;
  void clear_rng();
  static const int kRngFieldNumber = 52;
  ::google::protobuf::int32 rng() const;
  void set_rng(::google::protobuf::int32 value);

  // optional double RadarBrg = 53;
  void clear_radarbrg();
  static const int kRadarBrgFieldNumber = 53;
  double radarbrg() const;
  void set_radarbrg(double value);

  // optional double Spd = 54;
  void clear_spd();
  static const int kSpdFieldNumber = 54;
  double spd() const;
  void set_spd(double value);

  // optional double Crs = 55;
  void clear_crs();
  static const int kCrsFieldNumber = 55;
  double crs() const;
  void set_crs(double value);

  // optional int32 Scans = 56;
  void clear_scans();
  static const int kScansFieldNumber = 56;
  ::google::protobuf::int32 scans() const;
  void set_scans(::google::protobuf::int32 value);

  // optional int32 Flags = 57;
  void clear_flags();
  static const int kFlagsFieldNumber = 57;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional int32 Result = 58;
  void clear_result();
  static const int kResultFieldNumber = 58;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string RadarGUID = 59;
  void clear_radarguid();
  static const int kRadarGUIDFieldNumber = 59;
  const ::std::string& radarguid() const;
  void set_radarguid(const ::std::string& value);
  void set_radarguid(const char* value);
  void set_radarguid(const char* value, size_t size);
  ::std::string* mutable_radarguid();
  ::std::string* release_radarguid();
  void set_allocated_radarguid(::std::string* radarguid);

  // @@protoc_insertion_point(class_scope:hgAisMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mmsi_;
  ::google::protobuf::internal::ArenaStringPtr callsign_;
  ::google::protobuf::internal::ArenaStringPtr shipname_;
  ::google::protobuf::internal::ArenaStringPtr shiptype_;
  ::google::protobuf::internal::ArenaStringPtr destination_;
  ::google::protobuf::internal::ArenaStringPtr chshipname_;
  ::google::protobuf::internal::ArenaStringPtr nationality_;
  ::google::protobuf::internal::ArenaStringPtr note_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr radarid_;
  ::google::protobuf::internal::ArenaStringPtr radarguid_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 class__;
  ::google::protobuf::int32 navstatus_;
  ::google::protobuf::int32 rotais_;
  double sog_;
  double lon_;
  double lat_;
  double cog_;
  double hdg_;
  ::google::protobuf::int32 imo_;
  ::google::protobuf::int32 posaccuracy_;
  ::google::protobuf::int32 equipmenttype_;
  ::google::protobuf::int32 eta_mo_;
  ::google::protobuf::int32 eta_day_;
  ::google::protobuf::int32 eta_hr_;
  double draft_;
  ::google::protobuf::int32 eta_min_;
  ::google::protobuf::int32 syncstate_;
  ::google::protobuf::int32 slotto_;
  ::google::protobuf::int32 dima_;
  ::google::protobuf::int32 dimb_;
  ::google::protobuf::int32 dimc_;
  ::google::protobuf::int64 reportticks_;
  ::google::protobuf::int32 dimd_;
  ::google::protobuf::int32 m_utc_hour_;
  ::google::protobuf::int64 recentperiod_;
  ::google::protobuf::int32 m_utc_min_;
  ::google::protobuf::int32 m_utc_sec_;
  double range_nm_;
  double brg_;
  double tcpa_;
  double cpa_;
  bool bcpa_valid_;
  bool simulation_;
  bool ownship_;
  bool setshipsize_;
  ::google::protobuf::int32 reportinterval_;
  double length_;
  double width_;
  ::google::protobuf::int32 source_;
  ::google::protobuf::int32 reserved_;
  double radarbrg_;
  double spd_;
  ::google::protobuf::int32 rng_;
  ::google::protobuf::int32 scans_;
  double crs_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAisMessage_2eproto_impl();
  friend void  protobuf_AddDesc_hgAisMessage_2eproto_impl();
  friend void protobuf_AssignDesc_hgAisMessage_2eproto();
  friend void protobuf_ShutdownFile_hgAisMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAisMessage> hgAisMessage_default_instance_;

// -------------------------------------------------------------------

class hgAisRepsone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hgAisRepsone) */ {
 public:
  hgAisRepsone();
  virtual ~hgAisRepsone();

  hgAisRepsone(const hgAisRepsone& from);

  inline hgAisRepsone& operator=(const hgAisRepsone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hgAisRepsone& default_instance();

  static const hgAisRepsone* internal_default_instance();

  void Swap(hgAisRepsone* other);

  // implements Message ----------------------------------------------

  inline hgAisRepsone* New() const { return New(NULL); }

  hgAisRepsone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hgAisRepsone& from);
  void MergeFrom(const hgAisRepsone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(hgAisRepsone* other);
  void UnsafeMergeFrom(const hgAisRepsone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:hgAisRepsone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_hgAisMessage_2eproto_impl();
  friend void  protobuf_AddDesc_hgAisMessage_2eproto_impl();
  friend void protobuf_AssignDesc_hgAisMessage_2eproto();
  friend void protobuf_ShutdownFile_hgAisMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<hgAisRepsone> hgAisRepsone_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAisMessage

// optional int32 MID = 1;
inline void hgAisMessage::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::mid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.MID)
  return mid_;
}
inline void hgAisMessage::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.MID)
}

// optional int32 Class = 2;
inline void hgAisMessage::clear_class_() {
  class__ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::class_() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Class)
  return class__;
}
inline void hgAisMessage::set_class_(::google::protobuf::int32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Class)
}

// optional string MMSI = 3;
inline void hgAisMessage::clear_mmsi() {
  mmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::mmsi() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.MMSI)
  return mmsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_mmsi(const ::std::string& value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.MMSI)
}
inline void hgAisMessage::set_mmsi(const char* value) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.MMSI)
}
inline void hgAisMessage::set_mmsi(const char* value, size_t size) {
  
  mmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.MMSI)
}
inline ::std::string* hgAisMessage::mutable_mmsi() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.MMSI)
  return mmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_mmsi() {
  // @@protoc_insertion_point(field_release:hgAisMessage.MMSI)
  
  return mmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_mmsi(::std::string* mmsi) {
  if (mmsi != NULL) {
    
  } else {
    
  }
  mmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mmsi);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.MMSI)
}

// optional int32 NavStatus = 4;
inline void hgAisMessage::clear_navstatus() {
  navstatus_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::navstatus() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.NavStatus)
  return navstatus_;
}
inline void hgAisMessage::set_navstatus(::google::protobuf::int32 value) {
  
  navstatus_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.NavStatus)
}

// optional int32 ROTAIS = 5;
inline void hgAisMessage::clear_rotais() {
  rotais_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::rotais() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ROTAIS)
  return rotais_;
}
inline void hgAisMessage::set_rotais(::google::protobuf::int32 value) {
  
  rotais_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ROTAIS)
}

// optional double SOG = 6;
inline void hgAisMessage::clear_sog() {
  sog_ = 0;
}
inline double hgAisMessage::sog() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SOG)
  return sog_;
}
inline void hgAisMessage::set_sog(double value) {
  
  sog_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SOG)
}

// optional double Lon = 7;
inline void hgAisMessage::clear_lon() {
  lon_ = 0;
}
inline double hgAisMessage::lon() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Lon)
  return lon_;
}
inline void hgAisMessage::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Lon)
}

// optional double Lat = 8;
inline void hgAisMessage::clear_lat() {
  lat_ = 0;
}
inline double hgAisMessage::lat() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Lat)
  return lat_;
}
inline void hgAisMessage::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Lat)
}

// optional double COG = 9;
inline void hgAisMessage::clear_cog() {
  cog_ = 0;
}
inline double hgAisMessage::cog() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.COG)
  return cog_;
}
inline void hgAisMessage::set_cog(double value) {
  
  cog_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.COG)
}

// optional double HDG = 10;
inline void hgAisMessage::clear_hdg() {
  hdg_ = 0;
}
inline double hgAisMessage::hdg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.HDG)
  return hdg_;
}
inline void hgAisMessage::set_hdg(double value) {
  
  hdg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.HDG)
}

// optional int32 IMO = 11;
inline void hgAisMessage::clear_imo() {
  imo_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::imo() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.IMO)
  return imo_;
}
inline void hgAisMessage::set_imo(::google::protobuf::int32 value) {
  
  imo_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.IMO)
}

// optional string CallSign = 12;
inline void hgAisMessage::clear_callsign() {
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::callsign() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.CallSign)
  return callsign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_callsign(const ::std::string& value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.CallSign)
}
inline void hgAisMessage::set_callsign(const char* value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.CallSign)
}
inline void hgAisMessage::set_callsign(const char* value, size_t size) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.CallSign)
}
inline ::std::string* hgAisMessage::mutable_callsign() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.CallSign)
  return callsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_callsign() {
  // @@protoc_insertion_point(field_release:hgAisMessage.CallSign)
  
  return callsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_callsign(::std::string* callsign) {
  if (callsign != NULL) {
    
  } else {
    
  }
  callsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callsign);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.CallSign)
}

// optional string ShipName = 13;
inline void hgAisMessage::clear_shipname() {
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::shipname() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ShipName)
  return shipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_shipname(const ::std::string& value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ShipName)
}
inline void hgAisMessage::set_shipname(const char* value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ShipName)
}
inline void hgAisMessage::set_shipname(const char* value, size_t size) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ShipName)
}
inline ::std::string* hgAisMessage::mutable_shipname() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ShipName)
  return shipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_shipname() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ShipName)
  
  return shipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_shipname(::std::string* shipname) {
  if (shipname != NULL) {
    
  } else {
    
  }
  shipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipname);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ShipName)
}

// optional string ShipType = 14;
inline void hgAisMessage::clear_shiptype() {
  shiptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::shiptype() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ShipType)
  return shiptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_shiptype(const ::std::string& value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ShipType)
}
inline void hgAisMessage::set_shiptype(const char* value) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ShipType)
}
inline void hgAisMessage::set_shiptype(const char* value, size_t size) {
  
  shiptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ShipType)
}
inline ::std::string* hgAisMessage::mutable_shiptype() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ShipType)
  return shiptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_shiptype() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ShipType)
  
  return shiptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_shiptype(::std::string* shiptype) {
  if (shiptype != NULL) {
    
  } else {
    
  }
  shiptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shiptype);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ShipType)
}

// optional int32 PosAccuracy = 15;
inline void hgAisMessage::clear_posaccuracy() {
  posaccuracy_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::posaccuracy() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.PosAccuracy)
  return posaccuracy_;
}
inline void hgAisMessage::set_posaccuracy(::google::protobuf::int32 value) {
  
  posaccuracy_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.PosAccuracy)
}

// optional int32 EquipmentType = 16;
inline void hgAisMessage::clear_equipmenttype() {
  equipmenttype_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::equipmenttype() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.EquipmentType)
  return equipmenttype_;
}
inline void hgAisMessage::set_equipmenttype(::google::protobuf::int32 value) {
  
  equipmenttype_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.EquipmentType)
}

// optional int32 ETA_Mo = 17;
inline void hgAisMessage::clear_eta_mo() {
  eta_mo_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::eta_mo() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Mo)
  return eta_mo_;
}
inline void hgAisMessage::set_eta_mo(::google::protobuf::int32 value) {
  
  eta_mo_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Mo)
}

// optional int32 ETA_Day = 18;
inline void hgAisMessage::clear_eta_day() {
  eta_day_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::eta_day() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Day)
  return eta_day_;
}
inline void hgAisMessage::set_eta_day(::google::protobuf::int32 value) {
  
  eta_day_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Day)
}

// optional int32 ETA_Hr = 19;
inline void hgAisMessage::clear_eta_hr() {
  eta_hr_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::eta_hr() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Hr)
  return eta_hr_;
}
inline void hgAisMessage::set_eta_hr(::google::protobuf::int32 value) {
  
  eta_hr_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Hr)
}

// optional int32 ETA_Min = 20;
inline void hgAisMessage::clear_eta_min() {
  eta_min_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::eta_min() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ETA_Min)
  return eta_min_;
}
inline void hgAisMessage::set_eta_min(::google::protobuf::int32 value) {
  
  eta_min_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ETA_Min)
}

// optional double Draft = 21;
inline void hgAisMessage::clear_draft() {
  draft_ = 0;
}
inline double hgAisMessage::draft() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Draft)
  return draft_;
}
inline void hgAisMessage::set_draft(double value) {
  
  draft_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Draft)
}

// optional string Destination = 22;
inline void hgAisMessage::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::destination() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Destination)
  return destination_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_destination(const ::std::string& value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Destination)
}
inline void hgAisMessage::set_destination(const char* value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Destination)
}
inline void hgAisMessage::set_destination(const char* value, size_t size) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Destination)
}
inline ::std::string* hgAisMessage::mutable_destination() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_destination() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Destination)
  
  return destination_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    
  } else {
    
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Destination)
}

// optional int32 SyncState = 23;
inline void hgAisMessage::clear_syncstate() {
  syncstate_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::syncstate() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SyncState)
  return syncstate_;
}
inline void hgAisMessage::set_syncstate(::google::protobuf::int32 value) {
  
  syncstate_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SyncState)
}

// optional int32 SlotTO = 24;
inline void hgAisMessage::clear_slotto() {
  slotto_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::slotto() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SlotTO)
  return slotto_;
}
inline void hgAisMessage::set_slotto(::google::protobuf::int32 value) {
  
  slotto_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SlotTO)
}

// optional int32 DimA = 25;
inline void hgAisMessage::clear_dima() {
  dima_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::dima() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimA)
  return dima_;
}
inline void hgAisMessage::set_dima(::google::protobuf::int32 value) {
  
  dima_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimA)
}

// optional int32 DimB = 26;
inline void hgAisMessage::clear_dimb() {
  dimb_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::dimb() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimB)
  return dimb_;
}
inline void hgAisMessage::set_dimb(::google::protobuf::int32 value) {
  
  dimb_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimB)
}

// optional int32 DimC = 27;
inline void hgAisMessage::clear_dimc() {
  dimc_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::dimc() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimC)
  return dimc_;
}
inline void hgAisMessage::set_dimc(::google::protobuf::int32 value) {
  
  dimc_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimC)
}

// optional int32 DimD = 28;
inline void hgAisMessage::clear_dimd() {
  dimd_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::dimd() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.DimD)
  return dimd_;
}
inline void hgAisMessage::set_dimd(::google::protobuf::int32 value) {
  
  dimd_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.DimD)
}

// optional int64 ReportTicks = 29;
inline void hgAisMessage::clear_reportticks() {
  reportticks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgAisMessage::reportticks() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ReportTicks)
  return reportticks_;
}
inline void hgAisMessage::set_reportticks(::google::protobuf::int64 value) {
  
  reportticks_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ReportTicks)
}

// optional int64 RecentPeriod = 30;
inline void hgAisMessage::clear_recentperiod() {
  recentperiod_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 hgAisMessage::recentperiod() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RecentPeriod)
  return recentperiod_;
}
inline void hgAisMessage::set_recentperiod(::google::protobuf::int64 value) {
  
  recentperiod_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.RecentPeriod)
}

// optional int32 m_utc_hour = 31;
inline void hgAisMessage::clear_m_utc_hour() {
  m_utc_hour_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::m_utc_hour() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_hour)
  return m_utc_hour_;
}
inline void hgAisMessage::set_m_utc_hour(::google::protobuf::int32 value) {
  
  m_utc_hour_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_hour)
}

// optional int32 m_utc_min = 32;
inline void hgAisMessage::clear_m_utc_min() {
  m_utc_min_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::m_utc_min() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_min)
  return m_utc_min_;
}
inline void hgAisMessage::set_m_utc_min(::google::protobuf::int32 value) {
  
  m_utc_min_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_min)
}

// optional int32 m_utc_sec = 33;
inline void hgAisMessage::clear_m_utc_sec() {
  m_utc_sec_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::m_utc_sec() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.m_utc_sec)
  return m_utc_sec_;
}
inline void hgAisMessage::set_m_utc_sec(::google::protobuf::int32 value) {
  
  m_utc_sec_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.m_utc_sec)
}

// optional double Range_NM = 34;
inline void hgAisMessage::clear_range_nm() {
  range_nm_ = 0;
}
inline double hgAisMessage::range_nm() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Range_NM)
  return range_nm_;
}
inline void hgAisMessage::set_range_nm(double value) {
  
  range_nm_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Range_NM)
}

// optional double Brg = 35;
inline void hgAisMessage::clear_brg() {
  brg_ = 0;
}
inline double hgAisMessage::brg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Brg)
  return brg_;
}
inline void hgAisMessage::set_brg(double value) {
  
  brg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Brg)
}

// optional bool bCPA_Valid = 36;
inline void hgAisMessage::clear_bcpa_valid() {
  bcpa_valid_ = false;
}
inline bool hgAisMessage::bcpa_valid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.bCPA_Valid)
  return bcpa_valid_;
}
inline void hgAisMessage::set_bcpa_valid(bool value) {
  
  bcpa_valid_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.bCPA_Valid)
}

// optional double TCPA = 37;
inline void hgAisMessage::clear_tcpa() {
  tcpa_ = 0;
}
inline double hgAisMessage::tcpa() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.TCPA)
  return tcpa_;
}
inline void hgAisMessage::set_tcpa(double value) {
  
  tcpa_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.TCPA)
}

// optional double CPA = 38;
inline void hgAisMessage::clear_cpa() {
  cpa_ = 0;
}
inline double hgAisMessage::cpa() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.CPA)
  return cpa_;
}
inline void hgAisMessage::set_cpa(double value) {
  
  cpa_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.CPA)
}

// optional bool Simulation = 39;
inline void hgAisMessage::clear_simulation() {
  simulation_ = false;
}
inline bool hgAisMessage::simulation() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Simulation)
  return simulation_;
}
inline void hgAisMessage::set_simulation(bool value) {
  
  simulation_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Simulation)
}

// optional bool OwnShip = 40;
inline void hgAisMessage::clear_ownship() {
  ownship_ = false;
}
inline bool hgAisMessage::ownship() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.OwnShip)
  return ownship_;
}
inline void hgAisMessage::set_ownship(bool value) {
  
  ownship_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.OwnShip)
}

// optional int32 ReportInterval = 41;
inline void hgAisMessage::clear_reportinterval() {
  reportinterval_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::reportinterval() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ReportInterval)
  return reportinterval_;
}
inline void hgAisMessage::set_reportinterval(::google::protobuf::int32 value) {
  
  reportinterval_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.ReportInterval)
}

// optional double Length = 42;
inline void hgAisMessage::clear_length() {
  length_ = 0;
}
inline double hgAisMessage::length() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Length)
  return length_;
}
inline void hgAisMessage::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Length)
}

// optional double Width = 43;
inline void hgAisMessage::clear_width() {
  width_ = 0;
}
inline double hgAisMessage::width() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Width)
  return width_;
}
inline void hgAisMessage::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Width)
}

// optional bool SetShipSize = 44;
inline void hgAisMessage::clear_setshipsize() {
  setshipsize_ = false;
}
inline bool hgAisMessage::setshipsize() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.SetShipSize)
  return setshipsize_;
}
inline void hgAisMessage::set_setshipsize(bool value) {
  
  setshipsize_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.SetShipSize)
}

// optional string ChShipName = 45;
inline void hgAisMessage::clear_chshipname() {
  chshipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::chshipname() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ChShipName)
  return chshipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_chshipname(const ::std::string& value) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ChShipName)
}
inline void hgAisMessage::set_chshipname(const char* value) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ChShipName)
}
inline void hgAisMessage::set_chshipname(const char* value, size_t size) {
  
  chshipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ChShipName)
}
inline ::std::string* hgAisMessage::mutable_chshipname() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ChShipName)
  return chshipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_chshipname() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ChShipName)
  
  return chshipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_chshipname(::std::string* chshipname) {
  if (chshipname != NULL) {
    
  } else {
    
  }
  chshipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chshipname);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ChShipName)
}

// optional string Nationality = 46;
inline void hgAisMessage::clear_nationality() {
  nationality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::nationality() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Nationality)
  return nationality_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_nationality(const ::std::string& value) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Nationality)
}
inline void hgAisMessage::set_nationality(const char* value) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Nationality)
}
inline void hgAisMessage::set_nationality(const char* value, size_t size) {
  
  nationality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Nationality)
}
inline ::std::string* hgAisMessage::mutable_nationality() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Nationality)
  return nationality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_nationality() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Nationality)
  
  return nationality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_nationality(::std::string* nationality) {
  if (nationality != NULL) {
    
  } else {
    
  }
  nationality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nationality);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Nationality)
}

// optional string Note = 47;
inline void hgAisMessage::clear_note() {
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::note() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Note)
  return note_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_note(const ::std::string& value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.Note)
}
inline void hgAisMessage::set_note(const char* value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.Note)
}
inline void hgAisMessage::set_note(const char* value, size_t size) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.Note)
}
inline ::std::string* hgAisMessage::mutable_note() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.Note)
  return note_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_note() {
  // @@protoc_insertion_point(field_release:hgAisMessage.Note)
  
  return note_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_note(::std::string* note) {
  if (note != NULL) {
    
  } else {
    
  }
  note_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), note);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.Note)
}

// optional string ID = 48;
inline void hgAisMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::id() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.ID)
}
inline void hgAisMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.ID)
}
inline void hgAisMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.ID)
}
inline ::std::string* hgAisMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_id() {
  // @@protoc_insertion_point(field_release:hgAisMessage.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.ID)
}

// optional string RadarID = 49;
inline void hgAisMessage::clear_radarid() {
  radarid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::radarid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarID)
  return radarid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_radarid(const ::std::string& value) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarID)
}
inline void hgAisMessage::set_radarid(const char* value) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.RadarID)
}
inline void hgAisMessage::set_radarid(const char* value, size_t size) {
  
  radarid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.RadarID)
}
inline ::std::string* hgAisMessage::mutable_radarid() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.RadarID)
  return radarid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_radarid() {
  // @@protoc_insertion_point(field_release:hgAisMessage.RadarID)
  
  return radarid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_radarid(::std::string* radarid) {
  if (radarid != NULL) {
    
  } else {
    
  }
  radarid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radarid);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.RadarID)
}

// optional int32 Source = 50;
inline void hgAisMessage::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::source() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Source)
  return source_;
}
inline void hgAisMessage::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Source)
}

// optional int32 Reserved = 51;
inline void hgAisMessage::clear_reserved() {
  reserved_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::reserved() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Reserved)
  return reserved_;
}
inline void hgAisMessage::set_reserved(::google::protobuf::int32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Reserved)
}

// optional int32 Rng = 52;
inline void hgAisMessage::clear_rng() {
  rng_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::rng() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Rng)
  return rng_;
}
inline void hgAisMessage::set_rng(::google::protobuf::int32 value) {
  
  rng_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Rng)
}

// optional double RadarBrg = 53;
inline void hgAisMessage::clear_radarbrg() {
  radarbrg_ = 0;
}
inline double hgAisMessage::radarbrg() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarBrg)
  return radarbrg_;
}
inline void hgAisMessage::set_radarbrg(double value) {
  
  radarbrg_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarBrg)
}

// optional double Spd = 54;
inline void hgAisMessage::clear_spd() {
  spd_ = 0;
}
inline double hgAisMessage::spd() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Spd)
  return spd_;
}
inline void hgAisMessage::set_spd(double value) {
  
  spd_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Spd)
}

// optional double Crs = 55;
inline void hgAisMessage::clear_crs() {
  crs_ = 0;
}
inline double hgAisMessage::crs() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Crs)
  return crs_;
}
inline void hgAisMessage::set_crs(double value) {
  
  crs_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Crs)
}

// optional int32 Scans = 56;
inline void hgAisMessage::clear_scans() {
  scans_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::scans() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Scans)
  return scans_;
}
inline void hgAisMessage::set_scans(::google::protobuf::int32 value) {
  
  scans_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Scans)
}

// optional int32 Flags = 57;
inline void hgAisMessage::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::flags() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Flags)
  return flags_;
}
inline void hgAisMessage::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Flags)
}

// optional int32 Result = 58;
inline void hgAisMessage::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 hgAisMessage::result() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.Result)
  return result_;
}
inline void hgAisMessage::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:hgAisMessage.Result)
}

// optional string RadarGUID = 59;
inline void hgAisMessage::clear_radarguid() {
  radarguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisMessage::radarguid() const {
  // @@protoc_insertion_point(field_get:hgAisMessage.RadarGUID)
  return radarguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_radarguid(const ::std::string& value) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisMessage.RadarGUID)
}
inline void hgAisMessage::set_radarguid(const char* value) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisMessage.RadarGUID)
}
inline void hgAisMessage::set_radarguid(const char* value, size_t size) {
  
  radarguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisMessage.RadarGUID)
}
inline ::std::string* hgAisMessage::mutable_radarguid() {
  
  // @@protoc_insertion_point(field_mutable:hgAisMessage.RadarGUID)
  return radarguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisMessage::release_radarguid() {
  // @@protoc_insertion_point(field_release:hgAisMessage.RadarGUID)
  
  return radarguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisMessage::set_allocated_radarguid(::std::string* radarguid) {
  if (radarguid != NULL) {
    
  } else {
    
  }
  radarguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), radarguid);
  // @@protoc_insertion_point(field_set_allocated:hgAisMessage.RadarGUID)
}

inline const hgAisMessage* hgAisMessage::internal_default_instance() {
  return &hgAisMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// hgAisRepsone

// optional string result = 1;
inline void hgAisRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& hgAisRepsone::result() const {
  // @@protoc_insertion_point(field_get:hgAisRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hgAisRepsone.result)
}
inline void hgAisRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hgAisRepsone.result)
}
inline void hgAisRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hgAisRepsone.result)
}
inline ::std::string* hgAisRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:hgAisRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* hgAisRepsone::release_result() {
  // @@protoc_insertion_point(field_release:hgAisRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void hgAisRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:hgAisRepsone.result)
}

inline const hgAisRepsone* hgAisRepsone::internal_default_instance() {
  return &hgAisRepsone_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hgAisMessage_2eproto__INCLUDED
