// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hgAlarmArea.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hgAlarmArea.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* hgAlarmArea_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hgAlarmArea_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hgAlarmArea_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hgAlarmArea_2eproto() {
  protobuf_AddDesc_hgAlarmArea_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hgAlarmArea.proto");
  GOOGLE_CHECK(file != NULL);
  hgAlarmArea_descriptor_ = file->message_type(0);
  static const int hgAlarmArea_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlarmArea, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlarmArea, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlarmArea, polygon_),
  };
  hgAlarmArea_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      hgAlarmArea_descriptor_,
      hgAlarmArea::internal_default_instance(),
      hgAlarmArea_offsets_,
      -1,
      -1,
      -1,
      sizeof(hgAlarmArea),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hgAlarmArea, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hgAlarmArea_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      hgAlarmArea_descriptor_, hgAlarmArea::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hgAlarmArea_2eproto() {
  hgAlarmArea_default_instance_.Shutdown();
  delete hgAlarmArea_reflection_;
}

void protobuf_InitDefaults_hgAlarmArea_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_hgPolygonMes_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  hgAlarmArea_default_instance_.DefaultConstruct();
  hgAlarmArea_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_hgAlarmArea_2eproto_once_);
void protobuf_InitDefaults_hgAlarmArea_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_hgAlarmArea_2eproto_once_,
                 &protobuf_InitDefaults_hgAlarmArea_2eproto_impl);
}
void protobuf_AddDesc_hgAlarmArea_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_hgAlarmArea_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021hgAlarmArea.proto\032\022hgPolygonMes.proto\""
    "I\n\013hgAlarmArea\022\014\n\004type\030\001 \001(\005\022\014\n\004mmsi\030\002 \003"
    "(\t\022\036\n\007polygon\030\003 \003(\0132\r.hgPolygonMesb\006prot"
    "o3", 122);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hgAlarmArea.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_hgPolygonMes_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hgAlarmArea_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_hgAlarmArea_2eproto_once_);
void protobuf_AddDesc_hgAlarmArea_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_hgAlarmArea_2eproto_once_,
                 &protobuf_AddDesc_hgAlarmArea_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hgAlarmArea_2eproto {
  StaticDescriptorInitializer_hgAlarmArea_2eproto() {
    protobuf_AddDesc_hgAlarmArea_2eproto();
  }
} static_descriptor_initializer_hgAlarmArea_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hgAlarmArea::kTypeFieldNumber;
const int hgAlarmArea::kMmsiFieldNumber;
const int hgAlarmArea::kPolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hgAlarmArea::hgAlarmArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_hgAlarmArea_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:hgAlarmArea)
}

void hgAlarmArea::InitAsDefaultInstance() {
}

hgAlarmArea::hgAlarmArea(const hgAlarmArea& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hgAlarmArea)
}

void hgAlarmArea::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

hgAlarmArea::~hgAlarmArea() {
  // @@protoc_insertion_point(destructor:hgAlarmArea)
  SharedDtor();
}

void hgAlarmArea::SharedDtor() {
}

void hgAlarmArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hgAlarmArea::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hgAlarmArea_descriptor_;
}

const hgAlarmArea& hgAlarmArea::default_instance() {
  protobuf_InitDefaults_hgAlarmArea_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<hgAlarmArea> hgAlarmArea_default_instance_;

hgAlarmArea* hgAlarmArea::New(::google::protobuf::Arena* arena) const {
  hgAlarmArea* n = new hgAlarmArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hgAlarmArea::Clear() {
// @@protoc_insertion_point(message_clear_start:hgAlarmArea)
  type_ = 0;
  mmsi_.Clear();
  polygon_.Clear();
}

bool hgAlarmArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hgAlarmArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mmsi;
        break;
      }

      // repeated string mmsi = 2;
      case 2: {
        if (tag == 18) {
         parse_mmsi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mmsi(this->mmsi_size() - 1).data(),
            this->mmsi(this->mmsi_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hgAlarmArea.mmsi"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mmsi;
        if (input->ExpectTag(26)) goto parse_polygon;
        break;
      }

      // repeated .hgPolygonMes polygon = 3;
      case 3: {
        if (tag == 26) {
         parse_polygon:
          DO_(input->IncrementRecursionDepth());
         parse_loop_polygon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_polygon;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hgAlarmArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hgAlarmArea)
  return false;
#undef DO_
}

void hgAlarmArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hgAlarmArea)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated string mmsi = 2;
  for (int i = 0; i < this->mmsi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi(i).data(), this->mmsi(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlarmArea.mmsi");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->mmsi(i), output);
  }

  // repeated .hgPolygonMes polygon = 3;
  for (unsigned int i = 0, n = this->polygon_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->polygon(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hgAlarmArea)
}

::google::protobuf::uint8* hgAlarmArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hgAlarmArea)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated string mmsi = 2;
  for (int i = 0; i < this->mmsi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mmsi(i).data(), this->mmsi(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hgAlarmArea.mmsi");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->mmsi(i), target);
  }

  // repeated .hgPolygonMes polygon = 3;
  for (unsigned int i = 0, n = this->polygon_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->polygon(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hgAlarmArea)
  return target;
}

size_t hgAlarmArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hgAlarmArea)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // repeated string mmsi = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mmsi_size());
  for (int i = 0; i < this->mmsi_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mmsi(i));
  }

  // repeated .hgPolygonMes polygon = 3;
  {
    unsigned int count = this->polygon_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->polygon(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hgAlarmArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hgAlarmArea)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const hgAlarmArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hgAlarmArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hgAlarmArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hgAlarmArea)
    UnsafeMergeFrom(*source);
  }
}

void hgAlarmArea::MergeFrom(const hgAlarmArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hgAlarmArea)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void hgAlarmArea::UnsafeMergeFrom(const hgAlarmArea& from) {
  GOOGLE_DCHECK(&from != this);
  mmsi_.UnsafeMergeFrom(from.mmsi_);
  polygon_.MergeFrom(from.polygon_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void hgAlarmArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hgAlarmArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hgAlarmArea::CopyFrom(const hgAlarmArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hgAlarmArea)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool hgAlarmArea::IsInitialized() const {

  return true;
}

void hgAlarmArea::Swap(hgAlarmArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hgAlarmArea::InternalSwap(hgAlarmArea* other) {
  std::swap(type_, other->type_);
  mmsi_.UnsafeArenaSwap(&other->mmsi_);
  polygon_.UnsafeArenaSwap(&other->polygon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hgAlarmArea::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hgAlarmArea_descriptor_;
  metadata.reflection = hgAlarmArea_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hgAlarmArea

// optional int32 type = 1;
void hgAlarmArea::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 hgAlarmArea::type() const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.type)
  return type_;
}
void hgAlarmArea::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hgAlarmArea.type)
}

// repeated string mmsi = 2;
int hgAlarmArea::mmsi_size() const {
  return mmsi_.size();
}
void hgAlarmArea::clear_mmsi() {
  mmsi_.Clear();
}
const ::std::string& hgAlarmArea::mmsi(int index) const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.mmsi)
  return mmsi_.Get(index);
}
::std::string* hgAlarmArea::mutable_mmsi(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlarmArea.mmsi)
  return mmsi_.Mutable(index);
}
void hgAlarmArea::set_mmsi(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:hgAlarmArea.mmsi)
  mmsi_.Mutable(index)->assign(value);
}
void hgAlarmArea::set_mmsi(int index, const char* value) {
  mmsi_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:hgAlarmArea.mmsi)
}
void hgAlarmArea::set_mmsi(int index, const char* value, size_t size) {
  mmsi_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:hgAlarmArea.mmsi)
}
::std::string* hgAlarmArea::add_mmsi() {
  // @@protoc_insertion_point(field_add_mutable:hgAlarmArea.mmsi)
  return mmsi_.Add();
}
void hgAlarmArea::add_mmsi(const ::std::string& value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:hgAlarmArea.mmsi)
}
void hgAlarmArea::add_mmsi(const char* value) {
  mmsi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:hgAlarmArea.mmsi)
}
void hgAlarmArea::add_mmsi(const char* value, size_t size) {
  mmsi_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:hgAlarmArea.mmsi)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
hgAlarmArea::mmsi() const {
  // @@protoc_insertion_point(field_list:hgAlarmArea.mmsi)
  return mmsi_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
hgAlarmArea::mutable_mmsi() {
  // @@protoc_insertion_point(field_mutable_list:hgAlarmArea.mmsi)
  return &mmsi_;
}

// repeated .hgPolygonMes polygon = 3;
int hgAlarmArea::polygon_size() const {
  return polygon_.size();
}
void hgAlarmArea::clear_polygon() {
  polygon_.Clear();
}
const ::hgPolygonMes& hgAlarmArea::polygon(int index) const {
  // @@protoc_insertion_point(field_get:hgAlarmArea.polygon)
  return polygon_.Get(index);
}
::hgPolygonMes* hgAlarmArea::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:hgAlarmArea.polygon)
  return polygon_.Mutable(index);
}
::hgPolygonMes* hgAlarmArea::add_polygon() {
  // @@protoc_insertion_point(field_add:hgAlarmArea.polygon)
  return polygon_.Add();
}
::google::protobuf::RepeatedPtrField< ::hgPolygonMes >*
hgAlarmArea::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:hgAlarmArea.polygon)
  return &polygon_;
}
const ::google::protobuf::RepeatedPtrField< ::hgPolygonMes >&
hgAlarmArea::polygon() const {
  // @@protoc_insertion_point(field_list:hgAlarmArea.polygon)
  return polygon_;
}

inline const hgAlarmArea* hgAlarmArea::internal_default_instance() {
  return &hgAlarmArea_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
