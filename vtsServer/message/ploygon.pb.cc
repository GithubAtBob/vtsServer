// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ploygon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ploygon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PloygonRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PloygonRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PloygonRepsone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PloygonRepsone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ploygon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ploygon_2eproto() {
  protobuf_AddDesc_ploygon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ploygon.proto");
  GOOGLE_CHECK(file != NULL);
  PloygonRequest_descriptor_ = file->message_type(0);
  static const int PloygonRequest_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, linestyle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, fullstyle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, linewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, waringid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, waringtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, drawman_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, isshare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, linecolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, fullcolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, info_),
  };
  PloygonRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PloygonRequest_descriptor_,
      PloygonRequest::internal_default_instance(),
      PloygonRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PloygonRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRequest, _internal_metadata_));
  PloygonRepsone_descriptor_ = file->message_type(1);
  static const int PloygonRepsone_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRepsone, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRepsone, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRepsone, ploygons_),
  };
  PloygonRepsone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PloygonRepsone_descriptor_,
      PloygonRepsone::internal_default_instance(),
      PloygonRepsone_offsets_,
      -1,
      -1,
      -1,
      sizeof(PloygonRepsone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PloygonRepsone, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ploygon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PloygonRequest_descriptor_, PloygonRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PloygonRepsone_descriptor_, PloygonRepsone::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ploygon_2eproto() {
  PloygonRequest_default_instance_.Shutdown();
  delete PloygonRequest_reflection_;
  PloygonRepsone_default_instance_.Shutdown();
  delete PloygonRepsone_reflection_;
}

void protobuf_InitDefaults_ploygon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_PointMes_2eproto();
  ::protobuf_InitDefaults_waringinfo_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  PloygonRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PloygonRepsone_default_instance_.DefaultConstruct();
  PloygonRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PloygonRepsone_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ploygon_2eproto_once_);
void protobuf_InitDefaults_ploygon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ploygon_2eproto_once_,
                 &protobuf_InitDefaults_ploygon_2eproto_impl);
}
void protobuf_AddDesc_ploygon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ploygon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rploygon.proto\032\016PointMes.proto\032\020waringi"
    "nfo.proto\"\224\002\n\016PloygonRequest\022\014\n\004type\030\001 \001"
    "(\005\022\n\n\002ID\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\030\n\005point\030\004 "
    "\003(\0132\t.PointMes\022\021\n\tlinestyle\030\005 \001(\005\022\021\n\tful"
    "lstyle\030\006 \001(\005\022\021\n\tlinewidth\030\007 \001(\005\022\020\n\010warin"
    "gID\030\010 \003(\t\022\022\n\nwaringtype\030\t \001(\t\022\017\n\007drawman"
    "\030\n \001(\t\022\017\n\007isshare\030\013 \001(\010\022\021\n\tlinecolor\030\014 \001"
    "(\t\022\021\n\tfullcolor\030\r \001(\t\022\031\n\004info\030\016 \003(\0132\013.Wa"
    "ringInfo\"Q\n\016PloygonRepsone\022\014\n\004type\030\001 \001(\005"
    "\022\016\n\006result\030\002 \001(\t\022!\n\010ploygons\030\003 \003(\0132\017.Plo"
    "ygonRequestb\006proto3", 419);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ploygon.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_PointMes_2eproto();
  ::protobuf_AddDesc_waringinfo_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ploygon_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ploygon_2eproto_once_);
void protobuf_AddDesc_ploygon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ploygon_2eproto_once_,
                 &protobuf_AddDesc_ploygon_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ploygon_2eproto {
  StaticDescriptorInitializer_ploygon_2eproto() {
    protobuf_AddDesc_ploygon_2eproto();
  }
} static_descriptor_initializer_ploygon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PloygonRequest::kTypeFieldNumber;
const int PloygonRequest::kIDFieldNumber;
const int PloygonRequest::kNameFieldNumber;
const int PloygonRequest::kPointFieldNumber;
const int PloygonRequest::kLinestyleFieldNumber;
const int PloygonRequest::kFullstyleFieldNumber;
const int PloygonRequest::kLinewidthFieldNumber;
const int PloygonRequest::kWaringIDFieldNumber;
const int PloygonRequest::kWaringtypeFieldNumber;
const int PloygonRequest::kDrawmanFieldNumber;
const int PloygonRequest::kIsshareFieldNumber;
const int PloygonRequest::kLinecolorFieldNumber;
const int PloygonRequest::kFullcolorFieldNumber;
const int PloygonRequest::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PloygonRequest::PloygonRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ploygon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PloygonRequest)
}

void PloygonRequest::InitAsDefaultInstance() {
}

PloygonRequest::PloygonRequest(const PloygonRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PloygonRequest)
}

void PloygonRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waringtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drawman_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linecolor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fullcolor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&isshare_) -
    reinterpret_cast<char*>(&type_) + sizeof(isshare_));
  _cached_size_ = 0;
}

PloygonRequest::~PloygonRequest() {
  // @@protoc_insertion_point(destructor:PloygonRequest)
  SharedDtor();
}

void PloygonRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waringtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drawman_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linecolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fullcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PloygonRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PloygonRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PloygonRequest_descriptor_;
}

const PloygonRequest& PloygonRequest::default_instance() {
  protobuf_InitDefaults_ploygon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PloygonRequest> PloygonRequest_default_instance_;

PloygonRequest* PloygonRequest::New(::google::protobuf::Arena* arena) const {
  PloygonRequest* n = new PloygonRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PloygonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PloygonRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PloygonRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PloygonRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, linewidth_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waringtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  drawman_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isshare_ = false;
  linecolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fullcolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  point_.Clear();
  waringid_.Clear();
  info_.Clear();
}

bool PloygonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PloygonRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ID;
        break;
      }

      // optional string ID = 2;
      case 2: {
        if (tag == 18) {
         parse_ID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_point;
        break;
      }

      // repeated .PointMes point = 4;
      case 4: {
        if (tag == 34) {
         parse_point:
          DO_(input->IncrementRecursionDepth());
         parse_loop_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_point;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_linestyle;
        break;
      }

      // optional int32 linestyle = 5;
      case 5: {
        if (tag == 40) {
         parse_linestyle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &linestyle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_fullstyle;
        break;
      }

      // optional int32 fullstyle = 6;
      case 6: {
        if (tag == 48) {
         parse_fullstyle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fullstyle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_linewidth;
        break;
      }

      // optional int32 linewidth = 7;
      case 7: {
        if (tag == 56) {
         parse_linewidth:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &linewidth_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_waringID;
        break;
      }

      // repeated string waringID = 8;
      case 8: {
        if (tag == 66) {
         parse_waringID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_waringid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->waringid(this->waringid_size() - 1).data(),
            this->waringid(this->waringid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.waringID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_waringID;
        if (input->ExpectTag(74)) goto parse_waringtype;
        break;
      }

      // optional string waringtype = 9;
      case 9: {
        if (tag == 74) {
         parse_waringtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_waringtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->waringtype().data(), this->waringtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.waringtype"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_drawman;
        break;
      }

      // optional string drawman = 10;
      case 10: {
        if (tag == 82) {
         parse_drawman:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drawman()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drawman().data(), this->drawman().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.drawman"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_isshare;
        break;
      }

      // optional bool isshare = 11;
      case 11: {
        if (tag == 88) {
         parse_isshare:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isshare_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_linecolor;
        break;
      }

      // optional string linecolor = 12;
      case 12: {
        if (tag == 98) {
         parse_linecolor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_linecolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->linecolor().data(), this->linecolor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.linecolor"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_fullcolor;
        break;
      }

      // optional string fullcolor = 13;
      case 13: {
        if (tag == 106) {
         parse_fullcolor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fullcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fullcolor().data(), this->fullcolor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRequest.fullcolor"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_info;
        break;
      }

      // repeated .WaringInfo info = 14;
      case 14: {
        if (tag == 114) {
         parse_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PloygonRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PloygonRequest)
  return false;
#undef DO_
}

void PloygonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PloygonRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .PointMes point = 4;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->point(i), output);
  }

  // optional int32 linestyle = 5;
  if (this->linestyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->linestyle(), output);
  }

  // optional int32 fullstyle = 6;
  if (this->fullstyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fullstyle(), output);
  }

  // optional int32 linewidth = 7;
  if (this->linewidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->linewidth(), output);
  }

  // repeated string waringID = 8;
  for (int i = 0; i < this->waringid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->waringid(i).data(), this->waringid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.waringID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->waringid(i), output);
  }

  // optional string waringtype = 9;
  if (this->waringtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->waringtype().data(), this->waringtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.waringtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->waringtype(), output);
  }

  // optional string drawman = 10;
  if (this->drawman().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drawman().data(), this->drawman().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.drawman");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->drawman(), output);
  }

  // optional bool isshare = 11;
  if (this->isshare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->isshare(), output);
  }

  // optional string linecolor = 12;
  if (this->linecolor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->linecolor().data(), this->linecolor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.linecolor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->linecolor(), output);
  }

  // optional string fullcolor = 13;
  if (this->fullcolor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fullcolor().data(), this->fullcolor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.fullcolor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->fullcolor(), output);
  }

  // repeated .WaringInfo info = 14;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PloygonRequest)
}

::google::protobuf::uint8* PloygonRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PloygonRequest)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .PointMes point = 4;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->point(i), false, target);
  }

  // optional int32 linestyle = 5;
  if (this->linestyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->linestyle(), target);
  }

  // optional int32 fullstyle = 6;
  if (this->fullstyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fullstyle(), target);
  }

  // optional int32 linewidth = 7;
  if (this->linewidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->linewidth(), target);
  }

  // repeated string waringID = 8;
  for (int i = 0; i < this->waringid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->waringid(i).data(), this->waringid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.waringID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->waringid(i), target);
  }

  // optional string waringtype = 9;
  if (this->waringtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->waringtype().data(), this->waringtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.waringtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->waringtype(), target);
  }

  // optional string drawman = 10;
  if (this->drawman().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drawman().data(), this->drawman().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.drawman");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->drawman(), target);
  }

  // optional bool isshare = 11;
  if (this->isshare() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->isshare(), target);
  }

  // optional string linecolor = 12;
  if (this->linecolor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->linecolor().data(), this->linecolor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.linecolor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->linecolor(), target);
  }

  // optional string fullcolor = 13;
  if (this->fullcolor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fullcolor().data(), this->fullcolor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRequest.fullcolor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->fullcolor(), target);
  }

  // repeated .WaringInfo info = 14;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PloygonRequest)
  return target;
}

size_t PloygonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PloygonRequest)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string ID = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 linestyle = 5;
  if (this->linestyle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->linestyle());
  }

  // optional int32 fullstyle = 6;
  if (this->fullstyle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fullstyle());
  }

  // optional int32 linewidth = 7;
  if (this->linewidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->linewidth());
  }

  // optional string waringtype = 9;
  if (this->waringtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->waringtype());
  }

  // optional string drawman = 10;
  if (this->drawman().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drawman());
  }

  // optional bool isshare = 11;
  if (this->isshare() != 0) {
    total_size += 1 + 1;
  }

  // optional string linecolor = 12;
  if (this->linecolor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->linecolor());
  }

  // optional string fullcolor = 13;
  if (this->fullcolor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fullcolor());
  }

  // repeated .PointMes point = 4;
  {
    unsigned int count = this->point_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(i));
    }
  }

  // repeated string waringID = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->waringid_size());
  for (int i = 0; i < this->waringid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->waringid(i));
  }

  // repeated .WaringInfo info = 14;
  {
    unsigned int count = this->info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PloygonRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PloygonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PloygonRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PloygonRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PloygonRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PloygonRequest)
    UnsafeMergeFrom(*source);
  }
}

void PloygonRequest::MergeFrom(const PloygonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PloygonRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PloygonRequest::UnsafeMergeFrom(const PloygonRequest& from) {
  GOOGLE_DCHECK(&from != this);
  point_.MergeFrom(from.point_);
  waringid_.UnsafeMergeFrom(from.waringid_);
  info_.MergeFrom(from.info_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.linestyle() != 0) {
    set_linestyle(from.linestyle());
  }
  if (from.fullstyle() != 0) {
    set_fullstyle(from.fullstyle());
  }
  if (from.linewidth() != 0) {
    set_linewidth(from.linewidth());
  }
  if (from.waringtype().size() > 0) {

    waringtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waringtype_);
  }
  if (from.drawman().size() > 0) {

    drawman_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drawman_);
  }
  if (from.isshare() != 0) {
    set_isshare(from.isshare());
  }
  if (from.linecolor().size() > 0) {

    linecolor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.linecolor_);
  }
  if (from.fullcolor().size() > 0) {

    fullcolor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fullcolor_);
  }
}

void PloygonRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PloygonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PloygonRequest::CopyFrom(const PloygonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PloygonRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PloygonRequest::IsInitialized() const {

  return true;
}

void PloygonRequest::Swap(PloygonRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PloygonRequest::InternalSwap(PloygonRequest* other) {
  std::swap(type_, other->type_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  point_.UnsafeArenaSwap(&other->point_);
  std::swap(linestyle_, other->linestyle_);
  std::swap(fullstyle_, other->fullstyle_);
  std::swap(linewidth_, other->linewidth_);
  waringid_.UnsafeArenaSwap(&other->waringid_);
  waringtype_.Swap(&other->waringtype_);
  drawman_.Swap(&other->drawman_);
  std::swap(isshare_, other->isshare_);
  linecolor_.Swap(&other->linecolor_);
  fullcolor_.Swap(&other->fullcolor_);
  info_.UnsafeArenaSwap(&other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PloygonRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PloygonRequest_descriptor_;
  metadata.reflection = PloygonRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PloygonRequest

// optional int32 type = 1;
void PloygonRequest::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 PloygonRequest::type() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.type)
  return type_;
}
void PloygonRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PloygonRequest.type)
}

// optional string ID = 2;
void PloygonRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::id() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.ID)
}
void PloygonRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.ID)
}
void PloygonRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.ID)
}
::std::string* PloygonRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_id() {
  // @@protoc_insertion_point(field_release:PloygonRequest.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.ID)
}

// optional string name = 3;
void PloygonRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::name() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.name)
}
void PloygonRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.name)
}
void PloygonRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.name)
}
::std::string* PloygonRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_name() {
  // @@protoc_insertion_point(field_release:PloygonRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.name)
}

// repeated .PointMes point = 4;
int PloygonRequest::point_size() const {
  return point_.size();
}
void PloygonRequest::clear_point() {
  point_.Clear();
}
const ::PointMes& PloygonRequest::point(int index) const {
  // @@protoc_insertion_point(field_get:PloygonRequest.point)
  return point_.Get(index);
}
::PointMes* PloygonRequest::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:PloygonRequest.point)
  return point_.Mutable(index);
}
::PointMes* PloygonRequest::add_point() {
  // @@protoc_insertion_point(field_add:PloygonRequest.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::PointMes >*
PloygonRequest::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:PloygonRequest.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::PointMes >&
PloygonRequest::point() const {
  // @@protoc_insertion_point(field_list:PloygonRequest.point)
  return point_;
}

// optional int32 linestyle = 5;
void PloygonRequest::clear_linestyle() {
  linestyle_ = 0;
}
::google::protobuf::int32 PloygonRequest::linestyle() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.linestyle)
  return linestyle_;
}
void PloygonRequest::set_linestyle(::google::protobuf::int32 value) {
  
  linestyle_ = value;
  // @@protoc_insertion_point(field_set:PloygonRequest.linestyle)
}

// optional int32 fullstyle = 6;
void PloygonRequest::clear_fullstyle() {
  fullstyle_ = 0;
}
::google::protobuf::int32 PloygonRequest::fullstyle() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.fullstyle)
  return fullstyle_;
}
void PloygonRequest::set_fullstyle(::google::protobuf::int32 value) {
  
  fullstyle_ = value;
  // @@protoc_insertion_point(field_set:PloygonRequest.fullstyle)
}

// optional int32 linewidth = 7;
void PloygonRequest::clear_linewidth() {
  linewidth_ = 0;
}
::google::protobuf::int32 PloygonRequest::linewidth() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.linewidth)
  return linewidth_;
}
void PloygonRequest::set_linewidth(::google::protobuf::int32 value) {
  
  linewidth_ = value;
  // @@protoc_insertion_point(field_set:PloygonRequest.linewidth)
}

// repeated string waringID = 8;
int PloygonRequest::waringid_size() const {
  return waringid_.size();
}
void PloygonRequest::clear_waringid() {
  waringid_.Clear();
}
const ::std::string& PloygonRequest::waringid(int index) const {
  // @@protoc_insertion_point(field_get:PloygonRequest.waringID)
  return waringid_.Get(index);
}
::std::string* PloygonRequest::mutable_waringid(int index) {
  // @@protoc_insertion_point(field_mutable:PloygonRequest.waringID)
  return waringid_.Mutable(index);
}
void PloygonRequest::set_waringid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PloygonRequest.waringID)
  waringid_.Mutable(index)->assign(value);
}
void PloygonRequest::set_waringid(int index, const char* value) {
  waringid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PloygonRequest.waringID)
}
void PloygonRequest::set_waringid(int index, const char* value, size_t size) {
  waringid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.waringID)
}
::std::string* PloygonRequest::add_waringid() {
  // @@protoc_insertion_point(field_add_mutable:PloygonRequest.waringID)
  return waringid_.Add();
}
void PloygonRequest::add_waringid(const ::std::string& value) {
  waringid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PloygonRequest.waringID)
}
void PloygonRequest::add_waringid(const char* value) {
  waringid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PloygonRequest.waringID)
}
void PloygonRequest::add_waringid(const char* value, size_t size) {
  waringid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PloygonRequest.waringID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PloygonRequest::waringid() const {
  // @@protoc_insertion_point(field_list:PloygonRequest.waringID)
  return waringid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PloygonRequest::mutable_waringid() {
  // @@protoc_insertion_point(field_mutable_list:PloygonRequest.waringID)
  return &waringid_;
}

// optional string waringtype = 9;
void PloygonRequest::clear_waringtype() {
  waringtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::waringtype() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.waringtype)
  return waringtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_waringtype(const ::std::string& value) {
  
  waringtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.waringtype)
}
void PloygonRequest::set_waringtype(const char* value) {
  
  waringtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.waringtype)
}
void PloygonRequest::set_waringtype(const char* value, size_t size) {
  
  waringtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.waringtype)
}
::std::string* PloygonRequest::mutable_waringtype() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.waringtype)
  return waringtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_waringtype() {
  // @@protoc_insertion_point(field_release:PloygonRequest.waringtype)
  
  return waringtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_waringtype(::std::string* waringtype) {
  if (waringtype != NULL) {
    
  } else {
    
  }
  waringtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), waringtype);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.waringtype)
}

// optional string drawman = 10;
void PloygonRequest::clear_drawman() {
  drawman_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::drawman() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.drawman)
  return drawman_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_drawman(const ::std::string& value) {
  
  drawman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.drawman)
}
void PloygonRequest::set_drawman(const char* value) {
  
  drawman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.drawman)
}
void PloygonRequest::set_drawman(const char* value, size_t size) {
  
  drawman_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.drawman)
}
::std::string* PloygonRequest::mutable_drawman() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.drawman)
  return drawman_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_drawman() {
  // @@protoc_insertion_point(field_release:PloygonRequest.drawman)
  
  return drawman_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_drawman(::std::string* drawman) {
  if (drawman != NULL) {
    
  } else {
    
  }
  drawman_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drawman);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.drawman)
}

// optional bool isshare = 11;
void PloygonRequest::clear_isshare() {
  isshare_ = false;
}
bool PloygonRequest::isshare() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.isshare)
  return isshare_;
}
void PloygonRequest::set_isshare(bool value) {
  
  isshare_ = value;
  // @@protoc_insertion_point(field_set:PloygonRequest.isshare)
}

// optional string linecolor = 12;
void PloygonRequest::clear_linecolor() {
  linecolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::linecolor() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.linecolor)
  return linecolor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_linecolor(const ::std::string& value) {
  
  linecolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.linecolor)
}
void PloygonRequest::set_linecolor(const char* value) {
  
  linecolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.linecolor)
}
void PloygonRequest::set_linecolor(const char* value, size_t size) {
  
  linecolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.linecolor)
}
::std::string* PloygonRequest::mutable_linecolor() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.linecolor)
  return linecolor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_linecolor() {
  // @@protoc_insertion_point(field_release:PloygonRequest.linecolor)
  
  return linecolor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_linecolor(::std::string* linecolor) {
  if (linecolor != NULL) {
    
  } else {
    
  }
  linecolor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), linecolor);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.linecolor)
}

// optional string fullcolor = 13;
void PloygonRequest::clear_fullcolor() {
  fullcolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRequest::fullcolor() const {
  // @@protoc_insertion_point(field_get:PloygonRequest.fullcolor)
  return fullcolor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_fullcolor(const ::std::string& value) {
  
  fullcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRequest.fullcolor)
}
void PloygonRequest::set_fullcolor(const char* value) {
  
  fullcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRequest.fullcolor)
}
void PloygonRequest::set_fullcolor(const char* value, size_t size) {
  
  fullcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRequest.fullcolor)
}
::std::string* PloygonRequest::mutable_fullcolor() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRequest.fullcolor)
  return fullcolor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRequest::release_fullcolor() {
  // @@protoc_insertion_point(field_release:PloygonRequest.fullcolor)
  
  return fullcolor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRequest::set_allocated_fullcolor(::std::string* fullcolor) {
  if (fullcolor != NULL) {
    
  } else {
    
  }
  fullcolor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fullcolor);
  // @@protoc_insertion_point(field_set_allocated:PloygonRequest.fullcolor)
}

// repeated .WaringInfo info = 14;
int PloygonRequest::info_size() const {
  return info_.size();
}
void PloygonRequest::clear_info() {
  info_.Clear();
}
const ::WaringInfo& PloygonRequest::info(int index) const {
  // @@protoc_insertion_point(field_get:PloygonRequest.info)
  return info_.Get(index);
}
::WaringInfo* PloygonRequest::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:PloygonRequest.info)
  return info_.Mutable(index);
}
::WaringInfo* PloygonRequest::add_info() {
  // @@protoc_insertion_point(field_add:PloygonRequest.info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::WaringInfo >*
PloygonRequest::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:PloygonRequest.info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::WaringInfo >&
PloygonRequest::info() const {
  // @@protoc_insertion_point(field_list:PloygonRequest.info)
  return info_;
}

inline const PloygonRequest* PloygonRequest::internal_default_instance() {
  return &PloygonRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PloygonRepsone::kTypeFieldNumber;
const int PloygonRepsone::kResultFieldNumber;
const int PloygonRepsone::kPloygonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PloygonRepsone::PloygonRepsone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ploygon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PloygonRepsone)
}

void PloygonRepsone::InitAsDefaultInstance() {
}

PloygonRepsone::PloygonRepsone(const PloygonRepsone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PloygonRepsone)
}

void PloygonRepsone::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

PloygonRepsone::~PloygonRepsone() {
  // @@protoc_insertion_point(destructor:PloygonRepsone)
  SharedDtor();
}

void PloygonRepsone::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PloygonRepsone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PloygonRepsone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PloygonRepsone_descriptor_;
}

const PloygonRepsone& PloygonRepsone::default_instance() {
  protobuf_InitDefaults_ploygon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PloygonRepsone> PloygonRepsone_default_instance_;

PloygonRepsone* PloygonRepsone::New(::google::protobuf::Arena* arena) const {
  PloygonRepsone* n = new PloygonRepsone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PloygonRepsone::Clear() {
// @@protoc_insertion_point(message_clear_start:PloygonRepsone)
  type_ = 0;
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ploygons_.Clear();
}

bool PloygonRepsone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PloygonRepsone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result;
        break;
      }

      // optional string result = 2;
      case 2: {
        if (tag == 18) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PloygonRepsone.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ploygons;
        break;
      }

      // repeated .PloygonRequest ploygons = 3;
      case 3: {
        if (tag == 26) {
         parse_ploygons:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ploygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ploygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ploygons;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PloygonRepsone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PloygonRepsone)
  return false;
#undef DO_
}

void PloygonRepsone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PloygonRepsone)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRepsone.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  // repeated .PloygonRequest ploygons = 3;
  for (unsigned int i = 0, n = this->ploygons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ploygons(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PloygonRepsone)
}

::google::protobuf::uint8* PloygonRepsone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PloygonRepsone)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PloygonRepsone.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  // repeated .PloygonRequest ploygons = 3;
  for (unsigned int i = 0, n = this->ploygons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ploygons(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PloygonRepsone)
  return target;
}

size_t PloygonRepsone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PloygonRepsone)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // repeated .PloygonRequest ploygons = 3;
  {
    unsigned int count = this->ploygons_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ploygons(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PloygonRepsone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PloygonRepsone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PloygonRepsone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PloygonRepsone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PloygonRepsone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PloygonRepsone)
    UnsafeMergeFrom(*source);
  }
}

void PloygonRepsone::MergeFrom(const PloygonRepsone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PloygonRepsone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PloygonRepsone::UnsafeMergeFrom(const PloygonRepsone& from) {
  GOOGLE_DCHECK(&from != this);
  ploygons_.MergeFrom(from.ploygons_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void PloygonRepsone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PloygonRepsone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PloygonRepsone::CopyFrom(const PloygonRepsone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PloygonRepsone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PloygonRepsone::IsInitialized() const {

  return true;
}

void PloygonRepsone::Swap(PloygonRepsone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PloygonRepsone::InternalSwap(PloygonRepsone* other) {
  std::swap(type_, other->type_);
  result_.Swap(&other->result_);
  ploygons_.UnsafeArenaSwap(&other->ploygons_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PloygonRepsone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PloygonRepsone_descriptor_;
  metadata.reflection = PloygonRepsone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PloygonRepsone

// optional int32 type = 1;
void PloygonRepsone::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 PloygonRepsone::type() const {
  // @@protoc_insertion_point(field_get:PloygonRepsone.type)
  return type_;
}
void PloygonRepsone::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PloygonRepsone.type)
}

// optional string result = 2;
void PloygonRepsone::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PloygonRepsone::result() const {
  // @@protoc_insertion_point(field_get:PloygonRepsone.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRepsone::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PloygonRepsone.result)
}
void PloygonRepsone::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PloygonRepsone.result)
}
void PloygonRepsone::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PloygonRepsone.result)
}
::std::string* PloygonRepsone::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:PloygonRepsone.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PloygonRepsone::release_result() {
  // @@protoc_insertion_point(field_release:PloygonRepsone.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PloygonRepsone::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:PloygonRepsone.result)
}

// repeated .PloygonRequest ploygons = 3;
int PloygonRepsone::ploygons_size() const {
  return ploygons_.size();
}
void PloygonRepsone::clear_ploygons() {
  ploygons_.Clear();
}
const ::PloygonRequest& PloygonRepsone::ploygons(int index) const {
  // @@protoc_insertion_point(field_get:PloygonRepsone.ploygons)
  return ploygons_.Get(index);
}
::PloygonRequest* PloygonRepsone::mutable_ploygons(int index) {
  // @@protoc_insertion_point(field_mutable:PloygonRepsone.ploygons)
  return ploygons_.Mutable(index);
}
::PloygonRequest* PloygonRepsone::add_ploygons() {
  // @@protoc_insertion_point(field_add:PloygonRepsone.ploygons)
  return ploygons_.Add();
}
::google::protobuf::RepeatedPtrField< ::PloygonRequest >*
PloygonRepsone::mutable_ploygons() {
  // @@protoc_insertion_point(field_mutable_list:PloygonRepsone.ploygons)
  return &ploygons_;
}
const ::google::protobuf::RepeatedPtrField< ::PloygonRequest >&
PloygonRepsone::ploygons() const {
  // @@protoc_insertion_point(field_list:PloygonRepsone.ploygons)
  return ploygons_;
}

inline const PloygonRepsone* PloygonRepsone::internal_default_instance() {
  return &PloygonRepsone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
